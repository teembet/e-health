{"ast":null,"code":"import React from'react';import{ResponsiveContainer,AreaChart,Area,XAxis,YAxis,CartesianGrid,Tooltip}from'recharts';var data=[{month:'2015.01',a:4000,b:2400,c:2400},{month:'2015.02',a:3000,b:1398,c:2210},{month:'2015.03',a:2000,b:9800,c:2290},{month:'2015.04',a:2780,b:3908,c:2000},{month:'2015.05',a:1890,b:4800,c:2181},{month:'2015.06',a:2390,b:3800,c:2500},{month:'2015.07',a:3490,b:4300,c:2100}];var getPercent=function getPercent(value,total){var ratio=total>0?value/total:0;return toPercent(ratio,2);};var toPercent=function toPercent(decimal){var fixed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return\"\".concat((decimal*100).toFixed(fixed),\"%\");};var renderTooltipContent=function renderTooltipContent(o){var payload=o.payload,label=o.label;var total=payload.reduce(function(result,entry){return result+entry.value;},0);return/*#__PURE__*/React.createElement(\"div\",{className:\"customized-tooltip-content\"},/*#__PURE__*/React.createElement(\"p\",{className:\"total\"},\"\".concat(label,\" (Total: \").concat(total,\")\")),/*#__PURE__*/React.createElement(\"ul\",{className:\"list\"},payload.map(function(entry,index){return/*#__PURE__*/React.createElement(\"li\",{key:\"item-\".concat(index),style:{color:entry.color}},\"\".concat(entry.name,\": \").concat(entry.value,\"(\").concat(getPercent(entry.value,total),\")\"));})));};var PercentAreaChart=function PercentAreaChart(){return/*#__PURE__*/React.createElement(ResponsiveContainer,{height:300,width:'100%'},/*#__PURE__*/React.createElement(AreaChart,{width:500,height:400,data:data,stackOffset:\"expand\",margin:{top:10}},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"month\"}),/*#__PURE__*/React.createElement(YAxis,{tickFormatter:toPercent}),/*#__PURE__*/React.createElement(Tooltip,{content:renderTooltipContent}),/*#__PURE__*/React.createElement(Area,{type:\"monotone\",dataKey:\"a\",stackId:\"1\",stroke:\"#8884d8\",fill:\"#8884d8\"}),/*#__PURE__*/React.createElement(Area,{type:\"monotone\",dataKey:\"b\",stackId:\"1\",stroke:\"#82ca9d\",fill:\"#82ca9d\"}),/*#__PURE__*/React.createElement(Area,{type:\"monotone\",dataKey:\"c\",stackId:\"1\",stroke:\"#ffc658\",fill:\"#ffc658\"})));};export default PercentAreaChart;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/charts/recharts/charts/PercentAreaChart.tsx"],"names":["React","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","data","month","a","b","c","getPercent","value","total","ratio","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","reduce","result","entry","map","index","color","name","PercentAreaChart","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from 'recharts';\n\nconst data = [\n  {\n    month: '2015.01',\n    a: 4000,\n    b: 2400,\n    c: 2400\n  },\n  {\n    month: '2015.02',\n    a: 3000,\n    b: 1398,\n    c: 2210\n  },\n  {\n    month: '2015.03',\n    a: 2000,\n    b: 9800,\n    c: 2290\n  },\n  {\n    month: '2015.04',\n    a: 2780,\n    b: 3908,\n    c: 2000\n  },\n  {\n    month: '2015.05',\n    a: 1890,\n    b: 4800,\n    c: 2181\n  },\n  {\n    month: '2015.06',\n    a: 2390,\n    b: 3800,\n    c: 2500\n  },\n  {\n    month: '2015.07',\n    a: 3490,\n    b: 4300,\n    c: 2100\n  }\n];\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n\n  return toPercent(ratio, 2);\n};\n\nconst toPercent = (decimal, fixed = 0) => `${(decimal * 100).toFixed(fixed)}%`;\nconst renderTooltipContent = o => {\n  const { payload, label } = o;\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\n\n  return (\n    <div className='customized-tooltip-content'>\n      <p className='total'>{`${label} (Total: ${total})`}</p>\n      <ul className='list'>\n        {payload.map((entry, index) => (\n          <li key={`item-${index}`} style={{ color: entry.color }}>\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst PercentAreaChart = () => {\n  return (\n    <ResponsiveContainer height={300} width={'100%'}>\n      <AreaChart\n        width={500}\n        height={400}\n        data={data}\n        stackOffset='expand'\n        margin={{\n          top: 10\n        }}>\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='month' />\n        <YAxis tickFormatter={toPercent} />\n        <Tooltip content={renderTooltipContent} />\n        <Area type='monotone' dataKey='a' stackId='1' stroke='#8884d8' fill='#8884d8' />\n        <Area type='monotone' dataKey='b' stackId='1' stroke='#82ca9d' fill='#82ca9d' />\n        <Area type='monotone' dataKey='c' stackId='1' stroke='#ffc658' fill='#ffc658' />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PercentAreaChart;\n"]},"metadata":{},"sourceType":"module"}