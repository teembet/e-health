{"ast":null,"code":"import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { setPageData, updatePageDada } from '../redux/page-data/actions';\nexport function usePageData(pageData) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setPageData({ ...pageData,\n      loaded: true\n    }));\n  }, [pageData, dispatch]);\n}\nexport function useFetchPageData(url) {\n  let initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  const [data, setData] = useState(initialState);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await axios.get(url);\n    return result.data;\n  }\n\n  useEffect(() => {\n    getData().then(data => {\n      if (callback) {\n        callback(data);\n      }\n\n      setTimeout(() => dispatch(updatePageDada({\n        fulFilled: true,\n        loaded: true\n      })), 300);\n      setData(data);\n    }).catch(console.error);\n  }, [url, dispatch]);\n  return [data, setData];\n}","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/hooks/usePage.tsx"],"names":["useDispatch","useEffect","useState","axios","setPageData","updatePageDada","usePageData","pageData","dispatch","loaded","useFetchPageData","url","initialState","callback","data","setData","getData","result","get","then","setTimeout","fulFilled","catch","console","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,4BAA5C;AAIA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA0C;AAC/C,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,WAAW,CAAC,EAAE,GAAGG,QAAL;AAAeE,MAAAA,MAAM,EAAE;AAAvB,KAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACF,QAAD,EAAWC,QAAX,CAFM,CAAT;AAGD;AAED,OAAO,SAASE,gBAAT,CACLC,GADK,EAImB;AAAA,MAFxBC,YAEwB,uEAFN,IAEM;AAAA,MADxBC,QACwB;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAIU,YAAJ,CAAhC;AACA,QAAMJ,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,iBAAegB,OAAf,GAAyB;AACvB,UAAMC,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUP,GAAV,CAArB;AACA,WAAOM,MAAM,CAACH,IAAd;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,GACJG,IADH,CACSL,IAAD,IAAU;AACd,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACC,IAAD,CAAR;AACD;;AAEDM,MAAAA,UAAU,CAAC,MAAMZ,QAAQ,CAACH,cAAc,CAAC;AAAEgB,QAAAA,SAAS,EAAE,IAAb;AAAmBZ,QAAAA,MAAM,EAAE;AAA3B,OAAD,CAAf,CAAf,EAAoE,GAApE,CAAV;AAEAM,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KATH,EAUGQ,KAVH,CAUSC,OAAO,CAACC,KAVjB;AAWD,GAZQ,EAYN,CAACb,GAAD,EAAMH,QAAN,CAZM,CAAT;AAcA,SAAO,CAACM,IAAD,EAAOC,OAAP,CAAP;AACD","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nimport { setPageData, updatePageDada } from '../redux/page-data/actions';\n\nimport { IPageData } from '../interfaces/page';\n\nexport function usePageData(pageData: IPageData) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPageData({ ...pageData, loaded: true }));\n  }, [pageData, dispatch]);\n}\n\nexport function useFetchPageData<T>(\n  url: string,\n  initialState: T = null,\n  callback?: (T) => any\n): [T, (data: T) => void] {\n  const [data, setData] = useState<T>(initialState);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await axios.get(url);\n    return result.data;\n  }\n\n  useEffect(() => {\n    getData()\n      .then((data) => {\n        if (callback) {\n          callback(data);\n        }\n\n        setTimeout(() => dispatch(updatePageDada({ fulFilled: true, loaded: true })), 300);\n\n        setData(data);\n      })\n      .catch(console.error);\n  }, [url, dispatch]);\n\n  return [data, setData];\n}\n"]},"metadata":{},"sourceType":"module"}