{"ast":null,"code":"import { ADD_PATIENT, DELETE_PATIENT, EDIT_PATIENT, SET_PATIENTS } from './types';\nexport const setPatients = patients => ({\n  type: SET_PATIENTS,\n  payload: patients\n});\nexport const addPatient = patient => ({\n  type: ADD_PATIENT,\n  payload: patient\n});\nexport const deletePatient = id => ({\n  type: DELETE_PATIENT,\n  id\n});\nexport const editPatient = patient => ({\n  type: EDIT_PATIENT,\n  payload: patient\n});\nexport const fetchPatients = patient => {\n  dispatch => dispatch(setPatients(patient));\n};","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/redux/patients/actions.ts"],"names":["ADD_PATIENT","DELETE_PATIENT","EDIT_PATIENT","SET_PATIENTS","setPatients","patients","type","payload","addPatient","patient","deletePatient","id","editPatient","fetchPatients","dispatch"],"mappings":"AAAA,SACEA,WADF,EAGEC,cAHF,EAKEC,YALF,EAOEC,YAPF,QASO,SATP;AAcA,OAAO,MAAMC,WAAW,GAAIC,QAAD,KAA6C;AACtEC,EAAAA,IAAI,EAAEH,YADgE;AAEtEI,EAAAA,OAAO,EAAEF;AAF6D,CAA7C,CAApB;AAKP,OAAO,MAAMG,UAAU,GAAIC,OAAD,KAA0C;AAClEH,EAAAA,IAAI,EAAEN,WAD4D;AAElEO,EAAAA,OAAO,EAAEE;AAFyD,CAA1C,CAAnB;AAKP,OAAO,MAAMC,aAAa,GAAIC,EAAD,KAAsC;AACjEL,EAAAA,IAAI,EAAEL,cAD2D;AAEjEU,EAAAA;AAFiE,CAAtC,CAAtB;AAKP,OAAO,MAAMC,WAAW,GAAIH,OAAD,KAA2C;AACpEH,EAAAA,IAAI,EAAEJ,YAD8D;AAEpEK,EAAAA,OAAO,EAAEE;AAF2D,CAA3C,CAApB;AAKP,OAAO,MAAMI,aAAa,GAAIJ,OAAD,IAAa;AACxCK,EAAAA,QAAQ,IAAMA,QAAQ,CAACV,WAAW,CAACK,OAAD,CAAZ,CAAtB;AAED,CAHM","sourcesContent":["import {\n  ADD_PATIENT,\n  AddPatientAction,\n  DELETE_PATIENT,\n  DeletePatientAction,\n  EDIT_PATIENT,\n  EditPatientAction,\n  SET_PATIENTS,\n  SetPatientAction\n} from './types';\n\nimport { IPatient } from '../../interfaces/patient';\nimport axios from 'axios';\n\nexport const setPatients = (patients: IPatient[]): SetPatientAction => ({\n  type: SET_PATIENTS,\n  payload: patients\n});\n\nexport const addPatient = (patient: IPatient): AddPatientAction => ({\n  type: ADD_PATIENT,\n  payload: patient\n});\n\nexport const deletePatient = (id: string): DeletePatientAction => ({\n  type: DELETE_PATIENT,\n  id\n});\n\nexport const editPatient = (patient: IPatient): EditPatientAction => ({\n  type: EDIT_PATIENT,\n  payload: patient\n});\n\nexport const fetchPatients = (patient) => {\n  dispatch =>  (dispatch(setPatients(patient)))\n      \n}"]},"metadata":{},"sourceType":"module"}