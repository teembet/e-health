{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nasync function fetchSearchData() {\n  const result = await axios('./data/menu.json');\n  return result.data;\n}\n\nconst hasRouting = item => !!item.routing;\n\nconst hasSub = item => !!item.sub;\n\nconst getOption = item => ({\n  label: item.title,\n  value: item.layout ? `/${item.layout}/${item.routing}` : item.routing\n});\n\nconst setSubTitle = itemTitle => subItem => ({ ...subItem,\n  title: `${itemTitle} > ${subItem.title}`\n});\n\nfunction parseSearchData(data) {\n  const menuItems = data.filter(hasRouting);\n  const menuItemsWithSub = data.filter(hasSub).map(item => ({ ...item,\n    sub: item.sub.map(setSubTitle(item.title))\n  })).map(item => item.sub).flat();\n  return [...menuItems, ...menuItemsWithSub].map(getOption);\n}\n\nexport function useSearchData() {\n  const [searchData, setSearchData] = useState([]);\n  useEffect(() => {\n    fetchSearchData().then(data => {\n      const searchData = parseSearchData(data);\n      setSearchData(searchData);\n    }).catch(err => console.log('Server Error', err));\n  }, []);\n  return searchData;\n}","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/hooks/useSearchData.tsx"],"names":["useEffect","useState","axios","fetchSearchData","result","data","hasRouting","item","routing","hasSub","sub","getOption","label","title","value","layout","setSubTitle","itemTitle","subItem","parseSearchData","menuItems","filter","menuItemsWithSub","map","flat","useSearchData","searchData","setSearchData","then","catch","err","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,eAAeC,eAAf,GAAiC;AAC/B,QAAMC,MAAM,GAAG,MAAMF,KAAK,CAAC,kBAAD,CAA1B;AACA,SAAOE,MAAM,CAACC,IAAd;AACD;;AAED,MAAMC,UAAU,GAAIC,IAAD,IAAqB,CAAC,CAACA,IAAI,CAACC,OAA/C;;AACA,MAAMC,MAAM,GAAIF,IAAD,IAAqB,CAAC,CAACA,IAAI,CAACG,GAA3C;;AAEA,MAAMC,SAAS,GAAIJ,IAAD,KAAqC;AACrDK,EAAAA,KAAK,EAAEL,IAAI,CAACM,KADyC;AAErDC,EAAAA,KAAK,EAAEP,IAAI,CAACQ,MAAL,GAAe,IAAGR,IAAI,CAACQ,MAAO,IAAGR,IAAI,CAACC,OAAQ,EAA9C,GAAkDD,IAAI,CAACC;AAFT,CAArC,CAAlB;;AAKA,MAAMQ,WAAW,GAAIC,SAAD,IAAwBC,OAAD,KAA4B,EACrE,GAAGA,OADkE;AAErEL,EAAAA,KAAK,EAAG,GAAEI,SAAU,MAAKC,OAAO,CAACL,KAAM;AAF8B,CAA5B,CAA3C;;AAKA,SAASM,eAAT,CAAyBd,IAAzB,EAA+B;AAC7B,QAAMe,SAAS,GAAGf,IAAI,CAACgB,MAAL,CAAYf,UAAZ,CAAlB;AAEA,QAAMgB,gBAAgB,GAAGjB,IAAI,CAC1BgB,MADsB,CACfZ,MADe,EAEtBc,GAFsB,CAEjBhB,IAAD,KAAsB,EACzB,GAAGA,IADsB;AAEzBG,IAAAA,GAAG,EAAEH,IAAI,CAACG,GAAL,CAASa,GAAT,CAAaP,WAAW,CAACT,IAAI,CAACM,KAAN,CAAxB;AAFoB,GAAtB,CAFkB,EAMtBU,GANsB,CAMjBhB,IAAD,IAAqBA,IAAI,CAACG,GANR,EAOtBc,IAPsB,EAAzB;AASA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,GAAGE,gBAAlB,EAAoCC,GAApC,CAAwCZ,SAAxC,CAAP;AACD;;AAED,OAAO,SAASc,aAAT,GAAyB;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,eAAe,GACZyB,IADH,CACSvB,IAAD,IAAU;AACd,YAAMqB,UAAU,GAAGP,eAAe,CAACd,IAAD,CAAlC;AACAsB,MAAAA,aAAa,CAACD,UAAD,CAAb;AACD,KAJH,EAKGG,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B,CALlB;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOJ,UAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport { IMenuItem, IMenuItemSub } from '../interfaces/main-menu';\n\nasync function fetchSearchData() {\n  const result = await axios('./data/menu.json');\n  return result.data;\n}\n\nconst hasRouting = (item: IMenuItem) => !!item.routing;\nconst hasSub = (item: IMenuItem) => !!item.sub;\n\nconst getOption = (item: IMenuItem | IMenuItemSub) => ({\n  label: item.title,\n  value: item.layout ? `/${item.layout}/${item.routing}` : item.routing\n});\n\nconst setSubTitle = (itemTitle: string) => (subItem: IMenuItemSub) => ({\n  ...subItem,\n  title: `${itemTitle} > ${subItem.title}`\n});\n\nfunction parseSearchData(data) {\n  const menuItems = data.filter(hasRouting);\n\n  const menuItemsWithSub = data\n    .filter(hasSub)\n    .map((item: IMenuItem) => ({\n      ...item,\n      sub: item.sub.map(setSubTitle(item.title))\n    }))\n    .map((item: IMenuItem) => item.sub)\n    .flat();\n\n  return [...menuItems, ...menuItemsWithSub].map(getOption);\n}\n\nexport function useSearchData() {\n  const [searchData, setSearchData] = useState([]);\n\n  useEffect(() => {\n    fetchSearchData()\n      .then((data) => {\n        const searchData = parseSearchData(data);\n        setSearchData(searchData);\n      })\n      .catch((err) => console.log('Server Error', err));\n  }, []);\n\n  return searchData;\n}\n"]},"metadata":{},"sourceType":"module"}