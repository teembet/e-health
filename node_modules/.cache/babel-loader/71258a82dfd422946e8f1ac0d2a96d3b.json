{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/settings/SettingsForm.tsx\";\nimport React, { useRef } from 'react';\nimport ColorPicker from '../../../ui/color-picker/ColorPicker';\nimport { history } from '../../../redux/store';\nimport './SettingsForm.scss';\n\nconst SettingsForm = _ref => {\n  let {\n    settings,\n    onResetSettings,\n    onUpdateSetting\n  } = _ref;\n  const downloadLink = useRef(null);\n  const {\n    boxed,\n    sidebarBg,\n    topbarBg\n  } = settings;\n  const layoutUrl = history.location.pathname.split('/')[1];\n\n  const handleReset = () => {\n    onResetSettings();\n  };\n\n  const handleDownload = () => {\n    const settingsJSON = JSON.stringify(settings);\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(settingsJSON);\n    downloadLink.current.setAttribute('href', dataStr);\n    downloadLink.current.setAttribute('download', 'settings.json');\n    downloadLink.current.click();\n  };\n\n  const setValue = (name, value) => {\n    onUpdateSetting({ ...settings,\n      [name]: value\n    });\n  };\n\n  const handleLayoutChange = type => {\n    const currentRoute = history.location.pathname.split('/')[2];\n    history.push(`/${type}/${currentRoute}`);\n    setValue('layout', type);\n  };\n\n  const handleSideBgChange = _ref2 => {\n    let {\n      color,\n      contrast\n    } = _ref2;\n    return onUpdateSetting({ ...settings,\n      sidebarBg: color,\n      sidebarColor: contrast\n    });\n  };\n\n  const handleNavBgChange = _ref3 => {\n    let {\n      color\n    } = _ref3;\n    return setValue('topbarBg', color);\n  };\n\n  const handleBoxedChange = boxed => setValue('boxed', boxed);\n\n  const sidebarPickerLabel = layoutUrl === 'vertical' ? 'Sidebar background' : 'Second navbar background';\n  return /*#__PURE__*/React.createElement(_Form, {\n    layout: \"vertical\",\n    className: \"settings-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Topbar background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    onColorChange: handleNavBgChange,\n    color: topbarBg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: sidebarPickerLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    onColorChange: handleSideBgChange,\n    color: sidebarBg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    onChange: handleLayoutChange,\n    defaultValue: layoutUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Select.Option, {\n    value: 'vertical',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Vertical\"), /*#__PURE__*/React.createElement(_Select.Option, {\n    value: 'horizontal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Horizontal\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Boxed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Switch, {\n    onChange: handleBoxedChange,\n    checked: boxed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between buttons-list settings-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    danger: true,\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Reset to default\"), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Download settings\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    ref: downloadLink,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SettingsForm;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/settings/SettingsForm.tsx"],"names":["React","useRef","ColorPicker","history","SettingsForm","settings","onResetSettings","onUpdateSetting","downloadLink","boxed","sidebarBg","topbarBg","layoutUrl","location","pathname","split","handleReset","handleDownload","settingsJSON","JSON","stringify","dataStr","encodeURIComponent","current","setAttribute","click","setValue","name","value","handleLayoutChange","type","currentRoute","push","handleSideBgChange","color","contrast","sidebarColor","handleNavBgChange","handleBoxedChange","sidebarPickerLabel","display"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n\nimport { Form, Select, Switch, Button } from 'antd';\n\nimport ColorPicker from '../../../ui/color-picker/ColorPicker';\nimport { history } from '../../../redux/store';\n\nimport { IAppSettings } from '../../../interfaces/settings';\n\nimport './SettingsForm.scss';\n\ntype Props = {\n  settings: IAppSettings;\n  onResetSettings: () => void;\n  onUpdateSetting: (settings: IAppSettings) => void;\n};\n\nconst SettingsForm = ({ settings, onResetSettings, onUpdateSetting }: Props) => {\n  const downloadLink = useRef<HTMLAnchorElement>(null);\n  const { boxed, sidebarBg, topbarBg } = settings;\n\n  const layoutUrl = history.location.pathname.split('/')[1];\n\n  const handleReset = () => {\n    onResetSettings();\n  };\n\n  const handleDownload = () => {\n    const settingsJSON = JSON.stringify(settings);\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(settingsJSON);\n\n    downloadLink.current.setAttribute('href', dataStr);\n    downloadLink.current.setAttribute('download', 'settings.json');\n    downloadLink.current.click();\n  };\n\n  const setValue = (name: string, value: any) => {\n    onUpdateSetting({ ...settings, [name]: value });\n  };\n\n  const handleLayoutChange = (type: string) => {\n    const currentRoute = history.location.pathname.split('/')[2];\n\n    history.push(`/${type}/${currentRoute}`);\n    setValue('layout', type);\n  };\n\n  const handleSideBgChange = ({ color, contrast }) =>\n    onUpdateSetting({ ...settings, sidebarBg: color, sidebarColor: contrast });\n\n  const handleNavBgChange = ({ color }) => setValue('topbarBg', color);\n  const handleBoxedChange = (boxed: boolean) => setValue('boxed', boxed);\n\n  const sidebarPickerLabel =\n    layoutUrl === 'vertical' ? 'Sidebar background' : 'Second navbar background';\n\n  return (\n    <Form layout='vertical' className='settings-form'>\n      <Form.Item label='Topbar background'>\n        <ColorPicker onColorChange={handleNavBgChange} color={topbarBg} />\n      </Form.Item>\n\n      <Form.Item label={sidebarPickerLabel}>\n        <ColorPicker onColorChange={handleSideBgChange} color={sidebarBg} />\n      </Form.Item>\n\n      <Form.Item label='Layout'>\n        <Select onChange={handleLayoutChange} defaultValue={layoutUrl}>\n          <Select.Option value={'vertical'}>Vertical</Select.Option>\n\n          <Select.Option value={'horizontal'}>Horizontal</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item label='Boxed'>\n        <Switch onChange={handleBoxedChange} checked={boxed} />\n      </Form.Item>\n\n      <div className='d-flex justify-content-between buttons-list settings-actions'>\n        <Button danger onClick={handleReset}>\n          Reset to default\n        </Button>\n\n        <Button type='primary' onClick={handleDownload}>\n          Download settings\n        </Button>\n      </div>\n      <a href='#' ref={downloadLink} style={{ display: 'none' }} />\n    </Form>\n  );\n};\n\nexport default SettingsForm;\n"]},"metadata":{},"sourceType":"module"}