{"ast":null,"code":"import \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/services/EditAccounPage.tsx\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport ImageLoader from '../../layout/components/patients/ImageLoader';\nimport { usePageData } from '../../hooks/usePage';\nimport { useGetUser } from '../../hooks/useGetUser';\nconst pageData = {\n  title: 'Edit account',\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Apps',\n    route: 'default-dashboard'\n  }, {\n    title: 'Service Pages ',\n    route: 'default-dashboard'\n  }, {\n    title: 'Edit Account'\n  }]\n};\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nconst UserAvatar = _ref => {\n  let {\n    src,\n    className = null\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `avatar-wrapper ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageLoader, {\n    src: src,\n    size: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst AccountForm = _ref2 => {\n  let {\n    user\n  } = _ref2;\n  const [submitted, setSubmitted] = useState({ ...user\n  });\n  const {\n    values,\n    setValues,\n    handleSubmit\n  } = useFormik({\n    onSubmit: values => setSubmitted(values),\n    initialValues: { ...user\n    }\n  });\n\n  const handleChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = name => value => {\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const hasChanged = Object.keys(values).some(key => values[key] !== submitted[key]);\n  return /*#__PURE__*/React.createElement(_Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    name: \"name\",\n    onChange: handleChange,\n    placeholder: \"First Name\",\n    defaultValue: values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    name: \"lastName\",\n    onChange: handleChange,\n    defaultValue: values.lastName,\n    placeholder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    type: \"number\",\n    name: \"age\",\n    onChange: handleChange,\n    defaultValue: values.age,\n    placeholder: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    onChange: handleSelectChange('gender'),\n    defaultValue: values.gender,\n    placeholder: \"Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Female\"))), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    type: \"number\",\n    name: \"number\",\n    onChange: handleChange,\n    defaultValue: values.number,\n    placeholder: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input.TextArea, {\n    name: \"address\",\n    onChange: handleChange,\n    rows: 4,\n    defaultValue: values.address,\n    placeholder: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Last visit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    defaultValue: values.lastVisit,\n    placeholder: \"Last visit\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    defaultValue: values.status,\n    placeholder: \"Status\",\n    onChange: handleSelectChange('status'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"approved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Approved\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Pending\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"elem-list justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    disabled: !hasChanged,\n    className: \"bg-color-success\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-color-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Save changes\")), /*#__PURE__*/React.createElement(_Button, {\n    ghost: true,\n    danger: true,\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Delete account\")));\n};\n\nconst PasswordForm = () => {\n  return /*#__PURE__*/React.createElement(_Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Current password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input.Password, {\n    placeholder: \"Current Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"password\",\n    label: \"New Password\",\n    rules: [{\n      required: true,\n      message: 'Please enter new password'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input.Password, {\n    placeholder: \"New Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, _ref3 => {\n      let {\n        getFieldValue\n      } = _ref3;\n      return {\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      };\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input.Password, {\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"Change password\"));\n};\n\nconst EditAccountPage = () => {\n  const user = useGetUser();\n  usePageData(pageData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack\",\n    style: {\n      maxWidth: 690,\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserAvatar, {\n    className: \"mt-0\",\n    src: user.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AccountForm, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PasswordForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EditAccountPage;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/services/EditAccounPage.tsx"],"names":["React","useState","useFormik","ImageLoader","usePageData","useGetUser","pageData","title","fulFilled","breadcrumbs","route","FormItem","Item","Option","UserAvatar","src","className","AccountForm","user","submitted","setSubmitted","values","setValues","handleSubmit","onSubmit","initialValues","handleChange","e","target","name","value","handleSelectChange","hasChanged","Object","keys","some","key","lastName","age","gender","number","address","lastVisit","status","PasswordForm","required","message","getFieldValue","validator","rule","Promise","resolve","reject","EditAccountPage","maxWidth","margin","img"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\n\nimport { useFormik } from 'formik';\nimport { Button, Divider, Form, Input, Select } from 'antd';\n\nimport ImageLoader from '../../layout/components/patients/ImageLoader';\n\nimport { usePageData } from '../../hooks/usePage';\nimport { useGetUser } from '../../hooks/useGetUser';\n\nimport { IPageData } from '../../interfaces/page';\nimport { IPatient } from '../../interfaces/patient';\n\nconst pageData: IPageData = {\n  title: 'Edit account',\n  fulFilled: true,\n  breadcrumbs: [\n    {\n      title: 'Apps',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Service Pages ',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Edit Account'\n    }\n  ]\n};\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst UserAvatar = ({ src, className = null }) => {\n  return (\n    <div className={`avatar-wrapper ${className}`}>\n      <ImageLoader src={src} size={100} />\n    </div>\n  );\n};\n\nconst AccountForm = ({ user }) => {\n  const [submitted, setSubmitted] = useState({ ...user });\n  const { values, setValues, handleSubmit } = useFormik<IPatient>({\n    onSubmit: (values) => setSubmitted(values),\n    initialValues: { ...user }\n  });\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleSelectChange = (name) => (value) => {\n    setValues({ ...values, [name]: value });\n  };\n\n  const hasChanged = Object.keys(values).some((key) => values[key] !== submitted[key]);\n\n  return (\n    <Form layout='vertical'>\n      <FormItem label='First Name'>\n        <Input\n          name='name'\n          onChange={handleChange}\n          placeholder='First Name'\n          defaultValue={values.name}\n        />\n      </FormItem>\n\n      <FormItem label='Last Name'>\n        <Input\n          name='lastName'\n          onChange={handleChange}\n          defaultValue={values.lastName}\n          placeholder='Last Name'\n        />\n      </FormItem>\n\n      <FormItem label='Age'>\n        <Input\n          type='number'\n          name='age'\n          onChange={handleChange}\n          defaultValue={values.age}\n          placeholder='Age'\n        />\n      </FormItem>\n\n      <FormItem label='Gender'>\n        <Select\n          onChange={handleSelectChange('gender')}\n          defaultValue={values.gender}\n          placeholder='Gender'\n        >\n          <Option value='male'>Male</Option>\n          <Option value='female'>Female</Option>\n        </Select>\n      </FormItem>\n\n      <FormItem label='Phone number'>\n        <Input\n          type='number'\n          name='number'\n          onChange={handleChange}\n          defaultValue={values.number}\n          placeholder='Phone number'\n        />\n      </FormItem>\n\n      <FormItem label='Address'>\n        <Input.TextArea\n          name='address'\n          onChange={handleChange}\n          rows={4}\n          defaultValue={values.address}\n          placeholder='Address'\n        />\n      </FormItem>\n\n      <FormItem label='Last visit'>\n        <Input defaultValue={values.lastVisit} placeholder='Last visit' readOnly />\n      </FormItem>\n\n      <FormItem label='Status'>\n        <Select\n          defaultValue={values.status}\n          placeholder='Status'\n          onChange={handleSelectChange('status')}\n        >\n          <Option value='approved'>Approved</Option>\n          <Option value='pending'>Pending</Option>\n        </Select>\n      </FormItem>\n\n      <div className='elem-list justify-content-between'>\n        <Button disabled={!hasChanged} className='bg-color-success' onClick={() => handleSubmit()}>\n          <span className='text-color-500'>Save changes</span>\n        </Button>\n\n        <Button ghost danger className='ml-auto'>\n          Delete account\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nconst PasswordForm = () => {\n  return (\n    <Form layout='vertical'>\n      <FormItem label='Current password'>\n        <Input.Password placeholder='Current Password' />\n      </FormItem>\n\n      <div className='row'>\n        <div className='col-md-6 col-sm-12'>\n          <FormItem\n            name='password'\n            label='New Password'\n            rules={[{ required: true, message: 'Please enter new password' }]}\n          >\n            <Input.Password placeholder='New Password' />\n          </FormItem>\n        </div>\n\n        <div className='col-md-6 col-sm-12'>\n          <FormItem\n            name='confirmPassword'\n            label='Confirm Password'\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!'\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject('The two passwords that you entered do not match!');\n                }\n              })\n            ]}\n          >\n            <Input.Password placeholder='Confirm Password' />\n          </FormItem>\n        </div>\n      </div>\n\n      <Button type='primary'>Change password</Button>\n    </Form>\n  );\n};\n\nconst EditAccountPage = () => {\n  const user = useGetUser();\n  usePageData(pageData);\n  return (\n    <div className='stack' style={{ maxWidth: 690, margin: '0 auto' }}>\n      <UserAvatar className='mt-0' src={user.img} />\n      <AccountForm user={user} />\n\n      <Divider />\n\n      <PasswordForm />\n    </div>\n  );\n};\n\nexport default EditAccountPage;\n"]},"metadata":{},"sourceType":"module"}