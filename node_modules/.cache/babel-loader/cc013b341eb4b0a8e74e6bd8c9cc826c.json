{"ast":null,"code":"var _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/ui/color-picker/ColorPicker.tsx\";\nimport React, { useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport PickerField from './picker-field/PickerFileld';\nimport ColorUtils from '../../utils/color-utils';\n\nconst getContrast = hexColor => {\n  if (!hexColor) {\n    return null;\n  }\n\n  const [r, g, b] = ColorUtils.hexToRgb(hexColor);\n  return ColorUtils.checkContrastColor(r, g, b);\n};\n\nconst getColor = hexColor => ({\n  color: hexColor,\n  contrast: getContrast(hexColor)\n});\n\nconst ColorPicker = _ref => {\n  let {\n    opened: pickerOpened,\n    color,\n    onColorChange\n  } = _ref;\n  const [opened, setOpened] = useState(pickerOpened);\n\n  const handleColorChange = color => onColorChange(getColor(color.hex));\n\n  const handlePickerOpen = () => setOpened(true);\n\n  const handleClose = () => setOpened(false);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PickerField, {\n    savedColor: color,\n    onOpenPicker: handlePickerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), opened && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picker-cover\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SketchPicker, {\n    onChangeComplete: handleColorChange,\n    color: color,\n    presetColors: [],\n    disableAlpha: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/ui/color-picker/ColorPicker.tsx"],"names":["React","useState","SketchPicker","PickerField","ColorUtils","getContrast","hexColor","r","g","b","hexToRgb","checkContrastColor","getColor","color","contrast","ColorPicker","opened","pickerOpened","onColorChange","setOpened","handleColorChange","hex","handlePickerOpen","handleClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAOA,MAAMC,WAAW,GAAIC,QAAD,IAAsB;AACxC,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,QAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,UAAU,CAACM,QAAX,CAAoBJ,QAApB,CAAlB;AACA,SAAOF,UAAU,CAACO,kBAAX,CAA8BJ,CAA9B,EAAiCC,CAAjC,EAAoCC,CAApC,CAAP;AACD,CAPD;;AASA,MAAMG,QAAQ,GAAIN,QAAD,KAAoC;AACnDO,EAAAA,KAAK,EAAEP,QAD4C;AAEnDQ,EAAAA,QAAQ,EAAET,WAAW,CAACC,QAAD;AAF8B,CAApC,CAAjB;;AAYA,MAAMS,WAAW,GAAG,QAA2D;AAAA,MAA1D;AAAEC,IAAAA,MAAM,EAAEC,YAAV;AAAwBJ,IAAAA,KAAxB;AAA+BK,IAAAA;AAA/B,GAA0D;AAC7E,QAAM,CAACF,MAAD,EAASG,SAAT,IAAsBlB,QAAQ,CAAUgB,YAAV,CAApC;;AAEA,QAAMG,iBAAiB,GAAGP,KAAK,IAAIK,aAAa,CAACN,QAAQ,CAACC,KAAK,CAACQ,GAAP,CAAT,CAAhD;;AAEA,QAAMC,gBAAgB,GAAG,MAAMH,SAAS,CAAC,IAAD,CAAxC;;AAEA,QAAMI,WAAW,GAAG,MAAMJ,SAAS,CAAC,KAAD,CAAnC;;AAEA,sBACE,uDACE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEN,KAAzB;AAAgC,IAAA,YAAY,EAAES,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGN,MAAM,iBACL,uDACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAEO,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AACE,IAAA,gBAAgB,EAAEH,iBADpB;AAEE,IAAA,KAAK,EAAEP,KAFT;AAGE,IAAA,YAAY,EAAE,EAHhB;AAIE,IAAA,YAAY,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJJ,CADF;AAiBD,CA1BD;;AA4BA,eAAeE,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport PickerField from './picker-field/PickerFileld';\nimport ColorUtils from '../../utils/color-utils';\n\nexport type PickerColor = {\n  color: string;\n  contrast: string;\n};\n\nconst getContrast = (hexColor: string) => {\n  if (!hexColor) {\n    return null;\n  }\n\n  const [r, g, b] = ColorUtils.hexToRgb(hexColor);\n  return ColorUtils.checkContrastColor(r, g, b);\n};\n\nconst getColor = (hexColor: string): PickerColor => ({\n  color: hexColor,\n  contrast: getContrast(hexColor)\n});\n\ntype Props = {\n  color?: string;\n  secondColor?: string;\n  opened?: boolean;\n  onColorChange?: (color: PickerColor) => void;\n};\n\nconst ColorPicker = ({ opened: pickerOpened, color, onColorChange }: Props) => {\n  const [opened, setOpened] = useState<boolean>(pickerOpened);\n\n  const handleColorChange = color => onColorChange(getColor(color.hex));\n\n  const handlePickerOpen = () => setOpened(true);\n\n  const handleClose = () => setOpened(false);\n\n  return (\n    <>\n      <PickerField savedColor={color} onOpenPicker={handlePickerOpen} />\n\n      {opened && (\n        <>\n          <div className='picker-cover' onClick={handleClose} />\n          <SketchPicker\n            onChangeComplete={handleColorChange}\n            color={color}\n            presetColors={[]}\n            disableAlpha\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}