{"ast":null,"code":"var _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/menu/Menu.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport classNames from '../../../utils/class-names';\nimport MenuGroupTitle from './GroupTitle';\nimport ItemWithSub from './ItemWithSub';\nimport SimpleItem from './SimpleItem';\nimport './Menu.scss';\n\nconst haveActive = (sub, route) => !!sub.find(item => item.routing === route);\n\nconst Menu = _ref => {\n  let {\n    data,\n    orientation,\n    location,\n    children,\n    className,\n    onCloseSidebar,\n    opened\n  } = _ref;\n  const [menu, setMenu] = useState([]);\n  const userRole = useSelector(state => state.login.user);\n  useEffect(() => {\n    setMenu(data);\n    console.log(userRole, 'userRole');\n  }, [data]);\n  useEffect(() => {\n    const currentRoute = location.pathname.split('/')[2];\n    const updatedMenu = data ? data.map(item => {\n      if (item.sub) {\n        return { ...item,\n          active: haveActive(item.sub, currentRoute)\n        };\n      }\n\n      return { ...item,\n        active: item.routing === currentRoute\n      };\n    }) : [];\n    setMenu(updatedMenu);\n  }, [location, data]);\n  useEffect(() => {\n    onCloseSidebar && opened && onCloseSidebar();\n  }, [location]);\n\n  const handleItemClick = itemTitle => {\n    const updateMenu = [...menu];\n\n    for (let item of updateMenu) {\n      if (item.title !== itemTitle) {\n        continue;\n      }\n\n      item.active = !item.active;\n      break;\n    }\n\n    setMenu(updateMenu);\n  };\n\n  const menuClasses = classNames({\n    'main-menu': true,\n    horizontal: orientation === 'horizontal'\n  });\n  const menuItems = menu.map((item, i) => {\n    if (item.groupTitle) {\n      return /*#__PURE__*/React.createElement(MenuGroupTitle, {\n        key: i,\n        title: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (item.sub) {\n      return /*#__PURE__*/React.createElement(ItemWithSub, {\n        key: i,\n        layout: orientation,\n        sub: item.sub,\n        title: item.title,\n        location: location,\n        opened: item.active,\n        onClick: handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SimpleItem, {\n      key: i,\n      icon: item.icon,\n      layout: orientation,\n      title: item.title,\n      routing: item.routing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${menuClasses} ${!!className && className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, children, !!menuItems.length && /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"main-menu-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menu-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, menuItems)));\n};\n\nexport default withRouter(Menu);","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/menu/Menu.tsx"],"names":["React","useEffect","useState","useSelector","withRouter","classNames","MenuGroupTitle","ItemWithSub","SimpleItem","haveActive","sub","route","find","item","routing","Menu","data","orientation","location","children","className","onCloseSidebar","opened","menu","setMenu","userRole","state","login","user","console","log","currentRoute","pathname","split","updatedMenu","map","active","handleItemClick","itemTitle","updateMenu","title","menuClasses","horizontal","menuItems","i","groupTitle","icon","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { IMenuItem, IMenuItemSub } from '../../../interfaces/main-menu';\r\n\r\nimport classNames from '../../../utils/class-names';\r\n\r\nimport MenuGroupTitle from './GroupTitle';\r\nimport ItemWithSub from './ItemWithSub';\r\nimport SimpleItem from './SimpleItem';\r\n\r\nimport './Menu.scss';\r\n\r\ntype MenuProps = {\r\n  orientation?: 'vertical' | 'horizontal';\r\n  data?: IMenuItem[];\r\n  children?: any;\r\n  opened?: boolean;\r\n  onCloseSidebar?: () => void;\r\n  className?: string;\r\n};\r\n\r\ntype RouterProps = {\r\n  location: Location;\r\n};\r\n\r\ntype Props = (RouterProps & MenuProps) | any;\r\n\r\nconst haveActive = (sub: IMenuItemSub[], route: string) =>\r\n  !!sub.find((item) => item.routing === route);\r\n\r\nconst Menu = ({\r\n  data,\r\n  orientation,\r\n  location,\r\n  children,\r\n  className,\r\n  onCloseSidebar,\r\n  opened\r\n}: Props) => {\r\n  const [menu, setMenu] = useState<IMenuItem[]>([]);\r\n  const userRole = useSelector((state: any) => state.login.user);\r\n  useEffect(() => {\r\n    setMenu(data);\r\n    console.log(userRole, 'userRole');\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const currentRoute = location.pathname.split('/')[2];\r\n\r\n    const updatedMenu = data\r\n      ? data.map((item) => {\r\n          if (item.sub) {\r\n            return { ...item, active: haveActive(item.sub, currentRoute) };\r\n          }\r\n\r\n          return { ...item, active: item.routing === currentRoute };\r\n        })\r\n      : [];\r\n\r\n    setMenu(updatedMenu);\r\n  }, [location, data]);\r\n\r\n  useEffect(() => {\r\n    onCloseSidebar && opened && onCloseSidebar();\r\n  }, [location]);\r\n\r\n  const handleItemClick = (itemTitle: string) => {\r\n    const updateMenu = [...menu];\r\n\r\n    for (let item of updateMenu) {\r\n      if (item.title !== itemTitle) {\r\n        continue;\r\n      }\r\n\r\n      item.active = !item.active;\r\n      break;\r\n    }\r\n\r\n    setMenu(updateMenu);\r\n  };\r\n\r\n  const menuClasses = classNames({\r\n    'main-menu': true,\r\n    horizontal: orientation === 'horizontal'\r\n  });\r\n\r\n  const menuItems = menu.map((item: IMenuItem, i: number) => {\r\n    if (item.groupTitle) {\r\n      return <MenuGroupTitle key={i} title={item.title} />;\r\n    }\r\n\r\n    if (item.sub) {\r\n      return (\r\n        <ItemWithSub\r\n          key={i}\r\n          layout={orientation}\r\n          sub={item.sub}\r\n          title={item.title}\r\n          location={location}\r\n          opened={item.active}\r\n          onClick={handleItemClick}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <SimpleItem\r\n        key={i}\r\n        icon={item.icon}\r\n        layout={orientation}\r\n        title={item.title}\r\n        routing={item.routing}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`${menuClasses} ${!!className && className}`}>\r\n      {children}\r\n      {!!menuItems.length && (\r\n        <nav className='main-menu-wrap'>\r\n          <ul className='menu-ul'>{menuItems}</ul>\r\n        </nav>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n"]},"metadata":{},"sourceType":"module"}