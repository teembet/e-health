{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useEffect,useState}from'react';import axios from'axios';function getBillings(){return _getBillings.apply(this,arguments);}function _getBillings(){_getBillings=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('./data/patient-billings.json');case 2:result=_context.sent;return _context.abrupt(\"return\",result.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getBillings.apply(this,arguments);}function getPayments(){return _getPayments.apply(this,arguments);}function _getPayments(){_getPayments=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('./data/payments.json');case 2:result=_context2.sent;return _context2.abrupt(\"return\",result.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getPayments.apply(this,arguments);}export function useGetBillings(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),billings=_useState2[0],setBillings=_useState2[1];useEffect(function(){getBillings().then(function(data){setBillings(data);});},[]);return billings;}export function useGetPayments(){var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),payments=_useState4[0],setPayments=_useState4[1];useEffect(function(){getPayments().then(function(data){setPayments(data);});},[]);return[payments,setPayments];}","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/hooks/useGetBillings.tsx"],"names":["useEffect","useState","axios","getBillings","get","result","data","getPayments","useGetBillings","billings","setBillings","then","useGetPayments","payments","setPayments"],"mappings":"kfAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAGA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,QAEeC,CAAAA,W,2IAAf,oKACuBD,CAAAA,KAAK,CAACE,GAAN,CAAU,8BAAV,CADvB,QACQC,MADR,+CAESA,MAAM,CAACC,IAFhB,wD,sDAKeC,CAAAA,W,2IAAf,0KACuBL,CAAAA,KAAK,CAACE,GAAN,CAAU,sBAAV,CADvB,QACQC,MADR,iDAESA,MAAM,CAACC,IAFhB,0D,8CAKA,MAAO,SAASE,CAAAA,cAAT,EAAsC,CAC3C,cAAgCP,QAAQ,CAAa,EAAb,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eAEAV,SAAS,CAAC,UAAM,CACdG,WAAW,GAAGQ,IAAd,CAAmB,SAACL,IAAD,CAAU,CAC3BI,WAAW,CAACJ,IAAD,CAAX,CACD,CAFD,EAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,MAAOG,CAAAA,QAAP,CACD,CAED,MAAO,SAASG,CAAAA,cAAT,EAA6D,CAClE,eAAgCX,QAAQ,CAAa,EAAb,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eAEAd,SAAS,CAAC,UAAM,CACdO,WAAW,GAAGI,IAAd,CAAmB,SAACL,IAAD,CAAU,CAC3BQ,WAAW,CAACR,IAAD,CAAX,CACD,CAFD,EAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,MAAO,CAACO,QAAD,CAAWC,WAAX,CAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { IBilling } from '../interfaces/patient';\nimport axios from 'axios';\n\nasync function getBillings() {\n  const result = await axios.get('./data/patient-billings.json');\n  return result.data as IBilling[];\n}\n\nasync function getPayments() {\n  const result = await axios.get('./data/payments.json');\n  return result.data as IBilling[];\n}\n\nexport function useGetBillings(): IBilling[] {\n  const [billings, setBillings] = useState<IBilling[]>([]);\n\n  useEffect(() => {\n    getBillings().then((data) => {\n      setBillings(data);\n    });\n  }, []);\n\n  return billings;\n}\n\nexport function useGetPayments(): [IBilling[], React.Dispatch<any>] {\n  const [payments, setPayments] = useState<IBilling[]>([]);\n\n  useEffect(() => {\n    getPayments().then((data) => {\n      setPayments(data);\n    });\n  }, []);\n\n  return [payments, setPayments];\n}\n"]},"metadata":{},"sourceType":"module"}