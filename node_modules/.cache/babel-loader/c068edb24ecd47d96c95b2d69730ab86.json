{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/patients/PatientForm.tsx\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport ImageLoader from './ImageLoader';\nimport { hasErrorFactory } from '../../../utils/hasError';\nconst {\n  TextArea\n} = _Input;\nconst defaultSubmitText = 'Add patient';\nconst emptyPatient = {\n  name: null,\n  address: null,\n  status: null,\n  age: null,\n  number: null,\n  gender: null,\n  img: null\n};\nconst patientScheme = Yup.object({\n  name: Yup.string().required(),\n  address: Yup.string().required(),\n  status: Yup.string().required(),\n  age: Yup.string().required(),\n  number: Yup.string().required(),\n  gender: Yup.string().required(),\n  img: Yup.string().required()\n});\n\nconst PatientForm = _ref => {\n  let {\n    submitText = defaultSubmitText,\n    patient = emptyPatient,\n    onSubmit,\n    onCancel\n  } = _ref;\n  const {\n    setFieldTouched,\n    setFieldValue,\n    handleChange,\n    handleSubmit,\n    setValues,\n    handleBlur,\n    resetForm,\n    touched,\n    values,\n    errors,\n    isValid\n  } = useFormik({\n    validationSchema: patientScheme,\n    initialValues: patient,\n    onSubmit: values => {\n      onSubmit(values);\n      onCancel();\n    }\n  });\n\n  const handleGenderSelect = value => setFieldValue('gender', value);\n\n  const handleStatusSelect = value => setFieldValue('status', value);\n\n  const hasError = hasErrorFactory(touched, errors);\n\n  const handleCancel = () => {\n    resetForm();\n    onCancel();\n  };\n\n  const handleImageLoad = img => {\n    setValues({ ...values,\n      img\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageLoader, {\n    onLoad: handleImageLoad,\n    src: values.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Name\",\n    name: \"name\",\n    type: \"text\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    defaultValue: values.name,\n    className: hasError('name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Phone\",\n    name: \"number\",\n    type: \"phone\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    defaultValue: values.number,\n    className: hasError('number'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    name: \"age\",\n    type: \"number\",\n    placeholder: \"Age\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    defaultValue: values.age,\n    className: hasError('age'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Gender\",\n    defaultValue: values.gender,\n    onChange: handleGenderSelect,\n    className: hasError('gender'),\n    onBlur: () => setFieldTouched('gender'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Select.Option, {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(_Select.Option, {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Female\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Status\",\n    defaultValue: values.status,\n    onChange: handleStatusSelect,\n    className: hasError('status'),\n    onBlur: () => setFieldTouched('status'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Select.Option, {\n    value: \"Approved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Approved\"), /*#__PURE__*/React.createElement(_Select.Option, {\n    value: \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Pending\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 3,\n    name: \"address\",\n    placeholder: \"Address\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    defaultValue: values.address,\n    className: hasError('address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between buttons-list settings-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    danger: true,\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(_Button, {\n    disabled: !isValid,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, submitText))));\n};\n\nexport default PatientForm;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/patients/PatientForm.tsx"],"names":["React","useFormik","Yup","ImageLoader","hasErrorFactory","TextArea","defaultSubmitText","emptyPatient","name","address","status","age","number","gender","img","patientScheme","object","string","required","PatientForm","submitText","patient","onSubmit","onCancel","setFieldTouched","setFieldValue","handleChange","handleSubmit","setValues","handleBlur","resetForm","touched","values","errors","isValid","validationSchema","initialValues","handleGenderSelect","value","handleStatusSelect","hasError","handleCancel","handleImageLoad"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAIA,MAAM;AAAEC,EAAAA;AAAF,UAAN;AAQA,MAAMC,iBAAiB,GAAG,aAA1B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,GAAG,EAAE,IAJc;AAKnBC,EAAAA,MAAM,EAAE,IALW;AAMnBC,EAAAA,MAAM,EAAE,IANW;AAOnBC,EAAAA,GAAG,EAAE;AAPc,CAArB;AAUA,MAAMC,aAAa,GAAGb,GAAG,CAACc,MAAJ,CAAW;AAC/BR,EAAAA,IAAI,EAAEN,GAAG,CAACe,MAAJ,GAAaC,QAAb,EADyB;AAE/BT,EAAAA,OAAO,EAAEP,GAAG,CAACe,MAAJ,GAAaC,QAAb,EAFsB;AAG/BR,EAAAA,MAAM,EAAER,GAAG,CAACe,MAAJ,GAAaC,QAAb,EAHuB;AAI/BP,EAAAA,GAAG,EAAET,GAAG,CAACe,MAAJ,GAAaC,QAAb,EAJ0B;AAK/BN,EAAAA,MAAM,EAAEV,GAAG,CAACe,MAAJ,GAAaC,QAAb,EALuB;AAM/BL,EAAAA,MAAM,EAAEX,GAAG,CAACe,MAAJ,GAAaC,QAAb,EANuB;AAO/BJ,EAAAA,GAAG,EAAEZ,GAAG,CAACe,MAAJ,GAAaC,QAAb;AAP0B,CAAX,CAAtB;;AAUA,MAAMC,WAAW,GAAG,QAKP;AAAA,MALQ;AACnBC,IAAAA,UAAU,GAAGd,iBADM;AAEnBe,IAAAA,OAAO,GAAGd,YAFS;AAGnBe,IAAAA,QAHmB;AAInBC,IAAAA;AAJmB,GAKR;AACX,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA,MATI;AAUJC,IAAAA,MAVI;AAWJC,IAAAA;AAXI,MAYFjC,SAAS,CAAW;AACtBkC,IAAAA,gBAAgB,EAAEpB,aADI;AAEtBqB,IAAAA,aAAa,EAAEf,OAFO;AAGtBC,IAAAA,QAAQ,EAAGU,MAAD,IAAY;AACpBV,MAAAA,QAAQ,CAACU,MAAD,CAAR;AACAT,MAAAA,QAAQ;AACT;AANqB,GAAX,CAZb;;AAqBA,QAAMc,kBAAkB,GAAIC,KAAD,IAAWb,aAAa,CAAC,QAAD,EAAWa,KAAX,CAAnD;;AACA,QAAMC,kBAAkB,GAAID,KAAD,IAAWb,aAAa,CAAC,QAAD,EAAWa,KAAX,CAAnD;;AAEA,QAAME,QAAQ,GAAGpC,eAAe,CAAC2B,OAAD,EAAUE,MAAV,CAAhC;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzBX,IAAAA,SAAS;AACTP,IAAAA,QAAQ;AACT,GAHD;;AAKA,QAAMmB,eAAe,GAAI5B,GAAD,IAAS;AAC/Bc,IAAAA,SAAS,CAAC,EAAE,GAAGI,MAAL;AAAalB,MAAAA;AAAb,KAAD,CAAT;AACD,GAFD;;AAIA,sBACE,uDACE;AAAM,IAAA,QAAQ,EAAEa,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEe,eAArB;AAAsC,IAAA,GAAG,EAAEV,MAAM,CAAClB,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAEe,UAJV;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAME,IAAA,YAAY,EAAEM,MAAM,CAACxB,IANvB;AAOE,IAAA,SAAS,EAAEgC,QAAQ,CAAC,MAAD,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAEX,UAJV;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAME,IAAA,YAAY,EAAEM,MAAM,CAACpB,MANvB;AAOE,IAAA,SAAS,EAAE4B,QAAQ,CAAC,QAAD,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,eA6BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,WAAW,EAAC,KAHd;AAIE,IAAA,MAAM,EAAEX,UAJV;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAME,IAAA,YAAY,EAAEM,MAAM,CAACrB,GANvB;AAOE,IAAA,SAAS,EAAE6B,QAAQ,CAAC,KAAD,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAeE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,YAAY,EAAER,MAAM,CAACnB,MAFvB;AAGE,IAAA,QAAQ,EAAEwB,kBAHZ;AAIE,IAAA,SAAS,EAAEG,QAAQ,CAAC,QAAD,CAJrB;AAKE,IAAA,MAAM,EAAE,MAAMhB,eAAe,CAAC,QAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,4BAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,4BAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,CADF,CAfF,CA7BF,eA4DE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,YAAY,EAAEQ,MAAM,CAACtB,MAFvB;AAGE,IAAA,QAAQ,EAAE6B,kBAHZ;AAIE,IAAA,SAAS,EAAEC,QAAQ,CAAC,QAAD,CAJrB;AAKE,IAAA,MAAM,EAAE,MAAMhB,eAAe,CAAC,QAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,4BAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,4BAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CADF,CA5DF,eAyEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,MAAM,EAAEK,UAJV;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAME,IAAA,YAAY,EAAEM,MAAM,CAACvB,OANvB;AAOE,IAAA,SAAS,EAAE+B,QAAQ,CAAC,SAAD,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzEF,eAqFE;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,OAAO,EAAEC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,IAAA,QAAQ,EAAE,CAACP,OAAnB;AAA4B,IAAA,IAAI,EAAC,SAAjC;AAA2C,IAAA,QAAQ,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,UADH,CALF,CArFF,CADF,CADF;AAmGD,CA5ID;;AA8IA,eAAeD,WAAf","sourcesContent":["import React from 'react';\n\nimport { Button, Select, Input } from 'antd';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport ImageLoader from './ImageLoader';\nimport { hasErrorFactory } from '../../../utils/hasError';\n\nimport { IPatient } from '../../../interfaces/patient';\n\nconst { TextArea } = Input;\ntype Props = {\n  onSubmit: (patient: IPatient) => void;\n  onCancel: () => void;\n  patient?: IPatient;\n  submitText?: string;\n};\n\nconst defaultSubmitText = 'Add patient';\nconst emptyPatient = {\n  name: null,\n  address: null,\n  status: null,\n  age: null,\n  number: null,\n  gender: null,\n  img: null\n};\n\nconst patientScheme = Yup.object({\n  name: Yup.string().required(),\n  address: Yup.string().required(),\n  status: Yup.string().required(),\n  age: Yup.string().required(),\n  number: Yup.string().required(),\n  gender: Yup.string().required(),\n  img: Yup.string().required()\n});\n\nconst PatientForm = ({\n  submitText = defaultSubmitText,\n  patient = emptyPatient,\n  onSubmit,\n  onCancel\n}: Props) => {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    handleChange,\n    handleSubmit,\n    setValues,\n    handleBlur,\n    resetForm,\n    touched,\n    values,\n    errors,\n    isValid\n  } = useFormik<IPatient>({\n    validationSchema: patientScheme,\n    initialValues: patient,\n    onSubmit: (values) => {\n      onSubmit(values);\n      onCancel();\n    }\n  });\n\n  const handleGenderSelect = (value) => setFieldValue('gender', value);\n  const handleStatusSelect = (value) => setFieldValue('status', value);\n\n  const hasError = hasErrorFactory(touched, errors);\n\n  const handleCancel = () => {\n    resetForm();\n    onCancel();\n  };\n\n  const handleImageLoad = (img) => {\n    setValues({ ...values, img });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className='form-group'>\n          <ImageLoader onLoad={handleImageLoad} src={values.img as string} />\n        </div>\n\n        <div className='form-group'>\n          <Input\n            placeholder='Name'\n            name='name'\n            type='text'\n            onBlur={handleBlur}\n            onChange={handleChange}\n            defaultValue={values.name}\n            className={hasError('name')}\n          />\n        </div>\n\n        <div className='form-group'>\n          <Input\n            placeholder='Phone'\n            name='number'\n            type='phone'\n            onBlur={handleBlur}\n            onChange={handleChange}\n            defaultValue={values.number}\n            className={hasError('number')}\n          />\n        </div>\n\n        <div className='row'>\n          <div className='col-sm-6 col-12'>\n            <div className='form-group'>\n              <Input\n                name='age'\n                type='number'\n                placeholder='Age'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                defaultValue={values.age}\n                className={hasError('age')}\n              />\n            </div>\n          </div>\n\n          <div className='col-sm-6 col-12'>\n            <div className='form-group'>\n              <Select\n                placeholder='Gender'\n                defaultValue={values.gender}\n                onChange={handleGenderSelect}\n                className={hasError('gender')}\n                onBlur={() => setFieldTouched('gender')}\n              >\n                <Select.Option value='Male'>Male</Select.Option>\n                <Select.Option value='Female'>Female</Select.Option>\n              </Select>\n            </div>\n          </div>\n        </div>\n\n        <div className='form-group'>\n          <Select\n            placeholder='Status'\n            defaultValue={values.status}\n            onChange={handleStatusSelect}\n            className={hasError('status')}\n            onBlur={() => setFieldTouched('status')}\n          >\n            <Select.Option value='Approved'>Approved</Select.Option>\n            <Select.Option value='Pending'>Pending</Select.Option>\n          </Select>\n        </div>\n\n        <div className='form-group'>\n          <TextArea\n            rows={3}\n            name='address'\n            placeholder='Address'\n            onBlur={handleBlur}\n            onChange={handleChange}\n            defaultValue={values.address}\n            className={hasError('address')}\n          />\n        </div>\n\n        <div className='d-flex justify-content-between buttons-list settings-actions'>\n          <Button danger onClick={handleCancel}>\n            Cancel\n          </Button>\n\n          <Button disabled={!isValid} type='primary' htmlType='submit'>\n            {submitText}\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PatientForm;\n"]},"metadata":{},"sourceType":"module"}