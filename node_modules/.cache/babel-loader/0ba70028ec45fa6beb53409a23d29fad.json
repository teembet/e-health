{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/sessions/Sign-in.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { LoginOutlined } from '@ant-design/icons/lib';\nimport PublicLayout from '../../layout/public/Public';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'antd/es/form/Form';\nimport { navigateHome } from '../../utils/naviagate-home';\nimport * as userActions from '../../redux/auth/actions';\nimport { useDispatch, useSelector } from \"react-redux\";\nconst {\n  Item\n} = _Form;\n\nconst SignIn = () => {\n  const [form] = useForm();\n  const [inputValues, setInputValues] = useState();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.registration);\n  useEffect(() => {// When state will be updated(in our case, when items will be fetched), \n    // we will update local component state and force component to rerender \n    // with new data.\n    //  setUsers((store.getState().registration)?(store.getState().registration):null)\n  }); // const[email,setEmail]=useState('')\n  // const[password,setPassword]=useState('')\n  // const { values, setValues, handleSubmit } = useFormik<IPatient>({\n  //   onSubmit: (values) => setSubmitted(values),\n  //   initialValues: { ...user }\n  // });\n\n  const login = () => {\n    const {\n      email,\n      password\n    } = inputValues;\n\n    if (email !== '' && password !== '') {\n      form.validateFields().then(() => {\n        const user = users.find(x => x.email === email);\n        console.log(user, \"users\"); //   users.filter((user)=>{\n        //     if(searchQuery===\"\"){\n        //       console.log(\"its empty\")\n        //       return person\n        //     }\n        //     else if (person.name.toLowerCase().includes(searchQuery.toLowerCase())){\n        //       console.log(person,\"its not empty\")\n        //    setFilterData([...filterData,person])\n        //  console.log(user,\"ittt\")\n\n        if (user) {\n          dispatch(userActions.login(user));\n          navigateHome();\n        } else {\n          console.error(\"user not in the system\");\n        }\n      }).catch(() => null);\n    } else {}\n  }; //   handleChange = (e) => {\n  //     const { name } = e.target;\n  //     this.setState({ [name]: e.target.value })\n  // }\n\n\n  const handleChange = e => {\n    setInputValues({ ...inputValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PublicLayout, {\n    bgImg: `${window.origin}/content/login-page.jpg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Login form\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-color-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Login to access your Account\"), /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    layout: \"vertical\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    name: \"login\",\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(React.Fragment, null)\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Email\",\n    onChange: handleChange,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(React.Fragment, null)\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: handleChange,\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Switch, {\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, \"Remember me\")), /*#__PURE__*/React.createElement(_Button, {\n    block: false,\n    type: \"primary\",\n    onClick: login,\n    icon: /*#__PURE__*/React.createElement(LoginOutlined, {\n      style: {\n        fontSize: '1.3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Forgot password?\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 32\n    }\n  }, \"Sign up!\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/sessions/Sign-in.tsx"],"names":["React","useState","useEffect","LoginOutlined","PublicLayout","Link","useForm","navigateHome","userActions","useDispatch","useSelector","Item","SignIn","form","inputValues","setInputValues","dispatch","users","state","registration","login","email","password","validateFields","then","user","find","x","console","log","error","catch","handleChange","e","target","name","value","window","origin","required","message","fontSize"],"mappings":"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","sourcesContent":["import React,{ChangeEvent,useState,useEffect} from 'react';\n\nimport { Button, Form, Input, Switch } from 'antd';\nimport { LoginOutlined } from '@ant-design/icons/lib';\n\nimport PublicLayout from '../../layout/public/Public';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'antd/es/form/Form';\nimport { navigateHome } from '../../utils/naviagate-home';\nimport * as userActions  from '../../redux/auth/actions';\nimport { useDispatch,useSelector} from \"react-redux\";\nimport { AppState, store } from '../../redux/store';\nimport { user } from '../../redux/auth/reducers';\nconst { Item } = Form;\n\n\nconst SignIn = () => {\n  const [form] = useForm();\n  \n  const [inputValues,setInputValues]=useState<IUser>()\nconst dispatch = useDispatch();\nconst users=useSelector((state:AppState)=>state.registration)\n  interface IUser {\n    email: string;\n    password:string;\n    \n  }\n\n\nuseEffect(() => {\n  \n    // When state will be updated(in our case, when items will be fetched), \n    // we will update local component state and force component to rerender \n    // with new data.\n  //  setUsers((store.getState().registration)?(store.getState().registration):null)\n   \n})\n// const[email,setEmail]=useState('')\n// const[password,setPassword]=useState('')\n\n// const { values, setValues, handleSubmit } = useFormik<IPatient>({\n//   onSubmit: (values) => setSubmitted(values),\n//   initialValues: { ...user }\n// });\n\n\n\n  const login = () => {\n    const { email, password } =inputValues;\n    if (email !== '' && password !== '') {\n    form\n      .validateFields()\n      .then(() => {\n      const user=  users.find(x => x.email === email)\nconsole.log(user,\"users\")\n    //   users.filter((user)=>{\n    //     if(searchQuery===\"\"){\n    //       console.log(\"its empty\")\n    //       return person\n    //     }\n    //     else if (person.name.toLowerCase().includes(searchQuery.toLowerCase())){\n    //       console.log(person,\"its not empty\")\n    //    setFilterData([...filterData,person])\n    //  console.log(user,\"ittt\")\n     if (user){\n      dispatch(userActions.login(user));\n        navigateHome();\n     }else{\n       console.error(\"user not in the system\")\n     }\n  \n       } )\n      .catch(() => null);\n      }else{\n\n      }\n\n  };\n//   handleChange = (e) => {\n//     const { name } = e.target;\n//     this.setState({ [name]: e.target.value })\n// }\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) => {\n    setInputValues({ ...inputValues,[e.target.name]: e.target.value });\n    \n  };\n  return (\n    <PublicLayout bgImg={`${window.origin}/content/login-page.jpg`}>\n      <h4 className='mt-0 mb-1'>Login form</h4>\n{/* <p>{{users}}</p> */}\n      <p className='text-color-200'>Login to access your Account</p>\n\n      <Form form={form} layout='vertical' className='mb-4'>\n        <Item name='login' rules={[{ required: true, message: <></> }]}>\n          <Input placeholder='Email'  onChange={handleChange} name='email' />\n        </Item>\n        <Item name='password' rules={[{ required: true, message: <></> }]}>\n          <Input placeholder='Password' type='password' onChange={handleChange} name='password' />\n        </Item>\n\n        <div className='d-flex align-items-center mb-4'>\n          <Switch defaultChecked /> <span className='ml-2'>Remember me</span>\n        </div>\n\n        <Button\n        \n          block={false}\n          type='primary'\n          onClick={login}\n          \n          icon={<LoginOutlined style={{ fontSize: '1.3rem' }} />}\n        >\n          Login\n        </Button>\n      </Form>\n      <br />\n      <p className='mb-1'>\n        <a href='#'>Forgot password?</a>\n      </p>\n\n      <p>\n        Don't have an account? <Link to='sign-up'>Sign up!</Link>\n      </p>\n    </PublicLayout>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}