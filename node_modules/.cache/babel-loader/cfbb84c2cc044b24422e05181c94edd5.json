{"ast":null,"code":"import _toConsumableArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import{ResponsiveContainer,AreaChart,Area,XAxis,YAxis,CartesianGrid,Tooltip}from'recharts';var data=[{name:'Page A',uv:4000,pv:2400,amt:2400},{name:'Page B',uv:3000,pv:1398,amt:2210},{name:'Page C',uv:-1000,pv:9800,amt:2290},{name:'Page D',uv:500,pv:3908,amt:2000},{name:'Page E',uv:-2000,pv:4800,amt:2181},{name:'Page F',uv:-250,pv:3800,amt:2500},{name:'Page G',uv:3490,pv:4300,amt:2100}];var gradientOffset=function gradientOffset(){var dataMax=Math.max.apply(Math,_toConsumableArray(data.map(function(i){return i.uv;})));var dataMin=Math.min.apply(Math,_toConsumableArray(data.map(function(i){return i.uv;})));if(dataMax<=0){return 0;}if(dataMin>=0){return 1;}return dataMax/(dataMax-dataMin);};var off=gradientOffset();var AreaChartFillByValue=function AreaChartFillByValue(){return/*#__PURE__*/React.createElement(ResponsiveContainer,{height:300,widht:'100%'},/*#__PURE__*/React.createElement(AreaChart,{width:500,height:400,data:data,margin:{top:10}},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"name\"}),/*#__PURE__*/React.createElement(YAxis,null),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(\"linearGradient\",{id:\"splitColor\",x1:\"0\",y1:\"0\",x2:\"0\",y2:\"1\"},/*#__PURE__*/React.createElement(\"stop\",{offset:off,stopColor:\"green\",stopOpacity:1}),/*#__PURE__*/React.createElement(\"stop\",{offset:off,stopColor:\"red\",stopOpacity:1}))),/*#__PURE__*/React.createElement(Area,{type:\"monotone\",dataKey:\"uv\",stroke:\"#000\",fill:\"url(#splitColor)\"})));};export default AreaChartFillByValue;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/charts/recharts/charts/AreaChartFillByValue.tsx"],"names":["React","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","data","name","uv","pv","amt","gradientOffset","dataMax","Math","max","map","i","dataMin","min","off","AreaChartFillByValue","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: 'Page C',\n    uv: -1000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: 'Page D',\n    uv: 500,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: 'Page E',\n    uv: -2000,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: 'Page F',\n    uv: -250,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nconst gradientOffset = () => {\n  const dataMax = Math.max(...data.map(i => i.uv));\n  const dataMin = Math.min(...data.map(i => i.uv));\n\n  if (dataMax <= 0) {\n    return 0;\n  }\n  if (dataMin >= 0) {\n    return 1;\n  }\n\n  return dataMax / (dataMax - dataMin);\n};\n\nconst off = gradientOffset();\n\nconst AreaChartFillByValue = () => {\n  return (\n    <ResponsiveContainer height={300} widht={'100%'}>\n      <AreaChart\n        width={500}\n        height={400}\n        data={data}\n        margin={{\n          top: 10\n        }}>\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <defs>\n          <linearGradient id='splitColor' x1='0' y1='0' x2='0' y2='1'>\n            <stop offset={off} stopColor='green' stopOpacity={1} />\n            <stop offset={off} stopColor='red' stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <Area type='monotone' dataKey='uv' stroke='#000' fill='url(#splitColor)' />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default AreaChartFillByValue;\n"]},"metadata":{},"sourceType":"module"}