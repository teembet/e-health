{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import _toConsumableArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import EditAppointment from'./EditAppointment';import AddAppointment from'./AddAppointment';import AppointmentsTable from'../../../layout/components/appointmentsTable/AppointmentsTable';import PageAction from'../../../layout/components/page-action/PageAction';import{useFetchPageData,usePageData}from'../../../hooks/usePage';var pageData={title:'Appointments',fulFilled:false,breadcrumbs:[{title:'Medicine',route:'default-dashboard'},{title:'Appointments'}]};var AppointmentsPage=function AppointmentsPage(){usePageData(pageData);var _useFetchPageData=useFetchPageData('./data/appointments.json',[]),_useFetchPageData2=_slicedToArray(_useFetchPageData,2),appointments=_useFetchPageData2[0],setAppointments=_useFetchPageData2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedAppointment=_useState2[0],setSelectedAppointment=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),addingModalVisibility=_useState4[0],setAddingModalVisibility=_useState4[1];var handleDelete=function handleDelete(appointment){var newAppointments=appointments.filter(function(el){return el!==appointment;});setAppointments(newAppointments);};var handleEdit=function handleEdit(appointment){var editedAppointments=appointments.map(function(el){return el!==selectedAppointment?el:appointment;});setAppointments(editedAppointments);setSelectedAppointment(null);};var openAddingModal=function openAddingModal(){return setAddingModalVisibility(true);};var addAppointment=function addAppointment(appointment){setAppointments([appointment].concat(_toConsumableArray(appointments)));setAddingModalVisibility(false);};var closeAddingModal=function closeAddingModal(){return setAddingModalVisibility(false);};var openEditModal=function openEditModal(appointment){return setSelectedAppointment(appointment);};var closeModal=function closeModal(){setSelectedAppointment(null);};var appointmentsActions=function appointmentsActions(appointment){return/*#__PURE__*/React.createElement(\"div\",{className:\"buttons-list nowrap\"},/*#__PURE__*/React.createElement(_Button,{onClick:openEditModal.bind({},appointment),shape:\"circle\",type:\"primary\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icofont icofont-edit-alt\"})),/*#__PURE__*/React.createElement(_Button,{onClick:handleDelete.bind({},appointment),shape:\"circle\",danger:true},/*#__PURE__*/React.createElement(\"span\",{className:\"icofont icofont-ui-delete\"})));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppointmentsTable,{data:appointments,actions:appointmentsActions}),/*#__PURE__*/React.createElement(PageAction,{onClick:openAddingModal,icon:\"icofont-stethoscope-alt\",type:'primary'}),/*#__PURE__*/React.createElement(AddAppointment,{onClose:closeAddingModal,visible:addingModalVisibility,onSubmit:addAppointment}),/*#__PURE__*/React.createElement(EditAppointment,{appointment:selectedAppointment,visible:!!selectedAppointment,onClose:closeModal,onEdited:handleEdit}));};export default AppointmentsPage;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/dashboards/appointments/AppointmentsPage.tsx"],"names":["React","useState","EditAppointment","AddAppointment","AppointmentsTable","PageAction","useFetchPageData","usePageData","pageData","title","fulFilled","breadcrumbs","route","AppointmentsPage","appointments","setAppointments","selectedAppointment","setSelectedAppointment","addingModalVisibility","setAddingModalVisibility","handleDelete","appointment","newAppointments","filter","el","handleEdit","editedAppointments","map","openAddingModal","addAppointment","closeAddingModal","openEditModal","closeModal","appointmentsActions","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { Button } from 'antd';\n\nimport EditAppointment from './EditAppointment';\nimport AddAppointment from './AddAppointment';\nimport AppointmentsTable from '../../../layout/components/appointmentsTable/AppointmentsTable';\n\nimport PageAction from '../../../layout/components/page-action/PageAction';\nimport { useFetchPageData, usePageData } from '../../../hooks/usePage';\n\nimport { IAppointment } from '../../../interfaces/patient';\nimport { IPageData } from '../../../interfaces/page';\n\nconst pageData: IPageData = {\n  title: 'Appointments',\n  fulFilled: false,\n  breadcrumbs: [\n    {\n      title: 'Medicine',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Appointments'\n    }\n  ]\n};\n\nconst AppointmentsPage = () => {\n  usePageData(pageData);\n  const [appointments, setAppointments] = useFetchPageData<IAppointment[]>(\n    './data/appointments.json',\n    []\n  );\n\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n  const [addingModalVisibility, setAddingModalVisibility] = useState(false);\n\n  const handleDelete = (appointment: IAppointment) => {\n    const newAppointments = appointments.filter((el) => el !== appointment);\n    setAppointments(newAppointments);\n  };\n\n  const handleEdit = (appointment: IAppointment) => {\n    const editedAppointments = appointments.map((el) =>\n      el !== selectedAppointment ? el : appointment\n    );\n    setAppointments(editedAppointments);\n    setSelectedAppointment(null);\n  };\n\n  const openAddingModal = () => setAddingModalVisibility(true);\n\n  const addAppointment = (appointment: IAppointment) => {\n    setAppointments([appointment, ...appointments]);\n    setAddingModalVisibility(false);\n  };\n\n  const closeAddingModal = () => setAddingModalVisibility(false);\n\n  const openEditModal = (appointment: IAppointment) => setSelectedAppointment(appointment);\n\n  const closeModal = () => {\n    setSelectedAppointment(null);\n  };\n\n  const appointmentsActions = (appointment: IAppointment) => (\n    <div className='buttons-list nowrap'>\n      <Button onClick={openEditModal.bind({}, appointment)} shape='circle' type='primary'>\n        <span className='icofont icofont-edit-alt' />\n      </Button>\n      <Button onClick={handleDelete.bind({}, appointment)} shape='circle' danger>\n        <span className='icofont icofont-ui-delete' />\n      </Button>\n    </div>\n  );\n\n  return (\n    <>\n      <AppointmentsTable data={appointments} actions={appointmentsActions} />\n\n      <PageAction onClick={openAddingModal} icon='icofont-stethoscope-alt' type={'primary'} />\n\n      <AddAppointment\n        onClose={closeAddingModal}\n        visible={addingModalVisibility}\n        onSubmit={addAppointment}\n      />\n\n      <EditAppointment\n        appointment={selectedAppointment}\n        visible={!!selectedAppointment}\n        onClose={closeModal}\n        onEdited={handleEdit}\n      />\n    </>\n  );\n};\n\nexport default AppointmentsPage;\n"]},"metadata":{},"sourceType":"module"}