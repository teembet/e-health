{"ast":null,"code":"import { userConstants } from './types'; // let user = JSON.parse(localStorage.getItem('user'));\n// const initialState = user ? { loggedIn: true, user } : {};\n// const initialState = {\n//   registering: false,\n// }\n// export function authentication(state = initialState, action) {\n//   switch (action.type) {\n//     case userConstants.LOGIN_REQUEST:\n//       return {\n//         loggingIn: true,\n//         user: action.user\n//       };\n//     case userConstants.LOGIN_SUCCESS:\n//       return {\n//         loggedIn: true,\n//         user: action.user\n//       };\n//     case userConstants.LOGIN_FAILURE:\n//       return {};\n//     case userConstants.LOGOUT:\n//       return {};\n//     default:\n//       return state\n//   }\n// }\n\nexport function registration() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, \"state\");\n\n  switch (action.type) {\n    case userConstants.REGISTER_REQUEST:\n      return { ...state,\n        ...action.payload\n      };\n\n    case userConstants.REGISTER_SUCCESS:\n      console.log(action.payload, \"here\");\n      return [...action.payload, ...state];\n      return { ...state,\n        ...action.payload\n      };\n    // return { ...state, registering: false }\n\n    case userConstants.REGISTER_FAILURE:\n      return { ...state,\n        registering: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction getNewId(patients) {\n  return patients.map(patient => patient.id).map(id => parseInt(id)).reduce((largest, id) => Math.max(largest, id + 1), -1).toString();\n}","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/redux/auth/reducers.ts"],"names":["userConstants","registration","state","action","console","log","type","REGISTER_REQUEST","payload","REGISTER_SUCCESS","REGISTER_FAILURE","registering","getNewId","patients","map","patient","id","parseInt","reduce","largest","Math","max","toString"],"mappings":"AACA,SAAQA,aAAR,QAA4B,SAA5B,C,CACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,GAA0C;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkB,OAAlB;;AACE,UAAQC,MAAM,CAACG,IAAf;AACE,SAAKN,aAAa,CAACO,gBAAnB;AAEE,aAAO,EAAE,GAAGL,KAAL;AAAY,WAAGC,MAAM,CAACK;AAAtB,OAAP;;AACF,SAAKR,aAAa,CAACS,gBAAnB;AACEL,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACK,OAAnB,EAA2B,MAA3B;AACH,aAAS,CAAE,GAAGL,MAAM,CAACK,OAAZ,EAAsB,GAAGN,KAAzB,CAAT;AACG,aAAO,EAAE,GAAGA,KAAL;AAAY,WAAGC,MAAM,CAACK;AAAtB,OAAP;AACA;;AACF,SAAKR,aAAa,CAACU,gBAAnB;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYS,QAAAA,WAAW,EAAE;AAAzB,OAAP;;AACF;AACE,aAAOT,KAAP;AAZJ;AAcD;;AACP,SAASU,QAAT,CAAkBC,QAAlB,EAA4B;AACxB,SAAOA,QAAQ,CACZC,GADI,CACCC,OAAD,IAAaA,OAAO,CAACC,EADrB,EAEJF,GAFI,CAECE,EAAD,IAAQC,QAAQ,CAACD,EAAD,CAFhB,EAGJE,MAHI,CAGG,CAACC,OAAD,EAAUH,EAAV,KAAiBI,IAAI,CAACC,GAAL,CAASF,OAAT,EAAkBH,EAAE,GAAG,CAAvB,CAHpB,EAG+C,CAAC,CAHhD,EAIJM,QAJI,EAAP;AAKD","sourcesContent":["\nimport {userConstants} from './types';\n    // let user = JSON.parse(localStorage.getItem('user'));\n    // const initialState = user ? { loggedIn: true, user } : {};\n    // const initialState = {\n    //   registering: false,\n    // }\n    // export function authentication(state = initialState, action) {\n    //   switch (action.type) {\n    //     case userConstants.LOGIN_REQUEST:\n    //       return {\n    //         loggingIn: true,\n    //         user: action.user\n    //       };\n    //     case userConstants.LOGIN_SUCCESS:\n    //       return {\n    //         loggedIn: true,\n    //         user: action.user\n    //       };\n    //     case userConstants.LOGIN_FAILURE:\n    //       return {};\n    //     case userConstants.LOGOUT:\n    //       return {};\n    //     default:\n    //       return state\n    //   }\n    // }\n\n    export function registration(state = [], action) {\n      console.log(state,\"state\")\n        switch (action.type) {\n          case userConstants.REGISTER_REQUEST:\n         \n            return { ...state, ...action.payload };\n          case userConstants.REGISTER_SUCCESS:\n            console.log(action.payload,\"here\")\n         return   [ ...action.payload , ...state]\n            return { ...state, ...action.payload };\n            // return { ...state, registering: false }\n          case userConstants.REGISTER_FAILURE:\n            return { ...state, registering: false }\n          default:\n            return state\n        }\n      }\nfunction getNewId(patients) {\n    return patients\n      .map((patient) => patient.id)\n      .map((id) => parseInt(id))\n      .reduce((largest, id) => Math.max(largest, id + 1), -1)\n      .toString();\n  }"]},"metadata":{},"sourceType":"module"}