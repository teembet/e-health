{"ast":null,"code":"import { SET_SETTINGS, RESET_SETTINGS, UPDATE_SETTINGS, TOGGLE_SIDEBAR } from './types';\nimport { DEFAULT_SETTINGS } from './settings';\nconst initialState = DEFAULT_SETTINGS;\nexport const settingsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_SETTINGS:\n      return { ...action.payload\n      };\n\n    case UPDATE_SETTINGS:\n      return { ...state,\n        ...action.payload\n      };\n\n    case RESET_SETTINGS:\n      return { ...initialState\n      };\n\n    case TOGGLE_SIDEBAR:\n      return { ...state,\n        sidebarOpened: !state.sidebarOpened\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/redux/settings/reducer.ts"],"names":["SET_SETTINGS","RESET_SETTINGS","UPDATE_SETTINGS","TOGGLE_SIDEBAR","DEFAULT_SETTINGS","initialState","settingsReducer","state","action","type","payload","sidebarOpened"],"mappings":"AAAA,SAEEA,YAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,cALF,QAMO,SANP;AASA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,YAA0B,GAAGD,gBAAnC;AAEA,OAAO,MAAME,eAAe,GAAG,YAGZ;AAAA,MAFjBC,KAEiB,uEAFKF,YAEL;AAAA,MADjBG,MACiB;;AACjB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAL;AACE,aAAO,EAAE,GAAGQ,MAAM,CAACE;AAAZ,OAAP;;AACF,SAAKR,eAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,WAAGC,MAAM,CAACE;AAAtB,OAAP;;AACF,SAAKT,cAAL;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;;AACF,SAAKF,cAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYI,QAAAA,aAAa,EAAE,CAACJ,KAAK,CAACI;AAAlC,OAAP;;AACF;AACE,aAAO,EAAE,GAAGJ;AAAL,OAAP;AAVJ;AAYD,CAhBM","sourcesContent":["import {\n  SettingsActionTypes,\n  SET_SETTINGS,\n  RESET_SETTINGS,\n  UPDATE_SETTINGS,\n  TOGGLE_SIDEBAR\n} from './types';\n\nimport { IAppSettings } from '../../interfaces/settings';\nimport { DEFAULT_SETTINGS } from './settings';\n\nconst initialState: IAppSettings = DEFAULT_SETTINGS;\n\nexport const settingsReducer = (\n  state: IAppSettings = initialState,\n  action: SettingsActionTypes\n): IAppSettings => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      return { ...action.payload };\n    case UPDATE_SETTINGS:\n      return { ...state, ...action.payload };\n    case RESET_SETTINGS:\n      return { ...initialState };\n    case TOGGLE_SIDEBAR:\n      return { ...state, sidebarOpened: !state.sidebarOpened };\n    default:\n      return { ...state };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}