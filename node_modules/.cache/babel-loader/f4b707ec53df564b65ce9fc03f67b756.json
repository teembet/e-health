{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/base/BaseLayout.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/footer/Footer';\nimport SettingsForm from '../components/settings/SettingsForm';\nimport { updateSettings, resetSettings } from '../../redux/settings/actions';\nimport { fetchPatients, setPatients } from '../../redux/patients/actions';\nimport className from '../../utils/class-names';\nimport './BaseLayout.scss';\nconst patientsUrl = '/data/patients.json';\n\nconst BaseLayout = _ref => {\n  let {\n    nav,\n    topNav,\n    sideNav,\n    orientation,\n    children\n  } = _ref;\n  const [showSettings, setShowSettings] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const dispatch = useDispatch();\n  const sidebarOpened = useSelector(state => state.settings.sidebarOpened);\n  const settings = useSelector(state => state.settings);\n  const pageData = useSelector(state => state.pageData);\n  const patientsList = useSelector(state => state.patients);\n  useEffect(() => {\n    patientsList ? dispatch(setPatients(patientsL)) : dispatch(fetchPatients(patientsUrl));\n  }, [patientsUrl]);\n\n  const handleScroll = event => {\n    setScrolled(event.target.scrollTop > 0);\n  };\n\n  const mainContentClasses = className({\n    'main-content': true,\n    loaded: pageData.loaded,\n    fulfilled: pageData.fulFilled\n  });\n  const mainContentWrapClasses = className({\n    'main-content-wrap': true\n  });\n\n  const onUpdateSettings = settings => dispatch(updateSettings(settings));\n\n  const toggleSettings = () => setShowSettings(!showSettings);\n\n  const onResetSettings = () => dispatch(resetSettings());\n\n  const contentOverlay = /*#__PURE__*/React.createElement(\"div\", {\n    className: className({\n      'content-overlay': true,\n      show: sidebarOpened\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `layout ${orientation}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `app-container ${settings.boxed && 'boxed'} ${scrolled && 'scrolled'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, nav, topNav, sideNav, /*#__PURE__*/React.createElement(\"main\", {\n    onScroll: handleScroll,\n    className: mainContentClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont-spinner-alt-4 rotate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: mainContentWrapClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, pageData && !!pageData.title && /*#__PURE__*/React.createElement(\"header\", {\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, pageData.title)), children)), /*#__PURE__*/React.createElement(Footer, {\n    breadcrumbs: pageData.breadcrumbs,\n    layout: settings.layout,\n    boxed: settings.boxed,\n    loaded: pageData.loaded,\n    openModal: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), contentOverlay, /*#__PURE__*/React.createElement(_Modal, {\n    visible: showSettings,\n    onCancel: toggleSettings,\n    footer: null,\n    title: /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"m-0\",\n      style: {\n        opacity: 0.8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Settings\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SettingsForm, {\n    settings: settings,\n    onResetSettings: onResetSettings,\n    onUpdateSetting: onUpdateSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default BaseLayout;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/base/BaseLayout.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Footer","SettingsForm","updateSettings","resetSettings","fetchPatients","setPatients","className","patientsUrl","BaseLayout","nav","topNav","sideNav","orientation","children","showSettings","setShowSettings","scrolled","setScrolled","dispatch","sidebarOpened","state","settings","pageData","patientsList","patients","patientsL","handleScroll","event","target","scrollTop","mainContentClasses","loaded","fulfilled","fulFilled","mainContentWrapClasses","onUpdateSettings","toggleSettings","onResetSettings","contentOverlay","show","boxed","title","breadcrumbs","layout","opacity"],"mappings":"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","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Modal } from 'antd';\n\nimport Footer from '../components/footer/Footer';\nimport SettingsForm from '../components/settings/SettingsForm';\n\nimport { updateSettings, resetSettings } from '../../redux/settings/actions';\nimport { fetchPatients, setPatients } from '../../redux/patients/actions';\n\nimport className from '../../utils/class-names';\n\nimport { IAppSettings } from '../../interfaces/settings';\nimport { IAppState } from '../../interfaces/app-state';\nimport { IPageData } from '../../interfaces/page';\n\nimport './BaseLayout.scss';\nimport { AppState } from '../../redux/store';\n\nconst patientsUrl = '/data/patients.json';\n\ntype Props = {\n  nav: ReactNode;\n  sideNav?: ReactNode;\n  topNav?: ReactNode;\n  children: ReactNode;\n  orientation: 'vertical' | 'horizontal';\n};\n\nconst BaseLayout = ({ nav, topNav, sideNav, orientation, children }: Props) => {\n  const [showSettings, setShowSettings] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const sidebarOpened = useSelector<IAppState, boolean>((state) => state.settings.sidebarOpened);\n  const settings = useSelector<IAppState, IAppSettings>((state) => state.settings);\n  const pageData = useSelector<IAppState, IPageData>((state) => state.pageData);\n  const patientsList=useSelector((state:AppState)=>state.patients)\n\n  useEffect(() => {\n\n   patientsList?dispatch(setPatients(patientsL)): dispatch(fetchPatients(patientsUrl));\n  }, [patientsUrl]);\n\n  const handleScroll = (event) => {\n    setScrolled(event.target.scrollTop > 0);\n  };\n\n  const mainContentClasses = className({\n    'main-content': true,\n    loaded: pageData.loaded,\n    fulfilled: pageData.fulFilled\n  });\n\n  const mainContentWrapClasses = className({\n    'main-content-wrap': true\n  });\n\n  const onUpdateSettings = (settings) => dispatch(updateSettings(settings));\n  const toggleSettings = () => setShowSettings(!showSettings);\n  const onResetSettings = () => dispatch(resetSettings());\n\n  const contentOverlay = (\n    <div\n      className={className({\n        'content-overlay': true,\n        show: sidebarOpened\n      })}\n    />\n  );\n\n  return (\n    <div className={`layout ${orientation}`}>\n      <div className={`app-container ${settings.boxed && 'boxed'} ${scrolled && 'scrolled'}`}>\n        {nav}\n\n        {topNav}\n\n        {sideNav}\n\n        <main onScroll={handleScroll} className={mainContentClasses}>\n          <div className='app-loader'>\n            <i className='icofont-spinner-alt-4 rotate' />\n          </div>\n\n          <div className={mainContentWrapClasses}>\n            {pageData && !!pageData.title && (\n              <header className='page-header'>\n                <h1 className='page-title'>{pageData.title}</h1>\n              </header>\n            )}\n            {children}\n          </div>\n        </main>\n\n        <Footer\n          breadcrumbs={pageData.breadcrumbs}\n          layout={settings.layout}\n          boxed={settings.boxed}\n          loaded={pageData.loaded}\n          openModal={toggleSettings}\n        />\n        {contentOverlay}\n        <Modal\n          visible={showSettings}\n          onCancel={toggleSettings}\n          footer={null}\n          title={\n            <h3 className='m-0' style={{ opacity: 0.8 }}>\n              Settings\n            </h3>\n          }\n        >\n          <SettingsForm\n            settings={settings}\n            onResetSettings={onResetSettings}\n            onUpdateSetting={onUpdateSettings}\n          />\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default BaseLayout;\n"]},"metadata":{},"sourceType":"module"}