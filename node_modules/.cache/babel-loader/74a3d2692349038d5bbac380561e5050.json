{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/services/InvoicesTable.tsx\";\nimport React from 'react';\n\nconst InvoiceStatus = _ref => {\n  let {\n    status\n  } = _ref;\n  if (status === 'Paid') return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"color-green nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-check-circled mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), \"Paid\");\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"color-error nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icofont icofont-close-circled mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), \"Un-Paid\");\n};\n\nconst columnsConfig = [{\n  key: 'icon',\n  title: '#',\n  dataIndex: 'icon',\n  render: icon => /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '50px'\n    },\n    className: `icofont ${icon} text-large`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  })\n}, {\n  key: 'date',\n  title: 'Date',\n  sorter: (curent, next) => {\n    if (curent.date === next.date) return 0;\n    return curent.date > next.date ? 1 : -1;\n  },\n  render: _ref2 => {\n    let {\n      date\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icofont-clock-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, date));\n  }\n}, {\n  key: 'recipient',\n  title: 'Recipient',\n  render: _ref3 => {\n    let {\n      recipient\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }\n    }, recipient);\n  }\n}, {\n  key: 'status',\n  title: 'Status',\n  render: _ref4 => {\n    let {\n      status\n    } = _ref4;\n    return /*#__PURE__*/React.createElement(InvoiceStatus, {\n      status: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    });\n  }\n}, {\n  key: 'amount',\n  title: 'Amount',\n  render: _ref5 => {\n    let {\n      amount\n    } = _ref5;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, amount);\n  },\n  sorter: (cur, next) => cur.amount > next.amount ? 1 : -1\n}];\n\nconst InvoicesTable = _ref6 => {\n  let {\n    invoices\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(_Table, {\n    rowKey: \"icon\",\n    columns: columnsConfig,\n    dataSource: invoices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default InvoicesTable;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/services/InvoicesTable.tsx"],"names":["React","InvoiceStatus","status","columnsConfig","key","title","dataIndex","render","icon","fontSize","sorter","curent","next","date","recipient","amount","cur","InvoicesTable","invoices"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ColumnProps } from 'antd/lib/table';\nimport { IInvoicePreview } from '../../interfaces/invoice';\nimport { Table } from 'antd';\n\nconst InvoiceStatus = ({ status }: Pick<IInvoicePreview, 'status'>) => {\n  if (status === 'Paid')\n    return (\n      <span className='color-green nowrap'>\n        <i className='icofont icofont-check-circled mr-2' />\n        Paid\n      </span>\n    );\n\n  return (\n    <span className='color-error nowrap'>\n      <i className='icofont icofont-close-circled mr-2' />\n      Un-Paid\n    </span>\n  );\n};\n\nconst columnsConfig: ColumnProps<IInvoicePreview>[] = [\n  {\n    key: 'icon',\n    title: '#',\n    dataIndex: 'icon',\n    render: (icon) => <span style={{ fontSize: '50px' }} className={`icofont ${icon} text-large`} />\n  },\n  {\n    key: 'date',\n    title: 'Date',\n    sorter: (curent, next) => {\n      if (curent.date === next.date) return 0;\n\n      return curent.date > next.date ? 1 : -1;\n    },\n    render: ({ date }) => (\n      <span className='text-muted nowrap'>\n        <i className='icofont-clock-time' />\n        <span className='text-muted ml-2'>{date}</span>\n      </span>\n    )\n  },\n  {\n    key: 'recipient',\n    title: 'Recipient',\n    render: ({ recipient }) => <strong>{recipient}</strong>\n  },\n  {\n    key: 'status',\n    title: 'Status',\n    render: ({ status }) => <InvoiceStatus status={status} />\n  },\n  {\n    key: 'amount',\n    title: 'Amount',\n    render: ({ amount }) => <span className='text-right'>{amount}</span>,\n    sorter: (cur, next) => (cur.amount > next.amount ? 1 : -1)\n  }\n];\n\nconst InvoicesTable = ({ invoices }) => (\n  <Table rowKey='icon' columns={columnsConfig} dataSource={invoices} />\n);\n\nexport default InvoicesTable;\n"]},"metadata":{},"sourceType":"module"}