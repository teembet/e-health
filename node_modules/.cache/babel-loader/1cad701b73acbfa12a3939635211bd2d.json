{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/switch/style\";import _Switch from\"antd/es/switch\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import _defineProperty from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import React,{useState,useEffect}from'react';import{LoginOutlined}from'@ant-design/icons/lib';import PublicLayout from'../../layout/public/Public';import{Link}from'react-router-dom';import{useForm}from'antd/es/form/Form';import{navigateHome}from'../../utils/naviagate-home';import*as userActions from'../../redux/auth/actions';import{useDispatch,useSelector}from\"react-redux\";var Item=_Form.Item;var SignIn=function SignIn(){var _useForm=useForm(),_useForm2=_slicedToArray(_useForm,1),form=_useForm2[0];var _useState=useState(),_useState2=_slicedToArray(_useState,2),inputValues=_useState2[0],setInputValues=_useState2[1];var dispatch=useDispatch();var users=useSelector(function(state){return state.registration;});useEffect(function(){// When state will be updated(in our case, when items will be fetched), \n// we will update local component state and force component to rerender \n// with new data.\n//  setUsers((store.getState().registration)?(store.getState().registration):null)\n});// const[email,setEmail]=useState('')\n// const[password,setPassword]=useState('')\n// const { values, setValues, handleSubmit } = useFormik<IPatient>({\n//   onSubmit: (values) => setSubmitted(values),\n//   initialValues: { ...user }\n// });\nvar login=function login(){var email=inputValues.email,password=inputValues.password;if(email!==''&&password!==''){form.validateFields().then(function(){var user=users.find(function(x){return x.email===email;});console.log(user,\"users\");//   users.filter((user)=>{\n//     if(searchQuery===\"\"){\n//       console.log(\"its empty\")\n//       return person\n//     }\n//     else if (person.name.toLowerCase().includes(searchQuery.toLowerCase())){\n//       console.log(person,\"its not empty\")\n//    setFilterData([...filterData,person])\n//  console.log(user,\"ittt\")\nif(user){dispatch(userActions.login(user));navigateHome();}else{console.error(\"user not in the system\");}}).catch(function(){return null;});}else{}};//   handleChange = (e) => {\n//     const { name } = e.target;\n//     this.setState({ [name]: e.target.value })\n// }\nvar handleChange=function handleChange(e){setInputValues(_objectSpread(_objectSpread({},inputValues),{},_defineProperty({},e.target.name,e.target.value)));};return/*#__PURE__*/React.createElement(PublicLayout,{bgImg:\"\".concat(window.origin,\"/content/login-page.jpg\")},/*#__PURE__*/React.createElement(\"h4\",{className:\"mt-0 mb-1\"},\"Login form\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-color-200\"},\"Login to access your Account\"),/*#__PURE__*/React.createElement(_Form,{form:form,layout:\"vertical\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Item,{name:\"login\",rules:[{required:true,message:/*#__PURE__*/React.createElement(React.Fragment,null)}]},/*#__PURE__*/React.createElement(_Input,{placeholder:\"Email\",onChange:handleChange,name:\"email\"})),/*#__PURE__*/React.createElement(Item,{name:\"password\",rules:[{required:true,message:/*#__PURE__*/React.createElement(React.Fragment,null)}]},/*#__PURE__*/React.createElement(_Input,{placeholder:\"Password\",type:\"password\",onChange:handleChange,name:\"password\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center mb-4\"},/*#__PURE__*/React.createElement(_Switch,{defaultChecked:true}),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"ml-2\"},\"Remember me\")),/*#__PURE__*/React.createElement(_Button,{block:false,type:\"primary\",onClick:login,icon:/*#__PURE__*/React.createElement(LoginOutlined,{style:{fontSize:'1.3rem'}})},\"Login\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",{className:\"mb-1\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#\"},\"Forgot password?\")),/*#__PURE__*/React.createElement(\"p\",null,\"Don't have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"sign-up\"},\"Sign up!\")));};export default SignIn;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/sessions/Sign-in.tsx"],"names":["React","useState","useEffect","LoginOutlined","PublicLayout","Link","useForm","navigateHome","userActions","useDispatch","useSelector","Item","SignIn","form","inputValues","setInputValues","dispatch","users","state","registration","login","email","password","validateFields","then","user","find","x","console","log","error","catch","handleChange","e","target","name","value","window","origin","required","message","fontSize"],"mappings":"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","sourcesContent":["import React,{ChangeEvent,useState,useEffect} from 'react';\n\nimport { Button, Form, Input, Switch } from 'antd';\nimport { LoginOutlined } from '@ant-design/icons/lib';\n\nimport PublicLayout from '../../layout/public/Public';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'antd/es/form/Form';\nimport { navigateHome } from '../../utils/naviagate-home';\nimport * as userActions  from '../../redux/auth/actions';\nimport { useDispatch,useSelector} from \"react-redux\";\nimport { AppState, store } from '../../redux/store';\n\nconst { Item } = Form;\n\n\nconst SignIn = () => {\n  const [form] = useForm();\n  \n  const [inputValues,setInputValues]=useState<IUser>()\nconst dispatch = useDispatch();\nconst users=useSelector((state:AppState)=>state.registration)\n  interface IUser {\n    email: string;\n    password:string;\n    \n  }\n\n\nuseEffect(() => {\n  \n    // When state will be updated(in our case, when items will be fetched), \n    // we will update local component state and force component to rerender \n    // with new data.\n  //  setUsers((store.getState().registration)?(store.getState().registration):null)\n   \n})\n// const[email,setEmail]=useState('')\n// const[password,setPassword]=useState('')\n\n// const { values, setValues, handleSubmit } = useFormik<IPatient>({\n//   onSubmit: (values) => setSubmitted(values),\n//   initialValues: { ...user }\n// });\n\n\n\n  const login = () => {\n    const { email, password } =inputValues;\n    if (email !== '' && password !== '') {\n    form\n      .validateFields()\n      .then(() => {\n      const user=  users.find(x => x.email === email)\nconsole.log(user,\"users\")\n    //   users.filter((user)=>{\n    //     if(searchQuery===\"\"){\n    //       console.log(\"its empty\")\n    //       return person\n    //     }\n    //     else if (person.name.toLowerCase().includes(searchQuery.toLowerCase())){\n    //       console.log(person,\"its not empty\")\n    //    setFilterData([...filterData,person])\n    //  console.log(user,\"ittt\")\n     if (user){\n      dispatch(userActions.login(user));\n        navigateHome();\n     }else{\n       console.error(\"user not in the system\")\n     }\n  \n       } )\n      .catch(() => null);\n      }else{\n\n      }\n\n  };\n//   handleChange = (e) => {\n//     const { name } = e.target;\n//     this.setState({ [name]: e.target.value })\n// }\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) => {\n    setInputValues({ ...inputValues,[e.target.name]: e.target.value });\n    \n  };\n  return (\n    <PublicLayout bgImg={`${window.origin}/content/login-page.jpg`}>\n      <h4 className='mt-0 mb-1'>Login form</h4>\n{/* <p>{{users}}</p> */}\n      <p className='text-color-200'>Login to access your Account</p>\n\n      <Form form={form} layout='vertical' className='mb-4'>\n        <Item name='login' rules={[{ required: true, message: <></> }]}>\n          <Input placeholder='Email'  onChange={handleChange} name='email' />\n        </Item>\n        <Item name='password' rules={[{ required: true, message: <></> }]}>\n          <Input placeholder='Password' type='password' onChange={handleChange} name='password' />\n        </Item>\n\n        <div className='d-flex align-items-center mb-4'>\n          <Switch defaultChecked /> <span className='ml-2'>Remember me</span>\n        </div>\n\n        <Button\n        \n          block={false}\n          type='primary'\n          onClick={login}\n          \n          icon={<LoginOutlined style={{ fontSize: '1.3rem' }} />}\n        >\n          Login\n        </Button>\n      </Form>\n      <br />\n      <p className='mb-1'>\n        <a href='#'>Forgot password?</a>\n      </p>\n\n      <p>\n        Don't have an account? <Link to='sign-up'>Sign up!</Link>\n      </p>\n    </PublicLayout>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}