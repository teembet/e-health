{"ast":null,"code":"import _slicedToArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{SketchPicker}from'react-color';import PickerField from'./picker-field/PickerFileld';import ColorUtils from'../../utils/color-utils';var getContrast=function getContrast(hexColor){if(!hexColor){return null;}var _ColorUtils$hexToRgb=ColorUtils.hexToRgb(hexColor),_ColorUtils$hexToRgb2=_slicedToArray(_ColorUtils$hexToRgb,3),r=_ColorUtils$hexToRgb2[0],g=_ColorUtils$hexToRgb2[1],b=_ColorUtils$hexToRgb2[2];return ColorUtils.checkContrastColor(r,g,b);};var getColor=function getColor(hexColor){return{color:hexColor,contrast:getContrast(hexColor)};};var ColorPicker=function ColorPicker(_ref){var pickerOpened=_ref.opened,color=_ref.color,onColorChange=_ref.onColorChange;var _useState=useState(pickerOpened),_useState2=_slicedToArray(_useState,2),opened=_useState2[0],setOpened=_useState2[1];var handleColorChange=function handleColorChange(color){return onColorChange(getColor(color.hex));};var handlePickerOpen=function handlePickerOpen(){return setOpened(true);};var handleClose=function handleClose(){return setOpened(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PickerField,{savedColor:color,onOpenPicker:handlePickerOpen}),opened&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"picker-cover\",onClick:handleClose}),/*#__PURE__*/React.createElement(SketchPicker,{onChangeComplete:handleColorChange,color:color,presetColors:[],disableAlpha:true})));};export default ColorPicker;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/ui/color-picker/ColorPicker.tsx"],"names":["React","useState","SketchPicker","PickerField","ColorUtils","getContrast","hexColor","hexToRgb","r","g","b","checkContrastColor","getColor","color","contrast","ColorPicker","pickerOpened","opened","onColorChange","setOpened","handleColorChange","hex","handlePickerOpen","handleClose"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,YAAT,KAA6B,aAA7B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAsB,CACxC,GAAI,CAACA,QAAL,CAAe,CACb,MAAO,KAAP,CACD,CAED,yBAAkBF,UAAU,CAACG,QAAX,CAAoBD,QAApB,CAAlB,8DAAOE,CAAP,0BAAUC,CAAV,0BAAaC,CAAb,0BACA,MAAON,CAAAA,UAAU,CAACO,kBAAX,CAA8BH,CAA9B,CAAiCC,CAAjC,CAAoCC,CAApC,CAAP,CACD,CAPD,CASA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,QAAD,QAAoC,CACnDO,KAAK,CAAEP,QAD4C,CAEnDQ,QAAQ,CAAET,WAAW,CAACC,QAAD,CAF8B,CAApC,EAAjB,CAYA,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA2D,IAAhDC,CAAAA,YAAgD,MAAxDC,MAAwD,CAAlCJ,KAAkC,MAAlCA,KAAkC,CAA3BK,aAA2B,MAA3BA,aAA2B,CAC7E,cAA4BjB,QAAQ,CAAUe,YAAV,CAApC,wCAAOC,MAAP,eAAeE,SAAf,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAP,KAAK,QAAIK,CAAAA,aAAa,CAACN,QAAQ,CAACC,KAAK,CAACQ,GAAP,CAAT,CAAjB,EAA/B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMH,CAAAA,SAAS,CAAC,IAAD,CAAf,EAAzB,CAEA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMJ,CAAAA,SAAS,CAAC,KAAD,CAAf,EAApB,CAEA,mBACE,qDACE,oBAAC,WAAD,EAAa,UAAU,CAAEN,KAAzB,CAAgC,YAAY,CAAES,gBAA9C,EADF,CAGGL,MAAM,eACL,qDACE,2BAAK,SAAS,CAAC,cAAf,CAA8B,OAAO,CAAEM,WAAvC,EADF,cAEE,oBAAC,YAAD,EACE,gBAAgB,CAAEH,iBADpB,CAEE,KAAK,CAAEP,KAFT,CAGE,YAAY,CAAE,EAHhB,CAIE,YAAY,KAJd,EAFF,CAJJ,CADF,CAiBD,CA1BD,CA4BA,cAAeE,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport PickerField from './picker-field/PickerFileld';\nimport ColorUtils from '../../utils/color-utils';\n\nexport type PickerColor = {\n  color: string;\n  contrast: string;\n};\n\nconst getContrast = (hexColor: string) => {\n  if (!hexColor) {\n    return null;\n  }\n\n  const [r, g, b] = ColorUtils.hexToRgb(hexColor);\n  return ColorUtils.checkContrastColor(r, g, b);\n};\n\nconst getColor = (hexColor: string): PickerColor => ({\n  color: hexColor,\n  contrast: getContrast(hexColor)\n});\n\ntype Props = {\n  color?: string;\n  secondColor?: string;\n  opened?: boolean;\n  onColorChange?: (color: PickerColor) => void;\n};\n\nconst ColorPicker = ({ opened: pickerOpened, color, onColorChange }: Props) => {\n  const [opened, setOpened] = useState<boolean>(pickerOpened);\n\n  const handleColorChange = color => onColorChange(getColor(color.hex));\n\n  const handlePickerOpen = () => setOpened(true);\n\n  const handleClose = () => setOpened(false);\n\n  return (\n    <>\n      <PickerField savedColor={color} onOpenPicker={handlePickerOpen} />\n\n      {opened && (\n        <>\n          <div className='picker-cover' onClick={handleClose} />\n          <SketchPicker\n            onChangeComplete={handleColorChange}\n            color={color}\n            presetColors={[]}\n            disableAlpha\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}