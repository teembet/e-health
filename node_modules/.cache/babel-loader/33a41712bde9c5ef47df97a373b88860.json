{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/switch/style\";import _Switch from\"antd/es/switch\";import\"antd/es/select/style\";import _Select from\"antd/es/select\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import _defineProperty from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useRef}from'react';import ColorPicker from'../../../ui/color-picker/ColorPicker';import{history}from'../../../redux/store';import'./SettingsForm.scss';var SettingsForm=function SettingsForm(_ref){var settings=_ref.settings,onResetSettings=_ref.onResetSettings,onUpdateSetting=_ref.onUpdateSetting;var downloadLink=useRef(null);var boxed=settings.boxed,sidebarBg=settings.sidebarBg,topbarBg=settings.topbarBg;var layoutUrl=history.location.pathname.split('/')[1];var handleReset=function handleReset(){onResetSettings();};var handleDownload=function handleDownload(){var settingsJSON=JSON.stringify(settings);var dataStr='data:text/json;charset=utf-8,'+encodeURIComponent(settingsJSON);downloadLink.current.setAttribute('href',dataStr);downloadLink.current.setAttribute('download','settings.json');downloadLink.current.click();};var setValue=function setValue(name,value){onUpdateSetting(_objectSpread(_objectSpread({},settings),{},_defineProperty({},name,value)));};var handleLayoutChange=function handleLayoutChange(type){var currentRoute=history.location.pathname.split('/')[2];history.push(\"/\".concat(type,\"/\").concat(currentRoute));setValue('layout',type);};var handleSideBgChange=function handleSideBgChange(_ref2){var color=_ref2.color,contrast=_ref2.contrast;return onUpdateSetting(_objectSpread(_objectSpread({},settings),{},{sidebarBg:color,sidebarColor:contrast}));};var handleNavBgChange=function handleNavBgChange(_ref3){var color=_ref3.color;return setValue('topbarBg',color);};var handleBoxedChange=function handleBoxedChange(boxed){return setValue('boxed',boxed);};var sidebarPickerLabel=layoutUrl==='vertical'?'Sidebar background':'Second navbar background';return/*#__PURE__*/React.createElement(_Form,{layout:\"vertical\",className:\"settings-form\"},/*#__PURE__*/React.createElement(_Form.Item,{label:\"Topbar background\"},/*#__PURE__*/React.createElement(ColorPicker,{onColorChange:handleNavBgChange,color:topbarBg})),/*#__PURE__*/React.createElement(_Form.Item,{label:sidebarPickerLabel},/*#__PURE__*/React.createElement(ColorPicker,{onColorChange:handleSideBgChange,color:sidebarBg})),/*#__PURE__*/React.createElement(_Form.Item,{label:\"Layout\"},/*#__PURE__*/React.createElement(_Select,{onChange:handleLayoutChange,defaultValue:layoutUrl},/*#__PURE__*/React.createElement(_Select.Option,{value:'vertical'},\"Vertical\"),/*#__PURE__*/React.createElement(_Select.Option,{value:'horizontal'},\"Horizontal\"))),/*#__PURE__*/React.createElement(_Form.Item,{label:\"Boxed\"},/*#__PURE__*/React.createElement(_Switch,{onChange:handleBoxedChange,checked:boxed})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between buttons-list settings-actions\"},/*#__PURE__*/React.createElement(_Button,{danger:true,onClick:handleReset},\"Reset to default\"),/*#__PURE__*/React.createElement(_Button,{type:\"primary\",onClick:handleDownload},\"Download settings\")),/*#__PURE__*/React.createElement(\"a\",{href:\"#\",ref:downloadLink,style:{display:'none'}}));};export default SettingsForm;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/settings/SettingsForm.tsx"],"names":["React","useRef","ColorPicker","history","SettingsForm","settings","onResetSettings","onUpdateSetting","downloadLink","boxed","sidebarBg","topbarBg","layoutUrl","location","pathname","split","handleReset","handleDownload","settingsJSON","JSON","stringify","dataStr","encodeURIComponent","current","setAttribute","click","setValue","name","value","handleLayoutChange","type","currentRoute","push","handleSideBgChange","color","contrast","sidebarColor","handleNavBgChange","handleBoxedChange","sidebarPickerLabel","display"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n\nimport { Form, Select, Switch, Button } from 'antd';\n\nimport ColorPicker from '../../../ui/color-picker/ColorPicker';\nimport { history } from '../../../redux/store';\n\nimport { IAppSettings } from '../../../interfaces/settings';\n\nimport './SettingsForm.scss';\n\ntype Props = {\n  settings: IAppSettings;\n  onResetSettings: () => void;\n  onUpdateSetting: (settings: IAppSettings) => void;\n};\n\nconst SettingsForm = ({ settings, onResetSettings, onUpdateSetting }: Props) => {\n  const downloadLink = useRef<HTMLAnchorElement>(null);\n  const { boxed, sidebarBg, topbarBg } = settings;\n\n  const layoutUrl = history.location.pathname.split('/')[1];\n\n  const handleReset = () => {\n    onResetSettings();\n  };\n\n  const handleDownload = () => {\n    const settingsJSON = JSON.stringify(settings);\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(settingsJSON);\n\n    downloadLink.current.setAttribute('href', dataStr);\n    downloadLink.current.setAttribute('download', 'settings.json');\n    downloadLink.current.click();\n  };\n\n  const setValue = (name: string, value: any) => {\n    onUpdateSetting({ ...settings, [name]: value });\n  };\n\n  const handleLayoutChange = (type: string) => {\n    const currentRoute = history.location.pathname.split('/')[2];\n\n    history.push(`/${type}/${currentRoute}`);\n    setValue('layout', type);\n  };\n\n  const handleSideBgChange = ({ color, contrast }) =>\n    onUpdateSetting({ ...settings, sidebarBg: color, sidebarColor: contrast });\n\n  const handleNavBgChange = ({ color }) => setValue('topbarBg', color);\n  const handleBoxedChange = (boxed: boolean) => setValue('boxed', boxed);\n\n  const sidebarPickerLabel =\n    layoutUrl === 'vertical' ? 'Sidebar background' : 'Second navbar background';\n\n  return (\n    <Form layout='vertical' className='settings-form'>\n      <Form.Item label='Topbar background'>\n        <ColorPicker onColorChange={handleNavBgChange} color={topbarBg} />\n      </Form.Item>\n\n      <Form.Item label={sidebarPickerLabel}>\n        <ColorPicker onColorChange={handleSideBgChange} color={sidebarBg} />\n      </Form.Item>\n\n      <Form.Item label='Layout'>\n        <Select onChange={handleLayoutChange} defaultValue={layoutUrl}>\n          <Select.Option value={'vertical'}>Vertical</Select.Option>\n\n          <Select.Option value={'horizontal'}>Horizontal</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item label='Boxed'>\n        <Switch onChange={handleBoxedChange} checked={boxed} />\n      </Form.Item>\n\n      <div className='d-flex justify-content-between buttons-list settings-actions'>\n        <Button danger onClick={handleReset}>\n          Reset to default\n        </Button>\n\n        <Button type='primary' onClick={handleDownload}>\n          Download settings\n        </Button>\n      </div>\n      <a href='#' ref={downloadLink} style={{ display: 'none' }} />\n    </Form>\n  );\n};\n\nexport default SettingsForm;\n"]},"metadata":{},"sourceType":"module"}