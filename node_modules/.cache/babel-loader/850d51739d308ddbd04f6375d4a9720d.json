{"ast":null,"code":"var _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/vertical/Vertical.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport BaseLayout from '../base/BaseLayout';\nimport Navbar from '../components/navbar/Navbar';\nimport Menu from '../components/menu/Menu';\nimport NavLoader from '../components/navbar/NavLoader';\nimport AddPatient from '../components/patients/AddPatient';\nimport Actions from '../components/actions/Actions';\nimport { toggleSidebar } from '../../redux/settings/actions';\nimport { useSearchData } from '../../hooks/useSearchData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Vertical.scss';\n\nconst VerticalLayout = _ref => {\n  let {\n    children\n  } = _ref;\n  const dispatch = useDispatch();\n  const settings = useSelector(state => state.settings);\n  const pageData = useSelector(state => state.pageData);\n  const searchData = useSearchData();\n\n  const onSidebarToggle = () => dispatch(toggleSidebar());\n\n  const [menuData, setMenuData] = useState([]);\n  const [allowed, setAllowed] = useState(false);\n  const user = useSelector(state => state.login[\"user\"]);\n\n  if (!user) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/public/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (user && user[\"role\"] === 'Doctor' || user && user[\"role\"] === 'Nurse') {\n      console.log(user, \"this\");\n      setAllowed(true);\n    } else {\n      setAllowed(false);\n    }\n\n    async function fetchMenuData() {\n      const result = await axios('/data/menu.json');\n      setMenuData(result.data);\n    }\n\n    fetchMenuData().catch(err => console.log('Server Error', err));\n  });\n  const nav = /*#__PURE__*/React.createElement(Navbar, {\n    boxed: settings.boxed,\n    color: settings.topbarColor,\n    background: settings.topbarBg,\n    orientation: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"no-style navbar-toggle d-lg-none\",\n    onClick: onSidebarToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavLoader, {\n    loaded: pageData.loaded,\n    type: 'top-bar',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n  const sideNav = /*#__PURE__*/React.createElement(Navbar, {\n    onClickOutside: onSidebarToggle,\n    opened: settings.sidebarOpened,\n    color: settings.sidebarColor,\n    background: settings.sidebarBg,\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    onCloseSidebar: onSidebarToggle,\n    opened: settings.sidebarOpened,\n    orientation: \"vertical\",\n    data: menuData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), allowed && /*#__PURE__*/React.createElement(AddPatient, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    className: \"assistant-menu\",\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: \"/vertical/settings\",\n    activeClassName: \"active\",\n    replace: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link-icon icofont icofont-ui-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Settings\")), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: \"/vertical/default-dashboard\",\n    activeClassName: \"active\",\n    replace: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link-icon icofont icofont-question-square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"FAQ & Support\"))), /*#__PURE__*/React.createElement(NavLoader, {\n    loaded: pageData.loaded,\n    type: 'nav-bar',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BaseLayout, {\n    orientation: \"vertical\",\n    nav: nav,\n    sideNav: sideNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default VerticalLayout;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/vertical/Vertical.tsx"],"names":["React","useEffect","useState","axios","NavLink","Redirect","BaseLayout","Navbar","Menu","NavLoader","AddPatient","Actions","toggleSidebar","useSearchData","useDispatch","useSelector","VerticalLayout","children","dispatch","settings","state","pageData","searchData","onSidebarToggle","menuData","setMenuData","allowed","setAllowed","user","login","console","log","fetchMenuData","result","data","catch","err","nav","boxed","topbarColor","topbarBg","loaded","sideNav","sidebarOpened","sidebarColor","sidebarBg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport axios from 'axios';\nimport { NavLink, Redirect } from 'react-router-dom';\n\nimport BaseLayout from '../base/BaseLayout';\n\nimport Logo from '../components/logo/Logo';\nimport Navbar from '../components/navbar/Navbar';\nimport LogoSvg from './../../assets/img/logo.svg';\n\nimport Menu from '../components/menu/Menu';\nimport Search from '../components/search/Search';\nimport NavLoader from '../components/navbar/NavLoader';\nimport AddPatient from '../components/patients/AddPatient';\n\nimport Actions from '../components/actions/Actions';\nimport { toggleSidebar } from '../../redux/settings/actions';\n\nimport { useSearchData } from '../../hooks/useSearchData';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IAppState } from '../../interfaces/app-state';\n\nimport './Vertical.scss';\nimport { AppState } from '../../redux/store';\n\ntype Props = {\n  children: any;\n};\n\nconst VerticalLayout = ({ children }: Props) => {\n  const dispatch = useDispatch();\n\n  const settings = useSelector((state: IAppState) => state.settings);\n  const pageData = useSelector((state: IAppState) => state.pageData);\n\n  const searchData = useSearchData();\n\n  const onSidebarToggle = () => dispatch(toggleSidebar());\n\n  const [menuData, setMenuData] = useState([]);\n  const [allowed, setAllowed] = useState(false);\n  const user=useSelector((state:AppState)=>state.login[\"user\"]);\n\n  if(!user){\n    return <Redirect to=\"/public/sign-in\"/>\n   }\n  useEffect(() => {\n\n    if(user && user[\"role\"]==='Doctor' || user && user[\"role\"]==='Nurse'){\n      console.log(user,\"this\")\n   setAllowed(true)\n    } else{\nsetAllowed(false)\n    }\n    async function fetchMenuData() {\n      const result = await axios('/data/menu.json');\n      setMenuData(result.data);\n      \n    }\n\n    fetchMenuData().catch((err) => console.log('Server Error', err));\n  });\n\n  const nav = (\n    <Navbar\n      boxed={settings.boxed}\n      color={settings.topbarColor}\n      background={settings.topbarBg}\n      orientation='horizontal'\n    >\n      <button className='no-style navbar-toggle d-lg-none' onClick={onSidebarToggle}>\n        <span />\n        <span />\n        <span />\n      </button>\n\n      {/* <Search layout='vertical' data={searchData} /> */}\n\n      <Actions />\n\n      <NavLoader loaded={pageData.loaded} type={'top-bar'} />\n    </Navbar>\n  );\n\n  const sideNav = (\n    <Navbar\n      onClickOutside={onSidebarToggle}\n      opened={settings.sidebarOpened}\n      color={settings.sidebarColor}\n      background={settings.sidebarBg}\n      orientation='vertical'\n    >\n      {/* <Logo src={LogoSvg} /> */}\n\n      <Menu\n        onCloseSidebar={onSidebarToggle}\n        opened={settings.sidebarOpened}\n        orientation='vertical'\n        data={menuData}\n      />\n\n     {allowed && <AddPatient />}\n\n      <Menu className='assistant-menu' orientation='vertical'>\n        <NavLink className='link' to='/vertical/settings' activeClassName='active' replace>\n          <span className='link-icon icofont icofont-ui-settings' />\n\n          <span className='link-text'>Settings</span>\n        </NavLink>\n\n        <NavLink className='link' to='/vertical/default-dashboard' activeClassName='active' replace>\n          <span className='link-icon icofont icofont-question-square' />\n\n          <span className='link-text'>FAQ & Support</span>\n        </NavLink>\n\n        {}\n      </Menu>\n\n      <NavLoader loaded={pageData.loaded} type={'nav-bar'} />\n    </Navbar>\n  );\n\n  return (\n    <>\n      <BaseLayout orientation='vertical' nav={nav} sideNav={sideNav}>\n        {children}\n      </BaseLayout>\n    </>\n  );\n};\n\nexport default VerticalLayout;\n"]},"metadata":{},"sourceType":"module"}