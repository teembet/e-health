{"ast":null,"code":"import { ADD_PATIENT, DELETE_PATIENT, EDIT_PATIENT, SET_PATIENTS } from './types';\nimport axios from 'axios';\nexport const setPatients = patients => ({\n  type: SET_PATIENTS,\n  payload: patients\n});\nexport const addPatient = patient => ({\n  type: ADD_PATIENT,\n  payload: patient\n});\nexport const deletePatient = id => ({\n  type: DELETE_PATIENT,\n  id\n});\nexport const editPatient = patient => ({\n  type: EDIT_PATIENT,\n  payload: patient\n});\nexport const fetchPatients = url => {\n  return dispatch => {\n    axios.get(url).then(res => res.data).then(data => {\n      dispatch(setPatients(data));\n    }).catch(err => console.error('Server connections error'));\n  };\n};","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/redux/patients/actions.ts"],"names":["ADD_PATIENT","DELETE_PATIENT","EDIT_PATIENT","SET_PATIENTS","axios","setPatients","patients","type","payload","addPatient","patient","deletePatient","id","editPatient","fetchPatients","url","dispatch","get","then","res","data","catch","err","console","error"],"mappings":"AAAA,SACEA,WADF,EAGEC,cAHF,EAKEC,YALF,EAOEC,YAPF,QASO,SATP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,KAA6C;AACtEC,EAAAA,IAAI,EAAEJ,YADgE;AAEtEK,EAAAA,OAAO,EAAEF;AAF6D,CAA7C,CAApB;AAKP,OAAO,MAAMG,UAAU,GAAIC,OAAD,KAA0C;AAClEH,EAAAA,IAAI,EAAEP,WAD4D;AAElEQ,EAAAA,OAAO,EAAEE;AAFyD,CAA1C,CAAnB;AAKP,OAAO,MAAMC,aAAa,GAAIC,EAAD,KAAsC;AACjEL,EAAAA,IAAI,EAAEN,cAD2D;AAEjEW,EAAAA;AAFiE,CAAtC,CAAtB;AAKP,OAAO,MAAMC,WAAW,GAAIH,OAAD,KAA2C;AACpEH,EAAAA,IAAI,EAAEL,YAD8D;AAEpEM,EAAAA,OAAO,EAAEE;AAF2D,CAA3C,CAApB;AAKP,OAAO,MAAMI,aAAa,GAAIC,GAAD,IAAiB;AAC5C,SAAOC,QAAQ,IAAI;AACjBZ,IAAAA,KAAK,CACFa,GADH,CACmBF,GADnB,EAEGG,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQE,IAAI,IAAI;AACZJ,MAAAA,QAAQ,CAACX,WAAW,CAACe,IAAD,CAAZ,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAc,0BAAd,CANhB;AAOD,GARD;AASD,CAVM","sourcesContent":["import {\n  ADD_PATIENT,\n  AddPatientAction,\n  DELETE_PATIENT,\n  DeletePatientAction,\n  EDIT_PATIENT,\n  EditPatientAction,\n  SET_PATIENTS,\n  SetPatientAction\n} from './types';\n\nimport { IPatient } from '../../interfaces/patient';\nimport axios from 'axios';\n\nexport const setPatients = (patients: IPatient[]): SetPatientAction => ({\n  type: SET_PATIENTS,\n  payload: patients\n});\n\nexport const addPatient = (patient: IPatient): AddPatientAction => ({\n  type: ADD_PATIENT,\n  payload: patient\n});\n\nexport const deletePatient = (id: string): DeletePatientAction => ({\n  type: DELETE_PATIENT,\n  id\n});\n\nexport const editPatient = (patient: IPatient): EditPatientAction => ({\n  type: EDIT_PATIENT,\n  payload: patient\n});\n\nexport const fetchPatients = (url: string) => {\n  return dispatch => {\n    axios\n      .get<IPatient[]>(url)\n      .then(res => res.data)\n      .then(data => {\n        dispatch(setPatients(data));\n      })\n      .catch(err => console.error('Server connections error'));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}