{"ast":null,"code":"import{useDispatch,useSelector}from'react-redux';import*as actions from'../redux/patients/actions';export function usePatients(){var dispatch=useDispatch();var patients=useSelector(function(state){return state.patients;});var editPatient=function editPatient(patient){console.log(\"im here \");return dispatch(actions.editPatient(patient));};var addPatient=function addPatient(patient){return dispatch(actions.addPatient(patient));};var deletePatient=function deletePatient(id){return dispatch(actions.deletePatient(id));};return{patients:patients,addPatient:addPatient,editPatient:editPatient,deletePatient:deletePatient};}","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/hooks/usePatients.tsx"],"names":["useDispatch","useSelector","actions","usePatients","dispatch","patients","state","editPatient","patient","console","log","addPatient","deletePatient","id"],"mappings":"AACA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,2BAAzB,CAIA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAC5B,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,GAAMK,CAAAA,QAAQ,CAAGJ,WAAW,CAAwB,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,QAAjB,EAAxB,CAA5B,CAEA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAuB,CACzCC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACA,MAAON,CAAAA,QAAQ,CAACF,OAAO,CAACK,WAAR,CAAoBC,OAApB,CAAD,CAAf,CACD,CAHD,CAKA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,OAAD,CAAuB,CACxC,MAAOJ,CAAAA,QAAQ,CAACF,OAAO,CAACS,UAAR,CAAmBH,OAAnB,CAAD,CAAf,CACD,CAFD,CAIA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,CAAgB,CACpC,MAAOT,CAAAA,QAAQ,CAACF,OAAO,CAACU,aAAR,CAAsBC,EAAtB,CAAD,CAAf,CACD,CAFD,CAIA,MAAO,CAAER,QAAQ,CAARA,QAAF,CAAYM,UAAU,CAAVA,UAAZ,CAAwBJ,WAAW,CAAXA,WAAxB,CAAqCK,aAAa,CAAbA,aAArC,CAAP,CACD","sourcesContent":["import { IPatient } from '../interfaces/patient';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport * as actions from '../redux/patients/actions';\r\n\r\nimport { IAppState } from '../interfaces/app-state';\r\n\r\nexport function usePatients() {\r\n  const dispatch = useDispatch();\r\n  const patients = useSelector<IAppState, IPatient[]>((state) => state.patients);\r\n\r\n  const editPatient = (patient: IPatient) => {\r\n    console.log(\"im here \")\r\n    return dispatch(actions.editPatient(patient));\r\n  };\r\n\r\n  const addPatient = (patient: IPatient) => {\r\n    return dispatch(actions.addPatient(patient));\r\n  };\r\n\r\n  const deletePatient = (id: string) => {\r\n    return dispatch(actions.deletePatient(id));\r\n  };\r\n\r\n  return { patients, addPatient, editPatient, deletePatient };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}