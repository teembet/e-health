{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from'redux';import thunk from'redux-thunk';import{connectRouter}from'connected-react-router';import{createHashHistory}from'history';import{settingsReducer}from'./settings/reducer';import{pageDataReducer}from'./page-data/reducer';import{patientsReducer}from'./patients/reducer';import{login}from'./auth/reducers';import{registration}from'./auth/reducers';// import {user} from './auth/reducers'\nimport{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';export var history=createHashHistory({hashType:'slash'});var persistConfig={key:'root',storage:storage};var rootReducer=combineReducers({pageData:pageDataReducer,settings:settingsReducer,patients:patientsReducer,login:login,// user,\nregistration:registration,router:connectRouter(history)});var persistedReducer=persistReducer(persistConfig,rootReducer);var enhancers=compose(applyMiddleware(thunk)// your own middleware\n// (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);export var store=createStore(persistedReducer,enhancers);export var persist=persistStore(store);","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/redux/store.ts"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","connectRouter","createHashHistory","settingsReducer","pageDataReducer","patientsReducer","login","registration","persistStore","persistReducer","storage","history","hashType","persistConfig","key","rootReducer","pageData","settings","patients","router","persistedReducer","enhancers","store","persist"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAsE,OAAtE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,iBAAT,KAAkC,SAAlC,CAEA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAAQC,KAAR,KAAoB,iBAApB,CACA,OAAQC,YAAR,KAA2B,iBAA3B,CACA;AACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAO,IAAMC,CAAAA,OAAO,CAAGT,iBAAiB,CAAC,CACvCU,QAAQ,CAAE,OAD6B,CAAD,CAAjC,CAIP,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBJ,OAAO,CAAPA,OAFoB,CAAtB,CAIA,GAAMK,CAAAA,WAAW,CAAGlB,eAAe,CAAC,CAClCmB,QAAQ,CAAEZ,eADwB,CAElCa,QAAQ,CAAEd,eAFwB,CAGlCe,QAAQ,CAAEb,eAHwB,CAIlCC,KAAK,CAALA,KAJkC,CAKlC;AACAC,YAAY,CAAZA,YANkC,CAOlCY,MAAM,CAAElB,aAAa,CAACU,OAAD,CAPa,CAAD,CAAnC,CAUA,GAAMS,CAAAA,gBAAgB,CAAGX,cAAc,CAACI,aAAD,CAAgBE,WAAhB,CAAvC,CAEA,GAAMM,CAAAA,SAAS,CAAGtB,OAAO,CACvBD,eAAe,CAACE,KAAD,CAAS;AACxB;AAFuB,CAAzB,CAQC,MAAO,IAAOsB,CAAAA,KAAK,CAAC1B,WAAW,CAACwB,gBAAD,CAC5BC,SAD4B,CAAxB,CAGR,MAAO,IAAME,CAAAA,OAAO,CAAEf,YAAY,CAACc,KAAD,CAA3B","sourcesContent":["import { createStore, combineReducers, applyMiddleware ,compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { connectRouter } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nimport { settingsReducer } from './settings/reducer';\nimport { pageDataReducer } from './page-data/reducer';\nimport { patientsReducer } from './patients/reducer';\nimport {login} from './auth/reducers'\nimport {registration} from './auth/reducers'\n// import {user} from './auth/reducers'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nexport const history = createHashHistory({\n  hashType: 'slash'\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst rootReducer = combineReducers({\n  pageData: pageDataReducer,\n  settings: settingsReducer,\n  patients: patientsReducer,\n  login,\n  // user,\n  registration,\n  router: connectRouter(history)\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nexport type AppState = ReturnType<typeof rootReducer>;\nconst enhancers = compose(\n  applyMiddleware(thunk), // your own middleware\n  // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n\n\n export const  store=createStore(persistedReducer,\n    enhancers)\n\nexport const persist= persistStore(store);\n\n\n \n  \n \n  \n\n"]},"metadata":{},"sourceType":"module"}