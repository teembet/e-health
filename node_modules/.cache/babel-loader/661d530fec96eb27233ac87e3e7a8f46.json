{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/timeline/style\";\nimport _Timeline from \"antd/es/timeline\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/medic/PatientProfilePage.tsx\";\nimport React, { useState } from 'react';\nimport { usePageData } from '../../hooks/usePage';\nimport { useGetBillings } from '../../hooks/useGetBillings';\nimport ImageLoader from '../../layout/components/patients/ImageLoader';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { usePatients } from '../../hooks/usePatients';\nimport { useSelector } from 'react-redux';\nconst pageData = {\n  title: 'Patient profile page',\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Medicine',\n    route: 'default-dashboard'\n  }, {\n    title: 'Doctors',\n    route: 'default-dashboard'\n  }, {\n    title: 'Liam Jouns'\n  }]\n};\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nconst ProfileForm = _ref => {\n  let {\n    patient,\n    handleChange\n  } = _ref;\n  // const handleGenderSelect = (value) => {\n  //   setInputValues({...inputValues,\"role\":value});\n  // }\n  return /*#__PURE__*/React.createElement(_Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Full name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    defaultValue: patient.name,\n    placeholder: \"Full name\",\n    name: \"name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    defaultValue: patient.age,\n    placeholder: \"Age\",\n    name: \"age\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    defaultValue: patient.gender,\n    placeholder: \"Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Female\"))))), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    defaultValue: patient.number,\n    placeholder: \"Phone\",\n    name: \"phone\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input.TextArea, {\n    rows: 4,\n    defaultValue: patient.address,\n    placeholder: \"Address\",\n    name: \"address\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Last visit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    defaultValue: patient.lastVisit,\n    placeholder: \"Last visit\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Need Doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    defaultValue: patient.needDoctor,\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Need Pharmarcy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    defaultValue: patient.needPharmacy,\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"No\"))), /*#__PURE__*/React.createElement(FormItem, {\n    label: \"Need Lab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    defaultValue: patient.needLab,\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"No\"))));\n};\n\nconst PatientTimeline = _ref2 => {\n  let {\n    userRole,\n    handleTimeline\n  } = _ref2;\n  const {\n    TextArea\n  } = _Input;\n  return /*#__PURE__*/React.createElement(_Timeline, {\n    mode: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, userRole == 'Doctor' && /*#__PURE__*/React.createElement(_Timeline.Item, {\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Doctors Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-base text-color-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"2h ago\"), /*#__PURE__*/React.createElement(TextArea, {\n    className: \"text-base\",\n    placeholder: \"Note\",\n    onChange: handleTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }))), userRole == 'Nurse' && /*#__PURE__*/React.createElement(_Timeline.Item, {\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Doctors Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-base text-color-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"2h ago\"), /*#__PURE__*/React.createElement(TextArea, {\n    className: \"text-base\",\n    placeholder: \"Note\",\n    onChange: handleTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }))), userRole == 'Pharmacy' && /*#__PURE__*/React.createElement(_Timeline.Item, {\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Pharmacist Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-base text-color-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"15h ago\"), /*#__PURE__*/React.createElement(TextArea, {\n    className: \"text-base\",\n    placeholder: \"Note\",\n    onChange: handleTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }))), userRole == 'Lab' && /*#__PURE__*/React.createElement(_Timeline.Item, {\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Lab Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-base text-color-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Jul 10\"), /*#__PURE__*/React.createElement(TextArea, {\n    className: \"text-base\",\n    placeholder: \"Note\",\n    onChange: handleTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst PatientProfilePage = () => {\n  const userRole = useSelector(state => state.login.user.role);\n  const row = useLocation();\n  const patient = row.state;\n  const [inputValues, setInputValues] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const billings = useGetBillings();\n  const {\n    editPatient\n  } = usePatients();\n  usePageData(pageData);\n\n  const editPatients = patient => {\n    const values = { ...patient,\n      ...inputValues\n    };\n    editPatient(values);\n  };\n\n  const handleChange = e => {\n    setInputValues({ ...inputValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleTimeline = e => {\n    setInputValues({ ...notes,\n      [e.target.name]: e.target.value\n    });\n  }; // const handleSelect = (value) => {\n  //   setInputValues({...inputValues,\"role\":value});\n  // }\n\n\n  if (!patient) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/vertical/patients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return patient && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-0 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, \"Photo\"), /*#__PURE__*/React.createElement(ImageLoader, {\n    src: patient.profileImg,\n    size: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProfileForm, {\n    patient: patient,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    onClick: () => editPatients(patient),\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, \"Save Changes\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PatientTimeline, {\n    userRole: userRole,\n    handleTimeline: handleTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default PatientProfilePage;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/medic/PatientProfilePage.tsx"],"names":["React","useState","usePageData","useGetBillings","ImageLoader","Redirect","useLocation","usePatients","useSelector","pageData","title","fulFilled","breadcrumbs","route","FormItem","Item","Option","ProfileForm","patient","handleChange","name","age","gender","number","address","lastVisit","needDoctor","needPharmacy","needLab","PatientTimeline","userRole","handleTimeline","TextArea","PatientProfilePage","state","login","user","role","row","inputValues","setInputValues","notes","setNotes","billings","editPatient","editPatients","values","e","target","value","profileImg"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState, useEffect } from 'react';\nimport { Button, Card, Form, Input, Select, Timeline } from 'antd';\n\nimport { useFormik } from 'formik';\n\nimport { IPageData } from '../../interfaces/page';\n\nimport { usePageData } from '../../hooks/usePage';\nimport { useGetPatient } from '../../hooks/useGetPatient';\nimport { useGetBillings } from '../../hooks/useGetBillings';\n\nimport ImageLoader from '../../layout/components/patients/ImageLoader';\nimport BillingTable from './components/BillingTable';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { usePatients } from '../../hooks/usePatients';\nimport { useSelector } from 'react-redux';\nconst pageData: IPageData = {\n  title: 'Patient profile page',\n  fulFilled: true,\n  breadcrumbs: [\n    {\n      title: 'Medicine',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Doctors',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Liam Jouns'\n    }\n  ]\n};\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst ProfileForm = ({ patient, handleChange }) => {\n  // const handleGenderSelect = (value) => {\n\n  //   setInputValues({...inputValues,\"role\":value});\n\n  // }\n\n  return (\n    <Form layout='vertical'>\n      <FormItem label='Full name'>\n        <Input\n          defaultValue={patient.name}\n          placeholder='Full name'\n          name='name'\n          onChange={handleChange}\n        />\n      </FormItem>\n      {/* \n      <FormItem label='Id'>\n        <Input defaultValue={patient.id} placeholder='Id' name='id'  onChange={handleChange}/>\n      </FormItem> */}\n\n      <div className='row'>\n        <div className='col-md-6 col-sm-12'>\n          <FormItem label='Age'>\n            <Input\n              defaultValue={patient.age}\n              placeholder='Age'\n              name='age'\n              onChange={handleChange}\n            />\n          </FormItem>\n        </div>\n        <div className='col-md-6 col-sm-12'>\n          <FormItem label='Gender'>\n            <Select defaultValue={patient.gender} placeholder='Gender'>\n              <Option value='male'>Male</Option>\n              <Option value='female'>Female</Option>\n            </Select>\n          </FormItem>\n        </div>\n      </div>\n\n      <FormItem label='Phone'>\n        <Input\n          defaultValue={patient.number}\n          placeholder='Phone'\n          name='phone'\n          onChange={handleChange}\n        />\n      </FormItem>\n\n      <FormItem label='Address'>\n        <Input.TextArea\n          rows={4}\n          defaultValue={patient.address}\n          placeholder='Address'\n          name='address'\n          onChange={handleChange}\n        />\n      </FormItem>\n\n      <FormItem label='Last visit'>\n        <Input defaultValue={patient.lastVisit} placeholder='Last visit' readOnly />\n      </FormItem>\n\n      <FormItem label='Need Doctor'>\n        <Select defaultValue={patient.needDoctor} placeholder='Status'>\n          <Option value='true'>Yes</Option>\n          <Option value='false'>No</Option>\n        </Select>\n      </FormItem>\n      <FormItem label='Need Pharmarcy'>\n        <Select defaultValue={patient.needPharmacy} placeholder='Status'>\n          <Option value='true'>Yes</Option>\n          <Option value='false'>No</Option>\n        </Select>\n      </FormItem>\n      <FormItem label='Need Lab'>\n        <Select defaultValue={patient.needLab} placeholder='Status'>\n          <Option value='true'>Yes</Option>\n          <Option value='false'>No</Option>\n        </Select>\n      </FormItem>\n    </Form>\n  );\n};\n\nconst PatientTimeline = ({ userRole, handleTimeline }) => {\n  const { TextArea } = Input;\n\n  return (\n    <Timeline mode='left'>\n      {/* <Timeline.Item color='red'>\n      <div className='d-flex flex-column'>\n        <h4 className='m-0'>New prescription</h4>\n        <span className='text-base text-color-100'>Now</span>\n        <span className='text-base'>\n          Aenean lacinia bibendum nulla sed consectetur. Nullam id dolor id nibh ultricies vehicula\n          ut id elit.\n        </span>\n      </div>\n    </Timeline.Item> */}\n      {/* \n    <Timeline.Item color='blue'>\n      <div className='d-flex flex-column'>\n        <h4 className='m-0'>Appointment</h4>\n        <span className='text-base text-color-100'>2m ago</span>\n        <span className='text-base'>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur nam nisi veniam.\n        </span>\n      </div>\n    </Timeline.Item> */}\n      {userRole == 'Doctor' && (\n        <Timeline.Item color='yellow'>\n          <div className='d-flex flex-column'>\n            <h4 className='m-0'>Doctors Report</h4>\n            <span className='text-base text-color-100'>2h ago</span>\n            <TextArea className='text-base' placeholder='Note' onChange={handleTimeline} />\n          </div>\n        </Timeline.Item>\n      )}\n\n      {userRole == 'Nurse' && (\n        <Timeline.Item color='yellow'>\n          <div className='d-flex flex-column'>\n            <h4 className='m-0'>Doctors Report</h4>\n            <span className='text-base text-color-100'>2h ago</span>\n            <TextArea className='text-base' placeholder='Note' onChange={handleTimeline} />\n          </div>\n        </Timeline.Item>\n      )}\n\n      {userRole == 'Pharmacy' && (\n        <Timeline.Item color='pink'>\n          <div className='d-flex flex-column'>\n            <h4 className='m-0'>Pharmacist Report</h4>\n            <span className='text-base text-color-100'>15h ago</span>\n            <TextArea className='text-base' placeholder='Note' onChange={handleTimeline} />\n          </div>\n        </Timeline.Item>\n      )}\n\n      {userRole == 'Lab' && (\n        <Timeline.Item color='blue'>\n          <div className='d-flex flex-column'>\n            <h4 className='m-0'>Lab Report</h4>\n            <span className='text-base text-color-100'>Jul 10</span>\n            <TextArea className='text-base' placeholder='Note' onChange={handleTimeline} />\n          </div>\n        </Timeline.Item>\n      )}\n\n      {/* <Timeline.Item color='red'>\n      <div className='d-flex flex-column'>\n        <h4 className='m-0'>Examination</h4>\n        <span className='text-base text-color-100'>Jul 11</span>\n        <TextArea  className='text-base' defaultValue={'tim'} placeholder='Full name'/>\n      </div>\n    </Timeline.Item> */}\n\n      {/* <Timeline.Item color='green'>\n      <div className='d-flex flex-column'>\n        <h4 className='m-0'>Re-Examination</h4>\n        <span className='text-base text-color-100'>Jul 25</span>\n        <TextArea  className='text-base' defaultValue={'tim'} placeholder='Full name'/>\n      </div>\n    </Timeline.Item> */}\n    </Timeline>\n  );\n};\n\nconst PatientProfilePage = () => {\n  const userRole = useSelector((state: any) => state.login.user.role);\n  const row = useLocation();\n  const patient: any = row.state;\n  const [inputValues, setInputValues] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const billings = useGetBillings();\n  const { editPatient } = usePatients();\n\n  usePageData(pageData);\n  const editPatients = (patient) => {\n    const values = { ...patient, ...inputValues };\n\n    editPatient(values);\n  };\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) => {\n    setInputValues({ ...inputValues, [e.target.name]: e.target.value });\n  };\n\n  const handleTimeline = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) => {\n    setInputValues({ ...notes, [e.target.name]: e.target.value });\n  };\n\n  // const handleSelect = (value) => {\n\n  //   setInputValues({...inputValues,\"role\":value});\n\n  // }\n\n  if (!patient) {\n    return <Redirect to='/vertical/patients' />;\n  }\n  return (\n    patient && (\n      <>\n        <div className='row mb-4'>\n          <div className='col-md-6 col-sm-12'>\n            <div className='header mb-3'>\n              <h6 className='mt-0 mb-3'>Photo</h6>\n              <ImageLoader src={patient.profileImg as string} size={100} />\n            </div>\n\n            <div className='info stack'>\n              <ProfileForm patient={patient} handleChange={handleChange} />\n              <Button onClick={() => editPatients(patient)} type='primary'>\n                Save Changes\n              </Button>\n            </div>\n          </div>\n\n          <div className='col-md-6 col-sm-12'>\n            <Card>\n              <PatientTimeline userRole={userRole} handleTimeline={handleTimeline} />\n            </Card>\n          </div>\n        </div>\n\n        {/* <Card title='Billings' className='mb-0'>\n          <BillingTable billings={billings} />\n        </Card> */}\n      </>\n    )\n  );\n};\n\nexport default PatientProfilePage;\n"]},"metadata":{},"sourceType":"module"}