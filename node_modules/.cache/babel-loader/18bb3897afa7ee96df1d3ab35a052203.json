{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/select/style\";import _Select from\"antd/es/select\";import _objectSpread from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import React from'react';import{useFormik}from'formik';import*as Yup from'yup';import ImageLoader from'./ImageLoader';import{hasErrorFactory}from'../../../utils/hasError';var TextArea=_Input.TextArea;var defaultSubmitText='Add patient';var emptyPatient={name:null,address:null,status:null,age:null,number:null,gender:null,img:null};var patientScheme=Yup.object({name:Yup.string().required(),address:Yup.string().required(),// status: Yup.string().required(),\nage:Yup.string().required(),number:Yup.string().required(),gender:Yup.string().required(),img:Yup.string().required()});var PatientForm=function PatientForm(_ref){var _ref$submitText=_ref.submitText,submitText=_ref$submitText===void 0?defaultSubmitText:_ref$submitText,_ref$patient=_ref.patient,patient=_ref$patient===void 0?emptyPatient:_ref$patient,_onSubmit=_ref.onSubmit,onCancel=_ref.onCancel;var _useFormik=useFormik({validationSchema:patientScheme,initialValues:patient,onSubmit:function onSubmit(values){_onSubmit(values);onCancel();}}),setFieldTouched=_useFormik.setFieldTouched,setFieldValue=_useFormik.setFieldValue,handleChange=_useFormik.handleChange,handleSubmit=_useFormik.handleSubmit,setValues=_useFormik.setValues,handleBlur=_useFormik.handleBlur,resetForm=_useFormik.resetForm,touched=_useFormik.touched,values=_useFormik.values,errors=_useFormik.errors,isValid=_useFormik.isValid;var handleGenderSelect=function handleGenderSelect(value){return setFieldValue('gender',value);};var handleStatusSelect=function handleStatusSelect(value){return setFieldValue('status',value);};var hasError=hasErrorFactory(touched,errors);var handleCancel=function handleCancel(){resetForm();onCancel();};var handleImageLoad=function handleImageLoad(img){setValues(_objectSpread(_objectSpread({},values),{},{img:img}));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(ImageLoader,{onLoad:handleImageLoad,src:values.img})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Input,{placeholder:\"Name\",name:\"name\",type:\"text\",onBlur:handleBlur,onChange:handleChange,defaultValue:values.name,className:hasError('name')})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Input,{placeholder:\"Phone\",name:\"number\",type:\"phone\",onBlur:handleBlur,onChange:handleChange,defaultValue:values.number,className:hasError('number')})),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Input,{name:\"age\",type:\"number\",placeholder:\"Age\",onBlur:handleBlur,onChange:handleChange,defaultValue:values.age,className:hasError('age')}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Select,{placeholder:\"Gender\",defaultValue:values.gender,onChange:handleGenderSelect,className:hasError('gender'),onBlur:function onBlur(){return setFieldTouched('gender');}},/*#__PURE__*/React.createElement(_Select.Option,{value:\"Male\"},\"Male\"),/*#__PURE__*/React.createElement(_Select.Option,{value:\"Female\"},\"Female\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(TextArea,{rows:3,name:\"address\",placeholder:\"Address\",onBlur:handleBlur,onChange:handleChange,defaultValue:values.address,className:hasError('address')})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between buttons-list settings-actions\"},/*#__PURE__*/React.createElement(_Button,{danger:true,onClick:handleCancel},\"Cancel\"),/*#__PURE__*/React.createElement(_Button,{disabled:!isValid,type:\"primary\",htmlType:\"submit\"},submitText))));};export default PatientForm;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/layout/components/patients/PatientForm.tsx"],"names":["React","useFormik","Yup","ImageLoader","hasErrorFactory","TextArea","defaultSubmitText","emptyPatient","name","address","status","age","number","gender","img","patientScheme","object","string","required","PatientForm","submitText","patient","onSubmit","onCancel","validationSchema","initialValues","values","setFieldTouched","setFieldValue","handleChange","handleSubmit","setValues","handleBlur","resetForm","touched","errors","isValid","handleGenderSelect","value","handleStatusSelect","hasError","handleCancel","handleImageLoad"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Button, Select, Input } from 'antd';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport ImageLoader from './ImageLoader';\nimport { hasErrorFactory } from '../../../utils/hasError';\n\nimport { IPatient } from '../../../interfaces/patient';\n\nconst { TextArea } = Input;\ntype Props = {\n  onSubmit: (patient: IPatient) => void;\n  onCancel: () => void;\n  patient?: IPatient;\n  submitText?: string;\n};\n\nconst defaultSubmitText = 'Add patient';\nconst emptyPatient = {\n  name: null,\n  address: null,\n  status: null,\n  age: null,\n  number: null,\n  gender: null,\n  img: null\n};\n\nconst patientScheme = Yup.object({\n  name: Yup.string().required(),\n  address: Yup.string().required(),\n  // status: Yup.string().required(),\n  age: Yup.string().required(),\n  number: Yup.string().required(),\n  gender: Yup.string().required(),\n  img: Yup.string().required()\n});\n\nconst PatientForm = ({\n  submitText = defaultSubmitText,\n  patient = emptyPatient,\n  onSubmit,\n  onCancel\n}: Props) => {\n\n  const {\n    setFieldTouched,\n    setFieldValue,\n    handleChange,\n    handleSubmit,\n    setValues,\n    handleBlur,\n    resetForm,\n    touched,\n    values,\n    errors,\n    isValid\n  } = useFormik<IPatient>({\n    validationSchema: patientScheme,\n    initialValues: patient,\n    onSubmit: (values) => {\n      onSubmit(values);\n      onCancel();\n    }\n  });\n\n  const handleGenderSelect = (value) => setFieldValue('gender', value);\n  const handleStatusSelect = (value) => setFieldValue('status', value);\n\n  const hasError = hasErrorFactory(touched, errors);\n\n  const handleCancel = () => {\n    resetForm();\n    onCancel();\n  };\n\n  const handleImageLoad = (img) => {\n    setValues({ ...values, img });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className='form-group'>\n          <ImageLoader onLoad={handleImageLoad} src={values.img as string} />\n        </div>\n\n        <div className='form-group'>\n          <Input\n            placeholder='Name'\n            name='name'\n            type='text'\n            onBlur={handleBlur}\n            onChange={handleChange}\n            defaultValue={values.name}\n            className={hasError('name')}\n          />\n        </div>\n\n        <div className='form-group'>\n          <Input\n            placeholder='Phone'\n            name='number'\n            type='phone'\n            onBlur={handleBlur}\n            onChange={handleChange}\n            defaultValue={values.number}\n            className={hasError('number')}\n          />\n        </div>\n\n        <div className='row'>\n          <div className='col-sm-6 col-12'>\n            <div className='form-group'>\n              <Input\n                name='age'\n                type='number'\n                placeholder='Age'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                defaultValue={values.age}\n                className={hasError('age')}\n              />\n            </div>\n          </div>\n\n          <div className='col-sm-6 col-12'>\n            <div className='form-group'>\n              <Select\n                placeholder='Gender'\n                defaultValue={values.gender}\n                onChange={handleGenderSelect}\n                className={hasError('gender')}\n                onBlur={() => setFieldTouched('gender')}\n              >\n                <Select.Option value='Male'>Male</Select.Option>\n                <Select.Option value='Female'>Female</Select.Option>\n              </Select>\n            </div>\n          </div>\n        </div>\n{/* \n        <div className='form-group'>\n          <Select\n            placeholder='Status'\n            defaultValue={values.status}\n            onChange={handleStatusSelect}\n            className={hasError('status')}\n            onBlur={() => setFieldTouched('status')}\n          >\n            <Select.Option value='Approved'>Approved</Select.Option>\n            <Select.Option value='Pending'>Pending</Select.Option>\n          </Select>\n        </div> */}\n\n        <div className='form-group'>\n          <TextArea\n            rows={3}\n            name='address'\n            placeholder='Address'\n            onBlur={handleBlur}\n            onChange={handleChange}\n            defaultValue={values.address}\n            className={hasError('address')}\n          />\n        </div>\n\n        <div className='d-flex justify-content-between buttons-list settings-actions'>\n          <Button danger onClick={handleCancel}>\n            Cancel\n          </Button>\n\n          <Button disabled={!isValid} type='primary' htmlType='submit'>\n            {submitText}\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PatientForm;\n"]},"metadata":{},"sourceType":"module"}