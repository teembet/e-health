{"ast":null,"code":"import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/divider/style\";import _Divider from\"antd/es/divider\";import\"antd/es/select/style\";import _Select from\"antd/es/select\";import\"antd/es/auto-complete/style\";import _AutoComplete from\"antd/es/auto-complete\";import _objectSpread from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import React from'react';import{useFormik}from'formik';import*as Yup from'yup';import Socials from'../../../layout/components/socials/Socials';import ImageLoader from'../../../layout/components/patients/ImageLoader';import{hasErrorFactory}from'../../../utils/hasError';import{useFetch}from'../../../hooks/useFetch';var TextArea=_Input.TextArea;var doctorScheme=Yup.object({role:Yup.string().required(),name:Yup.string().required(),lastName:Yup.string().required(),img:Yup.string().required(),gender:Yup.string().required(),address:Yup.string().required()});var initialValues={role:null,name:null,lastName:null,img:null,gender:null,address:null,social:[{icon:'icofont-instagram',link:'#'},{icon:'icofont-facebook',link:'#'},{icon:'icofont-twitter',link:'#'}]};var DoctorForm=function DoctorForm(_ref){var _onSubmit=_ref.onSubmit,onCancel=_ref.onCancel;var _useFetch=useFetch('./data/doctors-specialists.json',[]),_useFetch2=_slicedToArray(_useFetch,1),roles=_useFetch2[0];var _useFormik=useFormik({initialValues:initialValues,validationSchema:doctorScheme,validateOnMount:true,initialErrors:{name:null},onSubmit:function onSubmit(values){_onSubmit(values);}}),setFieldTouched=_useFormik.setFieldTouched,handleChange=_useFormik.handleChange,handleBlur=_useFormik.handleBlur,values=_useFormik.values,setValues=_useFormik.setValues,isValid=_useFormik.isValid,errors=_useFormik.errors,touched=_useFormik.touched;var handleGenderSelect=function handleGenderSelect(gender){setValues(_objectSpread(_objectSpread({},values),{},{gender:gender}));};var handleRoleSelect=function handleRoleSelect(role){setValues(_objectSpread(_objectSpread({},values),{},{role:role}));};var handleImgLoad=function handleImgLoad(img){setValues(_objectSpread(_objectSpread({},values),{},{img:img}));};var handleCancel=function handleCancel(){onCancel();};var handleSubmit=function handleSubmit(){if(!isValid)return;_onSubmit(values);onCancel();};var hasError=hasErrorFactory(touched,errors);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(_Form,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(ImageLoader,{onLoad:handleImgLoad,src:values.img})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Input,{name:\"name\",type:\"text\",placeholder:\"First name\",onChange:handleChange,onBlur:handleBlur,defaultValue:values.name,className:hasError('name')})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Input,{type:\"text\",name:\"lastName\",placeholder:\"Last name\",onChange:handleChange,onBlur:handleBlur,defaultValue:values.lastName,className:hasError('lastName')})),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_AutoComplete,{filterOption:true,options:roles,placeholder:\"Speciality\",onSelect:handleRoleSelect,onBlur:handleBlur,className:hasError('role')}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-6 col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(_Select,{placeholder:\"Gender\",onChange:handleGenderSelect,defaultValue:values.gender,className:hasError('gender'),onBlur:function onBlur(){return setFieldTouched('gender');}},/*#__PURE__*/React.createElement(_Select.Option,{value:\"Male\"},\"Male\"),/*#__PURE__*/React.createElement(_Select.Option,{value:\"Female\"},\"Female\"))))),/*#__PURE__*/React.createElement(TextArea,{rows:3,name:\"address\",placeholder:\"Address\",onBlur:handleBlur,onChange:handleChange,defaultValue:values.address,className:hasError('address')}),/*#__PURE__*/React.createElement(_Divider,null),/*#__PURE__*/React.createElement(Socials,{links:values.social}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between buttons-list settings-actions mt-4\"},/*#__PURE__*/React.createElement(_Button,{danger:true,onClick:handleCancel},\"Cancel\"),/*#__PURE__*/React.createElement(_Button,{disabled:!isValid,onClick:handleSubmit,htmlType:\"submit\",type:\"primary\"},\"Add Doctor\"))));};export default DoctorForm;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/dashboards/doctors/DoctorForm.tsx"],"names":["React","useFormik","Yup","Socials","ImageLoader","hasErrorFactory","useFetch","TextArea","doctorScheme","object","role","string","required","name","lastName","img","gender","address","initialValues","social","icon","link","DoctorForm","onSubmit","onCancel","roles","validationSchema","validateOnMount","initialErrors","values","setFieldTouched","handleChange","handleBlur","setValues","isValid","errors","touched","handleGenderSelect","handleRoleSelect","handleImgLoad","handleCancel","handleSubmit","hasError"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useFormik } from 'formik';\nimport { Form, Button, Input, Select, AutoComplete, Divider } from 'antd';\nimport * as Yup from 'yup';\n\nimport Socials from '../../../layout/components/socials/Socials';\nimport ImageLoader from '../../../layout/components/patients/ImageLoader';\n\nimport { hasErrorFactory } from '../../../utils/hasError';\nimport { useFetch } from '../../../hooks/useFetch';\nimport { IUser } from '../../../interfaces/user';\n\nconst { TextArea } = Input;\n\ntype Props = {\n  onSubmit: (doctor: IUser) => void;\n  onCancel: () => void;\n};\n\nconst doctorScheme = Yup.object({\n  role: Yup.string().required(),\n  name: Yup.string().required(),\n  lastName: Yup.string().required(),\n  img: Yup.string().required(),\n  gender: Yup.string().required(),\n  address: Yup.string().required()\n});\n\nconst initialValues = {\n  role: null,\n  name: null,\n  lastName: null,\n  img: null,\n  gender: null,\n  address: null,\n  social: [\n    {\n      icon: 'icofont-instagram',\n      link: '#'\n    },\n    {\n      icon: 'icofont-facebook',\n      link: '#'\n    },\n    {\n      icon: 'icofont-twitter',\n      link: '#'\n    }\n  ]\n};\n\nconst DoctorForm = ({ onSubmit, onCancel }: Props) => {\n  const [roles] = useFetch<{ value: string }[]>('./data/doctors-specialists.json', []);\n  const {\n    setFieldTouched,\n    handleChange,\n    handleBlur,\n    values,\n    setValues,\n    isValid,\n    errors,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema: doctorScheme,\n    validateOnMount: true,\n    initialErrors: { name: null },\n    onSubmit: (values) => {\n      onSubmit(values);\n    }\n  });\n\n  const handleGenderSelect = (gender) => {\n    setValues({ ...values, gender });\n  };\n\n  const handleRoleSelect = (role) => {\n    setValues({ ...values, role });\n  };\n\n  const handleImgLoad = (img) => {\n    setValues({ ...values, img });\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  const handleSubmit = () => {\n    if (!isValid) return;\n\n    onSubmit(values);\n    onCancel();\n  };\n\n  const hasError = hasErrorFactory(touched, errors);\n\n  return (\n    <>\n      <Form>\n        <div className='form-group'>\n          <ImageLoader onLoad={handleImgLoad} src={values.img} />\n        </div>\n\n        <div className='form-group'>\n          <Input\n            name='name'\n            type='text'\n            placeholder='First name'\n            onChange={handleChange}\n            onBlur={handleBlur}\n            defaultValue={values.name}\n            className={hasError('name')}\n          />\n        </div>\n\n        <div className='form-group'>\n          <Input\n            type='text'\n            name='lastName'\n            placeholder='Last name'\n            onChange={handleChange}\n            onBlur={handleBlur}\n            defaultValue={values.lastName}\n            className={hasError('lastName')}\n          />\n        </div>\n\n        <div className='row'>\n          <div className='col-sm-6 col-12'>\n            <div className='form-group'>\n              <AutoComplete\n                filterOption\n                options={roles}\n                placeholder='Speciality'\n                onSelect={handleRoleSelect}\n                onBlur={handleBlur}\n                className={hasError('role')}\n              />\n            </div>\n          </div>\n\n          <div className='col-sm-6 col-12'>\n            <div className='form-group'>\n              <Select\n                placeholder='Gender'\n                onChange={handleGenderSelect}\n                defaultValue={values.gender}\n                className={hasError('gender')}\n                onBlur={() => setFieldTouched('gender')}\n              >\n                <Select.Option value='Male'>Male</Select.Option>\n                <Select.Option value='Female'>Female</Select.Option>\n              </Select>\n            </div>\n          </div>\n        </div>\n\n        <TextArea\n          rows={3}\n          name='address'\n          placeholder='Address'\n          onBlur={handleBlur}\n          onChange={handleChange}\n          defaultValue={values.address}\n          className={hasError('address')}\n        />\n\n        <Divider />\n\n        <Socials links={values.social} />\n\n        <div className='d-flex justify-content-between buttons-list settings-actions mt-4'>\n          <Button danger onClick={handleCancel}>\n            Cancel\n          </Button>\n\n          <Button disabled={!isValid} onClick={handleSubmit} htmlType='submit' type='primary'>\n            Add Doctor\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default DoctorForm;\n"]},"metadata":{},"sourceType":"module"}