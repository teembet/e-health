{"ast":null,"code":"import _slicedToArray from\"/Users/Timbet.Ekanem/Downloads/e-health/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useFetchPageData,usePageData}from'../../hooks/usePage';import Contact from'../../layout/components/doctor/Contact';import className from'../../utils/class-names';var pageData={fulFilled:false,title:'Contacts',breadcrumbs:[{title:'UI Kit',route:'default-dashboard'},{title:'Components',route:'default-dashboard'},{title:'Contacts'}]};var ContactsPage=function ContactsPage(){var _useFetchPageData=useFetchPageData('data/contacts.json',[]),_useFetchPageData2=_slicedToArray(_useFetchPageData,1),users=_useFetchPageData2[0];usePageData(pageData);var getClass=function getClass(index,length){return className({'mb-0':index===length-1,'mb-md-0':index===length-2||index===length-3});};return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},users.map(function(user,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"col-sm-12 col-md-6 col-lg-4\"},/*#__PURE__*/React.createElement(Contact,Object.assign({className:getClass(index,users.length)},user)));}));};export default ContactsPage;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/components/ContactsPage.tsx"],"names":["React","useFetchPageData","usePageData","Contact","className","pageData","fulFilled","title","breadcrumbs","route","ContactsPage","users","getClass","index","length","map","user"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,gBAAT,CAA2BC,WAA3B,KAA8C,qBAA9C,CAEA,MAAOC,CAAAA,OAAP,KAAoB,wCAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAKA,GAAMC,CAAAA,QAAmB,CAAG,CAC1BC,SAAS,CAAE,KADe,CAE1BC,KAAK,CAAE,UAFmB,CAG1BC,WAAW,CAAE,CACX,CACED,KAAK,CAAE,QADT,CAEEE,KAAK,CAAE,mBAFT,CADW,CAKX,CACEF,KAAK,CAAE,YADT,CAEEE,KAAK,CAAE,mBAFT,CALW,CASX,CACEF,KAAK,CAAE,UADT,CATW,CAHa,CAA5B,CAkBA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,sBAAgBT,gBAAgB,CAAU,oBAAV,CAAgC,EAAhC,CAAhC,wDAAOU,KAAP,uBACAT,WAAW,CAACG,QAAD,CAAX,CAEA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAgBC,MAAhB,QACfV,CAAAA,SAAS,CAAC,CACR,OAAQS,KAAK,GAAKC,MAAM,CAAG,CADnB,CAER,UAAWD,KAAK,GAAKC,MAAM,CAAG,CAAnB,EAAwBD,KAAK,GAAKC,MAAM,CAAG,CAF9C,CAAD,CADM,EAAjB,CAMA,mBACE,2BAAK,SAAS,CAAC,KAAf,EACGH,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,CAAOH,KAAP,qBACT,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,6BAA3B,eACE,oBAAC,OAAD,gBAAS,SAAS,CAAED,QAAQ,CAACC,KAAD,CAAQF,KAAK,CAACG,MAAd,CAA5B,EAAuDE,IAAvD,EADF,CADS,EAAV,CADH,CADF,CASD,CAnBD,CAqBA,cAAeN,CAAAA,YAAf","sourcesContent":["import React from 'react';\n\nimport { useFetchPageData, usePageData } from '../../hooks/usePage';\n\nimport Contact from '../../layout/components/doctor/Contact';\nimport className from '../../utils/class-names';\n\nimport { IUser } from '../../interfaces/user';\nimport { IPageData } from '../../interfaces/page';\n\nconst pageData: IPageData = {\n  fulFilled: false,\n  title: 'Contacts',\n  breadcrumbs: [\n    {\n      title: 'UI Kit',\n      route: 'default-dashboard',\n    },\n    {\n      title: 'Components',\n      route: 'default-dashboard',\n    },\n    {\n      title: 'Contacts',\n    },\n  ],\n};\n\nconst ContactsPage = () => {\n  const [users] = useFetchPageData<IUser[]>('data/contacts.json', []);\n  usePageData(pageData);\n\n  const getClass = (index: number, length: number) =>\n    className({\n      'mb-0': index === length - 1,\n      'mb-md-0': index === length - 2 || index === length - 3,\n    });\n\n  return (\n    <div className='row'>\n      {users.map((user, index) => (\n        <div key={index} className='col-sm-12 col-md-6 col-lg-4'>\n          <Contact className={getClass(index, users.length)} {...user} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"]},"metadata":{},"sourceType":"module"}