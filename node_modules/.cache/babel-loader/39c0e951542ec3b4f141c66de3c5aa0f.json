{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/tables/CollSpan.tsx\";\nimport React from 'react';\n\nconst renderContent = (value, row, index) => {\n  const obj = {\n    children: value,\n    props: {}\n  };\n\n  if (index === 4) {\n    obj.props.colSpan = 0;\n  }\n\n  return obj;\n};\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: (text, row, index) => {\n    if (index < 4) {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        onClick: e => e.preventDefault(),\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }\n      }, text);\n    }\n\n    return {\n      children: /*#__PURE__*/React.createElement(\"a\", {\n        onClick: e => e.preventDefault(),\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, text),\n      props: {\n        colSpan: 5\n      }\n    };\n  }\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  render: renderContent\n}, {\n  title: 'Home phone',\n  colSpan: 2,\n  dataIndex: 'tel',\n  render: (value, row, index) => {\n    const obj = {\n      children: value,\n      props: {}\n    };\n\n    if (index === 2) {\n      obj.props.rowSpan = 2;\n    } // These two are merged into above cell\n\n\n    if (index === 3) {\n      obj.props.rowSpan = 0;\n    }\n\n    if (index === 4) {\n      obj.props.colSpan = 0;\n    }\n\n    return obj;\n  }\n}, {\n  title: 'Phone',\n  colSpan: 0,\n  dataIndex: 'phone',\n  render: renderContent\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  render: renderContent\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  tel: '0571-22098909',\n  phone: 18889898989,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  tel: '0571-22098333',\n  phone: 18889898888,\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  tel: '0575-22098909',\n  phone: 18900010002,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 18,\n  tel: '0575-22098909',\n  phone: 18900010002,\n  address: 'London No. 2 Lake Park'\n}, {\n  key: '5',\n  name: 'Jake White',\n  age: 18,\n  tel: '0575-22098909',\n  phone: 18900010002,\n  address: 'Dublin No. 2 Lake Park'\n}];\n\nconst CollSpan = () => {\n  return /*#__PURE__*/React.createElement(_Table, {\n    pagination: false,\n    columns: columns,\n    dataSource: data,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default CollSpan;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/tables/CollSpan.tsx"],"names":["React","renderContent","value","row","index","obj","children","props","colSpan","columns","title","dataIndex","render","text","e","preventDefault","rowSpan","data","key","name","age","tel","phone","address","CollSpan"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,KAAb,KAAuB;AAC3C,QAAMC,GAAQ,GAAG;AACfC,IAAAA,QAAQ,EAAEJ,KADK;AAEfK,IAAAA,KAAK,EAAE;AAFQ,GAAjB;;AAIA,MAAIH,KAAK,KAAK,CAAd,EAAiB;AACfC,IAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,GAAoB,CAApB;AACD;;AACD,SAAOH,GAAP;AACD,CATD;;AAWA,MAAMI,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOV,GAAP,EAAYC,KAAZ,KAAsB;AAC5B,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,0BAAO;AAAG,QAAA,OAAO,EAAEU,CAAC,IAAIA,CAAC,CAACC,cAAF,EAAjB;AAAqC,QAAA,IAAI,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CF,IAA/C,CAAP;AACD;;AACD,WAAO;AACLP,MAAAA,QAAQ,eAAE;AAAG,QAAA,OAAO,EAAEQ,CAAC,IAAIA,CAAC,CAACC,cAAF,EAAjB;AAAqC,QAAA,IAAI,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CF,IAA/C,CADL;AAELN,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ;AAFF,KAAP;AAMD;AAbH,CADc,EAgBd;AACEE,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,MAAM,EAAEX;AAHV,CAhBc,EAqBd;AACES,EAAAA,KAAK,EAAE,YADT;AAEEF,EAAAA,OAAO,EAAE,CAFX;AAGEG,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,MAAM,EAAE,CAACV,KAAD,EAAQC,GAAR,EAAaC,KAAb,KAAuB;AAC7B,UAAMC,GAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAEJ,KADK;AAEfK,MAAAA,KAAK,EAAE;AAFQ,KAAjB;;AAIA,QAAIH,KAAK,KAAK,CAAd,EAAiB;AACfC,MAAAA,GAAG,CAACE,KAAJ,CAAUS,OAAV,GAAoB,CAApB;AACD,KAP4B,CAQ7B;;;AACA,QAAIZ,KAAK,KAAK,CAAd,EAAiB;AACfC,MAAAA,GAAG,CAACE,KAAJ,CAAUS,OAAV,GAAoB,CAApB;AACD;;AACD,QAAIZ,KAAK,KAAK,CAAd,EAAiB;AACfC,MAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,GAAoB,CAApB;AACD;;AACD,WAAOH,GAAP;AACD;AApBH,CArBc,EA2Cd;AACEK,EAAAA,KAAK,EAAE,OADT;AAEEF,EAAAA,OAAO,EAAE,CAFX;AAGEG,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,MAAM,EAAEX;AAJV,CA3Cc,EAiDd;AACES,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,MAAM,EAAEX;AAHV,CAjDc,CAAhB;AAwDA,MAAMgB,IAAI,GAAG,CACX;AACEC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,GAAG,EAAE,eAJP;AAKEC,EAAAA,KAAK,EAAE,WALT;AAMEC,EAAAA,OAAO,EAAE;AANX,CADW,EASX;AACEL,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEE,EAAAA,GAAG,EAAE,eAHP;AAIEC,EAAAA,KAAK,EAAE,WAJT;AAKEF,EAAAA,GAAG,EAAE,EALP;AAMEG,EAAAA,OAAO,EAAE;AANX,CATW,EAiBX;AACEL,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,GAAG,EAAE,eAJP;AAKEC,EAAAA,KAAK,EAAE,WALT;AAMEC,EAAAA,OAAO,EAAE;AANX,CAjBW,EAyBX;AACEL,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,GAAG,EAAE,eAJP;AAKEC,EAAAA,KAAK,EAAE,WALT;AAMEC,EAAAA,OAAO,EAAE;AANX,CAzBW,EAiCX;AACEL,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,GAAG,EAAE,eAJP;AAKEC,EAAAA,KAAK,EAAE,WALT;AAMEC,EAAAA,OAAO,EAAE;AANX,CAjCW,CAAb;;AA2CA,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBAAO;AAAO,IAAA,UAAU,EAAE,KAAnB;AAA0B,IAAA,OAAO,EAAEf,OAAnC;AAA4C,IAAA,UAAU,EAAEQ,IAAxD;AAA8D,IAAA,QAAQ,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAIA,eAAeO,QAAf","sourcesContent":["import React from 'react';\nimport { Table } from 'antd';\n\nconst renderContent = (value, row, index) => {\n  const obj: any = {\n    children: value,\n    props: {}\n  };\n  if (index === 4) {\n    obj.props.colSpan = 0;\n  }\n  return obj;\n};\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    render: (text, row, index) => {\n      if (index < 4) {\n        return <a onClick={e => e.preventDefault()} href='#'>{text}</a>;\n      }\n      return {\n        children: <a onClick={e => e.preventDefault()} href='#'>{text}</a>,\n        props: {\n          colSpan: 5\n        }\n      };\n    }\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    render: renderContent\n  },\n  {\n    title: 'Home phone',\n    colSpan: 2,\n    dataIndex: 'tel',\n    render: (value, row, index) => {\n      const obj: any = {\n        children: value,\n        props: {}\n      };\n      if (index === 2) {\n        obj.props.rowSpan = 2;\n      }\n      // These two are merged into above cell\n      if (index === 3) {\n        obj.props.rowSpan = 0;\n      }\n      if (index === 4) {\n        obj.props.colSpan = 0;\n      }\n      return obj;\n    }\n  },\n  {\n    title: 'Phone',\n    colSpan: 0,\n    dataIndex: 'phone',\n    render: renderContent\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    render: renderContent\n  }\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    tel: '0571-22098909',\n    phone: 18889898989,\n    address: 'New York No. 1 Lake Park'\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    tel: '0571-22098333',\n    phone: 18889898888,\n    age: 42,\n    address: 'London No. 1 Lake Park'\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    tel: '0575-22098909',\n    phone: 18900010002,\n    address: 'Sidney No. 1 Lake Park'\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 18,\n    tel: '0575-22098909',\n    phone: 18900010002,\n    address: 'London No. 2 Lake Park'\n  },\n  {\n    key: '5',\n    name: 'Jake White',\n    age: 18,\n    tel: '0575-22098909',\n    phone: 18900010002,\n    address: 'Dublin No. 2 Lake Park'\n  }\n];\n\nconst CollSpan = () => {\n  return <Table pagination={false} columns={columns} dataSource={data} bordered />;\n};\n\nexport default CollSpan;\n"]},"metadata":{},"sourceType":"module"}