{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/dashboards/patients/PatientsTable.tsx\";\nimport React, { useState } from 'react';\nimport Search from '../../../layout/components/search/Search';\nimport { history } from '../../../redux/store';\nimport PatientForm from '../../../layout/components/patients/PatientForm';\nimport { useSelector } from 'react-redux';\n\nconst PatientImg = _ref => {\n  let {\n    img\n  } = _ref;\n  const isData = img.startsWith('data:image');\n  const isWithPath = img.startsWith('http');\n\n  if (isData || isWithPath) {\n    return /*#__PURE__*/React.createElement(_Avatar, {\n      size: 40,\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(_Avatar, {\n    size: 40,\n    src: `${window.location.origin}/${img}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  });\n};\n\nconst PatientsTable = _ref2 => {\n  let {\n    patients,\n    onEditPatient,\n    onDeletePatient = () => null\n  } = _ref2;\n  const [patient, setPatient] = useState(null);\n  const [visibility, setVisibility] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [patientsRecords, setPatientsRecords] = useState(patients);\n\n  const closeModal = () => setVisibility(false);\n\n  const user = useSelector(state => state.login[\"user\"]);\n\n  const handleShowInfo = row => history.push({\n    pathname: '/vertical/patient-profile',\n    state: row\n  });\n\n  const handleDeletePatient = id => onDeletePatient(id); // const handleEditPatient = (patient: IPatient) => {\n  //   setPatient(patient);\n  //   setVisibility(true);\n  // };\n\n\n  const actions = patient => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-list nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    shape: \"circle\",\n    onClick: () => handleShowInfo(patient),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-external-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    onClick: handleDeletePatient.bind({}, patient.id),\n    shape: \"circle\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-ui-delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n\n  const columns = [{\n    key: 'img',\n    title: 'Photo',\n    dataIndex: 'img',\n    render: img => /*#__PURE__*/React.createElement(PatientImg, {\n      img: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }\n    })\n  }, {\n    key: 'name',\n    dataIndex: 'name',\n    title: 'Name',\n    sorter: (a, b) => a.name > b.name ? 1 : -1,\n    render: name => /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, name)\n  }, {\n    key: 'id',\n    dataIndex: 'id',\n    title: 'ID',\n    sorter: (a, b) => a.id > b.id ? 1 : -1,\n    render: id => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, id)\n  }, {\n    key: 'age',\n    dataIndex: 'age',\n    title: 'Age',\n    sorter: (a, b) => a.age - b.age,\n    render: age => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, age)\n  }, {\n    key: 'address',\n    dataIndex: 'address',\n    title: 'Address',\n    render: address => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        minWidth: 200,\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 28\n      }\n    }, address)\n  }, {\n    key: 'number',\n    dataIndex: 'number',\n    title: 'Number',\n    render: phone => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-flex align-baseline nowrap\",\n      style: {\n        color: '#336cfb'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icofont icofont-ui-cell-phone mr-1\",\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), phone)\n  }, {\n    key: 'visit',\n    dataIndex: 'lastVisit',\n    title: 'Last visit',\n    render: visit => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, visit)\n  }, {\n    key: 'status',\n    dataIndex: 'status',\n    title: 'Status',\n    render: (status, needDoctor, needLab) =>\n    /*#__PURE__*/\n    // <Tag style={{ borderRadius: 20 }} color={status === 'Approved' ? '#b7ce63' : '#cec759'}>\n    //   {status}\n    // </Tag>\n    React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 8\n      }\n    }, status, \" \", user[\"role\"]),\n    sorter: (a, b) => a.status > b.status ? 1 : -1\n  }, {\n    key: 'actions',\n    title: 'Actions',\n    render: actions\n  }];\n  const pagination = patients.length <= 10 ? false : {};\n\n  const handleSearch = search => {\n    setSearchQuery(search);\n\n    if (search === \"\") {\n      console.log(\"no records\");\n      return setPatientsRecords(patients);\n    }\n\n    const filteredData = patients.filter(person => person.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setPatientsRecords(filteredData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    handleSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(_Table, {\n    pagination: pagination,\n    className: \"accent-header\",\n    rowKey: patientsRecords => patientsRecords.id,\n    dataSource: patientsRecords,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Modal, {\n    visible: visibility,\n    footer: null,\n    onCancel: closeModal,\n    title: /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 16\n      }\n    }, \"Add patient\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PatientForm, {\n    submitText: \"Update patient\",\n    onCancel: closeModal,\n    onSubmit: () => onEditPatient(patient),\n    patient: patient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PatientsTable;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/dashboards/patients/PatientsTable.tsx"],"names":["React","useState","Search","history","PatientForm","useSelector","PatientImg","img","isData","startsWith","isWithPath","window","location","origin","PatientsTable","patients","onEditPatient","onDeletePatient","patient","setPatient","visibility","setVisibility","searchQuery","setSearchQuery","patientsRecords","setPatientsRecords","closeModal","user","state","login","handleShowInfo","row","push","pathname","handleDeletePatient","id","actions","bind","columns","key","title","dataIndex","render","sorter","a","b","name","color","age","address","minWidth","display","phone","fontSize","visit","status","needDoctor","needLab","pagination","length","handleSearch","search","console","log","filteredData","filter","person","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Avatar, Table, Button, Modal, Tag } from 'antd';\nimport { ColumnProps } from 'antd/es/table';\nimport Search from '../../../layout/components/search/Search';\nimport { IPatient } from '../../../interfaces/patient';\n\nimport { AppState, history } from '../../../redux/store';\nimport PatientForm from '../../../layout/components/patients/PatientForm';\nimport { useSelector } from 'react-redux';\n\ntype Props = {\n  patients;\n  onEditPatient?: (patient: IPatient) => void;\n  onDeletePatient?: (id: string) => void;\n};\n\ntype PatientsImgProps = {\n  img: string;\n};\n\nconst PatientImg = ({ img }: PatientsImgProps) => {\n  const isData = img.startsWith('data:image');\n  const isWithPath = img.startsWith('http');\n\n  if (isData || isWithPath) {\n    return <Avatar size={40} src={img} />;\n  }\n\n  return <Avatar size={40} src={`${window.location.origin}/${img}`} />;\n};\n\nconst PatientsTable = ({\n  patients,\n  onEditPatient,\n  onDeletePatient = () => null\n}: Props) => {\n  const [patient, setPatient] = useState(null);\n  const [visibility, setVisibility] = useState(false);\nconst [searchQuery,setSearchQuery]=useState(\"\")\n\nconst [patientsRecords,setPatientsRecords] =useState(patients)\n  const closeModal = () => setVisibility(false);\n  const user=useSelector((state:AppState)=>state.login[\"user\"]);\n  const handleShowInfo = (row) => history.push({pathname:'/vertical/patient-profile',\n  state:row});\n  const handleDeletePatient = (id) => onDeletePatient(id);\n  // const handleEditPatient = (patient: IPatient) => {\n  //   setPatient(patient);\n  //   setVisibility(true);\n  // };\n\n  const actions = (patient: IPatient) => (\n    <div className='buttons-list nowrap'>\n      <Button shape='circle' onClick={()=>handleShowInfo(patient)}>\n        <span className='icofont icofont-external-link' />\n      </Button>\n      {/* <Button onClick={()=>handleEditPatient(patient)} shape='circle' type='primary'>\n        <span className='icofont icofont-edit-alt' />\n      </Button> */}\n      <Button onClick={handleDeletePatient.bind({}, patient.id)} shape='circle' danger>\n        <span className='icofont icofont-ui-delete' />\n      </Button>\n    </div>\n  );\n\n  const columns: ColumnProps<IPatient>[] = [\n    {\n      key: 'img',\n      title: 'Photo',\n      dataIndex: 'img',\n      render: (img) => <PatientImg img={img} />\n    },\n    {\n      key: 'name',\n      dataIndex: 'name',\n      title: 'Name',\n      sorter: (a, b) => (a.name > b.name ? 1 : -1),\n      render: (name) => <strong>{name}</strong>\n    },\n    {\n      key: 'id',\n      dataIndex: 'id',\n      title: 'ID',\n      sorter: (a, b) => (a.id > b.id ? 1 : -1),\n      render: (id) => (\n        <span className='nowrap' style={{ color: '#a5a5a5' }}>\n          {id}\n        </span>\n      )\n    },\n    {\n      key: 'age',\n      dataIndex: 'age',\n      title: 'Age',\n      sorter: (a, b) => a.age - b.age,\n      render: (age) => (\n        <span className='nowrap' style={{ color: '#a5a5a5' }}>\n          {age}\n        </span>\n      )\n    },\n    {\n      key: 'address',\n      dataIndex: 'address',\n      title: 'Address',\n      render: (address) => <span style={{ minWidth: 200, display: 'block' }}>{address}</span>\n    },\n    {\n      key: 'number',\n      dataIndex: 'number',\n      title: 'Number',\n      render: (phone) => (\n        <span className='d-flex align-baseline nowrap' style={{ color: '#336cfb' }}>\n          <span className='icofont icofont-ui-cell-phone mr-1' style={{ fontSize: 16 }} />\n          {phone}\n        </span>\n      )\n    },\n    {\n      key: 'visit',\n      dataIndex: 'lastVisit',\n      title: 'Last visit',\n      render: (visit) => (\n        <span className='nowrap' style={{ color: '#a5a5a5' }}>\n          {visit}\n        </span>\n      )\n    },\n    {\n      key: 'status',\n      dataIndex: 'status',\n      title: 'Status',\n      render: (status,needDoctor,needLab) => (\n        // <Tag style={{ borderRadius: 20 }} color={status === 'Approved' ? '#b7ce63' : '#cec759'}>\n        //   {status}\n        // </Tag>\n       <span className='nowrap' style={{ color: '#a5a5a5' }}  >\n        {status} {user[\"role\"]}\n      </span> \n  \n     \n      ),\n      sorter: (a, b) => (a.status > b.status ? 1 : -1)\n    },\n    {\n      key: 'actions',\n      title: 'Actions',\n      render: actions\n    }\n  ];\n\n  const pagination = patients.length <= 10 ? false : {};\nconst handleSearch=(search)=>{\nsetSearchQuery(search);\nif(search===\"\"){\n  console.log(\"no records\")\n  return setPatientsRecords(patients)\n}\n\nconst filteredData=patients.filter(person=>\nperson.name.toLowerCase().includes(searchQuery.toLowerCase()))\nsetPatientsRecords(filteredData)\n}\n  return (\n    <>\n     <div className=\"mb-3\">\n    <Search handleSearch={handleSearch}/>\n    </div>\n      <Table\n        pagination={pagination}\n        className='accent-header'\n        rowKey={patientsRecords=>patientsRecords.id}\n        dataSource={patientsRecords}\n        columns={columns}\n      />\n\n      <Modal\n        visible={visibility}\n        footer={null}\n        onCancel={closeModal}\n        title={<h3 className='title'>Add patient</h3>}\n      >\n        <PatientForm\n          submitText='Update patient'\n          onCancel={closeModal}\n          onSubmit={()=>onEditPatient(patient)}\n          patient={patient}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default PatientsTable;\n"]},"metadata":{},"sourceType":"module"}