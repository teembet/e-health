{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/dashboards/patients/PatientsTable.tsx\";\nimport React, { useState } from 'react';\nimport Search from '../../../layout/components/search/Search';\nimport { history } from '../../../redux/store';\nimport PatientForm from '../../../layout/components/patients/PatientForm';\n\nconst PatientImg = _ref => {\n  let {\n    img\n  } = _ref;\n  const isData = img.startsWith('data:image');\n  const isWithPath = img.startsWith('http');\n\n  if (isData || isWithPath) {\n    return /*#__PURE__*/React.createElement(_Avatar, {\n      size: 40,\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(_Avatar, {\n    size: 40,\n    src: `${window.location.origin}/${img}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n};\n\nconst PatientsTable = _ref2 => {\n  let {\n    patients,\n    onEditPatient = () => null,\n    onDeletePatient = () => null\n  } = _ref2;\n  const [patient, setPatient] = useState(null);\n  const [visibility, setVisibility] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n\n  const closeModal = () => setVisibility(false);\n\n  const handleShowInfo = () => history.push('/vertical/patient-profile');\n\n  const handleDeletePatient = id => onDeletePatient(id);\n\n  const handleEditPatient = patient => {\n    setPatient(patient);\n    setVisibility(true);\n  };\n\n  const actions = patient => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-list nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    shape: \"circle\",\n    onClick: handleShowInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-external-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    onClick: handleEditPatient.bind({}, patient),\n    shape: \"circle\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-edit-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    onClick: handleDeletePatient.bind({}, patient.id),\n    shape: \"circle\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-ui-delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n\n  const columns = [{\n    key: 'img',\n    title: 'Photo',\n    dataIndex: 'img',\n    render: img => /*#__PURE__*/React.createElement(PatientImg, {\n      img: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }\n    })\n  }, {\n    key: 'name',\n    dataIndex: 'name',\n    title: 'Name',\n    sorter: (a, b) => a.name > b.name ? 1 : -1,\n    render: name => /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, name)\n  }, {\n    key: 'id',\n    dataIndex: 'id',\n    title: 'ID',\n    sorter: (a, b) => a.id > b.id ? 1 : -1,\n    render: id => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, id)\n  }, {\n    key: 'age',\n    dataIndex: 'age',\n    title: 'Age',\n    sorter: (a, b) => a.age - b.age,\n    render: age => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, age)\n  }, {\n    key: 'address',\n    dataIndex: 'address',\n    title: 'Address',\n    render: address => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        minWidth: 200,\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 28\n      }\n    }, address)\n  }, {\n    key: 'number',\n    dataIndex: 'number',\n    title: 'Number',\n    render: phone => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-flex align-baseline nowrap\",\n      style: {\n        color: '#336cfb'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icofont icofont-ui-cell-phone mr-1\",\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), phone)\n  }, {\n    key: 'visit',\n    dataIndex: 'lastVisit',\n    title: 'Last visit',\n    render: visit => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, visit)\n  }, {\n    key: 'status',\n    dataIndex: 'status',\n    title: 'Status',\n    render: status => /*#__PURE__*/React.createElement(_Tag, {\n      style: {\n        borderRadius: 20\n      },\n      color: status === 'Approved' ? '#b7ce63' : '#cec759',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, status),\n    sorter: (a, b) => a.status > b.status ? 1 : -1\n  }, {\n    key: 'actions',\n    title: 'Actions',\n    render: actions\n  }];\n  const pagination = patients.length <= 10 ? false : {};\n\n  const handleSearch = search => {\n    setSearchQuery(search);\n    patients.map(person => {\n      if (person.name.includes(searchQuery)) {\n        setFilterData(person);\n        const data = [];\n        person.push(data);\n        console.log(data.length, \"filter\");\n      }\n\n      return false;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    handleSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(_Table, {\n    pagination: pagination,\n    className: \"accent-header\",\n    rowKey: \"id\",\n    dataSource: filterData.length > 0 ? filterData : patients,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_Modal, {\n    visible: visibility,\n    footer: null,\n    onCancel: closeModal,\n    title: /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 16\n      }\n    }, \"Add patient\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PatientForm, {\n    submitText: \"Update patient\",\n    onCancel: closeModal,\n    onSubmit: onEditPatient,\n    patient: patient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PatientsTable;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/dashboards/patients/PatientsTable.tsx"],"names":["React","useState","Search","history","PatientForm","PatientImg","img","isData","startsWith","isWithPath","window","location","origin","PatientsTable","patients","onEditPatient","onDeletePatient","patient","setPatient","visibility","setVisibility","searchQuery","setSearchQuery","filterData","setFilterData","closeModal","handleShowInfo","push","handleDeletePatient","id","handleEditPatient","actions","bind","columns","key","title","dataIndex","render","sorter","a","b","name","color","age","address","minWidth","display","phone","fontSize","visit","status","borderRadius","pagination","length","handleSearch","search","map","person","includes","data","console","log"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAOC,MAAP,MAAmB,0CAAnB;AAGA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;;AAYA,MAAMC,UAAU,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;AAChD,QAAMC,MAAM,GAAGD,GAAG,CAACE,UAAJ,CAAe,YAAf,CAAf;AACA,QAAMC,UAAU,GAAGH,GAAG,CAACE,UAAJ,CAAe,MAAf,CAAnB;;AAEA,MAAID,MAAM,IAAIE,UAAd,EAA0B;AACxB,wBAAO;AAAQ,MAAA,IAAI,EAAE,EAAd;AAAkB,MAAA,GAAG,EAAEH,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBAAO;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAkB,IAAA,GAAG,EAAG,GAAEI,MAAM,CAACC,QAAP,CAAgBC,MAAO,IAAGN,GAAI,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CATD;;AAWA,MAAMO,aAAa,GAAG,SAIT;AAAA,MAJU;AACrBC,IAAAA,QADqB;AAErBC,IAAAA,aAAa,GAAG,MAAM,IAFD;AAGrBC,IAAAA,eAAe,GAAG,MAAM;AAHH,GAIV;AACX,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACF,QAAM,CAACoB,WAAD,EAAaC,cAAb,IAA6BrB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACsB,UAAD,EAAYC,aAAZ,IAA2BvB,QAAQ,CAAC,EAAD,CAAzC;;AACE,QAAMwB,UAAU,GAAG,MAAML,aAAa,CAAC,KAAD,CAAtC;;AAEA,QAAMM,cAAc,GAAG,MAAMvB,OAAO,CAACwB,IAAR,CAAa,2BAAb,CAA7B;;AACA,QAAMC,mBAAmB,GAAIC,EAAD,IAAQb,eAAe,CAACa,EAAD,CAAnD;;AACA,QAAMC,iBAAiB,GAAIb,OAAD,IAAuB;AAC/CC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMW,OAAO,GAAId,OAAD,iBACd;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAES,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAQ,IAAA,OAAO,EAAEI,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2Bf,OAA3B,CAAjB;AAAsD,IAAA,KAAK,EAAC,QAA5D;AAAqE,IAAA,IAAI,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE;AAAQ,IAAA,OAAO,EAAEW,mBAAmB,CAACI,IAApB,CAAyB,EAAzB,EAA6Bf,OAAO,CAACY,EAArC,CAAjB;AAA2D,IAAA,KAAK,EAAC,QAAjE;AAA0E,IAAA,MAAM,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;;AAcA,QAAMI,OAAgC,GAAG,CACvC;AACEC,IAAAA,GAAG,EAAE,KADP;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,MAAM,EAAG/B,GAAD,iBAAS,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJnB,GADuC,EAOvC;AACE4B,IAAAA,GAAG,EAAE,MADP;AAEEE,IAAAA,SAAS,EAAE,MAFb;AAGED,IAAAA,KAAK,EAAE,MAHT;AAIEG,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAJ5C;AAKEJ,IAAAA,MAAM,EAAGI,IAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,IAAT;AALpB,GAPuC,EAcvC;AACEP,IAAAA,GAAG,EAAE,IADP;AAEEE,IAAAA,SAAS,EAAE,IAFb;AAGED,IAAAA,KAAK,EAAE,IAHT;AAIEG,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACV,EAAF,GAAOW,CAAC,CAACX,EAAT,GAAc,CAAd,GAAkB,CAAC,CAJxC;AAKEQ,IAAAA,MAAM,EAAGR,EAAD,iBACN;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,EADH;AANJ,GAduC,EAyBvC;AACEK,IAAAA,GAAG,EAAE,KADP;AAEEE,IAAAA,SAAS,EAAE,KAFb;AAGED,IAAAA,KAAK,EAAE,KAHT;AAIEG,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,GAAF,GAAQH,CAAC,CAACG,GAJ9B;AAKEN,IAAAA,MAAM,EAAGM,GAAD,iBACN;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,GADH;AANJ,GAzBuC,EAoCvC;AACET,IAAAA,GAAG,EAAE,SADP;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGED,IAAAA,KAAK,EAAE,SAHT;AAIEE,IAAAA,MAAM,EAAGO,OAAD,iBAAa;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDF,OAAnD;AAJvB,GApCuC,EA0CvC;AACEV,IAAAA,GAAG,EAAE,QADP;AAEEE,IAAAA,SAAS,EAAE,QAFb;AAGED,IAAAA,KAAK,EAAE,QAHT;AAIEE,IAAAA,MAAM,EAAGU,KAAD,iBACN;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAA+C,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,oCAAhB;AAAqD,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGD,KAFH;AALJ,GA1CuC,EAqDvC;AACEb,IAAAA,GAAG,EAAE,OADP;AAEEE,IAAAA,SAAS,EAAE,WAFb;AAGED,IAAAA,KAAK,EAAE,YAHT;AAIEE,IAAAA,MAAM,EAAGY,KAAD,iBACN;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEP,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,KADH;AALJ,GArDuC,EA+DvC;AACEf,IAAAA,GAAG,EAAE,QADP;AAEEE,IAAAA,SAAS,EAAE,QAFb;AAGED,IAAAA,KAAK,EAAE,QAHT;AAIEE,IAAAA,MAAM,EAAGa,MAAD,iBACN;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAkC,MAAA,KAAK,EAAED,MAAM,KAAK,UAAX,GAAwB,SAAxB,GAAoC,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MADH,CALJ;AASEZ,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACW,MAAF,GAAWV,CAAC,CAACU,MAAb,GAAsB,CAAtB,GAA0B,CAAC;AAThD,GA/DuC,EA0EvC;AACEhB,IAAAA,GAAG,EAAE,SADP;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEE,IAAAA,MAAM,EAAEN;AAHV,GA1EuC,CAAzC;AAiFA,QAAMqB,UAAU,GAAGtC,QAAQ,CAACuC,MAAT,IAAmB,EAAnB,GAAwB,KAAxB,GAAgC,EAAnD;;AACF,QAAMC,YAAY,GAAEC,MAAD,IAAU;AAC7BjC,IAAAA,cAAc,CAACiC,MAAD,CAAd;AAEAzC,IAAAA,QAAQ,CAAC0C,GAAT,CAAcC,MAAD,IAAU;AACrB,UAAIA,MAAM,CAAChB,IAAP,CAAYiB,QAAZ,CAAqBrC,WAArB,CAAJ,EAAsC;AACvCG,QAAAA,aAAa,CAACiC,MAAD,CAAb;AACA,cAAME,IAAI,GAAC,EAAX;AACAF,QAAAA,MAAM,CAAC9B,IAAP,CAAYgC,IAAZ;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACN,MAAjB,EAAwB,QAAxB;AACG;;AACD,aAAO,KAAP;AACD,KARD;AASC,GAZD;;AAaE,sBACE,uDACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADD,eAIE;AACE,IAAA,UAAU,EAAEF,UADd;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,MAAM,EAAC,IAHT;AAIE,IAAA,UAAU,EAAE7B,UAAU,CAAC8B,MAAX,GAAkB,CAAlB,GAAoB9B,UAApB,GAA+BT,QAJ7C;AAKE,IAAA,OAAO,EAAEmB,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYE;AACE,IAAA,OAAO,EAAEd,UADX;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,QAAQ,EAAEM,UAHZ;AAIE,IAAA,KAAK,eAAE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AACE,IAAA,UAAU,EAAC,gBADb;AAEE,IAAA,QAAQ,EAAEA,UAFZ;AAGE,IAAA,QAAQ,EAAEV,aAHZ;AAIE,IAAA,OAAO,EAAEE,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAZF,CADF;AA4BD,CA3JD;;AA6JA,eAAeJ,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Avatar, Table, Button, Modal, Tag } from 'antd';\nimport { ColumnProps } from 'antd/es/table';\nimport Search from '../../../layout/components/search/Search';\nimport { IPatient } from '../../../interfaces/patient';\n\nimport { history } from '../../../redux/store';\nimport PatientForm from '../../../layout/components/patients/PatientForm';\n\ntype Props = {\n  patients;\n  onEditPatient?: (patient: IPatient) => void;\n  onDeletePatient?: (id: string) => void;\n};\n\ntype PatientsImgProps = {\n  img: string;\n};\n\nconst PatientImg = ({ img }: PatientsImgProps) => {\n  const isData = img.startsWith('data:image');\n  const isWithPath = img.startsWith('http');\n\n  if (isData || isWithPath) {\n    return <Avatar size={40} src={img} />;\n  }\n\n  return <Avatar size={40} src={`${window.location.origin}/${img}`} />;\n};\n\nconst PatientsTable = ({\n  patients,\n  onEditPatient = () => null,\n  onDeletePatient = () => null\n}: Props) => {\n  const [patient, setPatient] = useState(null);\n  const [visibility, setVisibility] = useState(false);\nconst [searchQuery,setSearchQuery]=useState(\"\")\nconst [filterData,setFilterData]=useState([])\n  const closeModal = () => setVisibility(false);\n\n  const handleShowInfo = () => history.push('/vertical/patient-profile');\n  const handleDeletePatient = (id) => onDeletePatient(id);\n  const handleEditPatient = (patient: IPatient) => {\n    setPatient(patient);\n    setVisibility(true);\n  };\n\n  const actions = (patient: IPatient) => (\n    <div className='buttons-list nowrap'>\n      <Button shape='circle' onClick={handleShowInfo}>\n        <span className='icofont icofont-external-link' />\n      </Button>\n      <Button onClick={handleEditPatient.bind({}, patient)} shape='circle' type='primary'>\n        <span className='icofont icofont-edit-alt' />\n      </Button>\n      <Button onClick={handleDeletePatient.bind({}, patient.id)} shape='circle' danger>\n        <span className='icofont icofont-ui-delete' />\n      </Button>\n    </div>\n  );\n\n  const columns: ColumnProps<IPatient>[] = [\n    {\n      key: 'img',\n      title: 'Photo',\n      dataIndex: 'img',\n      render: (img) => <PatientImg img={img} />\n    },\n    {\n      key: 'name',\n      dataIndex: 'name',\n      title: 'Name',\n      sorter: (a, b) => (a.name > b.name ? 1 : -1),\n      render: (name) => <strong>{name}</strong>\n    },\n    {\n      key: 'id',\n      dataIndex: 'id',\n      title: 'ID',\n      sorter: (a, b) => (a.id > b.id ? 1 : -1),\n      render: (id) => (\n        <span className='nowrap' style={{ color: '#a5a5a5' }}>\n          {id}\n        </span>\n      )\n    },\n    {\n      key: 'age',\n      dataIndex: 'age',\n      title: 'Age',\n      sorter: (a, b) => a.age - b.age,\n      render: (age) => (\n        <span className='nowrap' style={{ color: '#a5a5a5' }}>\n          {age}\n        </span>\n      )\n    },\n    {\n      key: 'address',\n      dataIndex: 'address',\n      title: 'Address',\n      render: (address) => <span style={{ minWidth: 200, display: 'block' }}>{address}</span>\n    },\n    {\n      key: 'number',\n      dataIndex: 'number',\n      title: 'Number',\n      render: (phone) => (\n        <span className='d-flex align-baseline nowrap' style={{ color: '#336cfb' }}>\n          <span className='icofont icofont-ui-cell-phone mr-1' style={{ fontSize: 16 }} />\n          {phone}\n        </span>\n      )\n    },\n    {\n      key: 'visit',\n      dataIndex: 'lastVisit',\n      title: 'Last visit',\n      render: (visit) => (\n        <span className='nowrap' style={{ color: '#a5a5a5' }}>\n          {visit}\n        </span>\n      )\n    },\n    {\n      key: 'status',\n      dataIndex: 'status',\n      title: 'Status',\n      render: (status) => (\n        <Tag style={{ borderRadius: 20 }} color={status === 'Approved' ? '#b7ce63' : '#cec759'}>\n          {status}\n        </Tag>\n      ),\n      sorter: (a, b) => (a.status > b.status ? 1 : -1)\n    },\n    {\n      key: 'actions',\n      title: 'Actions',\n      render: actions\n    }\n  ];\n\n  const pagination = patients.length <= 10 ? false : {};\nconst handleSearch=(search)=>{\nsetSearchQuery(search);\n\npatients.map((person)=>{\n  if (person.name.includes(searchQuery)){\n setFilterData(person)\n const data=[]\n person.push(data)\nconsole.log(data.length,\"filter\")\n  }\n  return false\n})\n}\n  return (\n    <>\n     <div className=\"mb-3\">\n    <Search handleSearch={handleSearch}/>\n    </div>\n      <Table\n        pagination={pagination}\n        className='accent-header'\n        rowKey='id'\n        dataSource={filterData.length>0?filterData:patients}\n        columns={columns}\n      />\n\n      <Modal\n        visible={visibility}\n        footer={null}\n        onCancel={closeModal}\n        title={<h3 className='title'>Add patient</h3>}\n      >\n        <PatientForm\n          submitText='Update patient'\n          onCancel={closeModal}\n          onSubmit={onEditPatient}\n          patient={patient}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default PatientsTable;\n"]},"metadata":{},"sourceType":"module"}