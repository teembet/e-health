{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/sessions/Sign-in.tsx\";\nimport React, { useState } from 'react';\nimport { LoginOutlined } from '@ant-design/icons/lib';\nimport PublicLayout from '../../layout/public/Public';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'antd/es/form/Form';\nimport { navigateHome } from '../../utils/naviagate-home';\nimport * as userActions from '../../redux/auth/actions';\nimport { useDispatch } from \"react-redux\";\nconst {\n  Item\n} = _Form;\nconst dispatch = useDispatch();\n\nconst SignIn = () => {\n  const [form] = useForm();\n  const [inputValues, setInputValues] = useState(); // const[email,setEmail]=useState('')\n  // const[password,setPassword]=useState('')\n  // const { values, setValues, handleSubmit } = useFormik<IPatient>({\n  //   onSubmit: (values) => setSubmitted(values),\n  //   initialValues: { ...user }\n  // });\n\n  const login = () => {\n    form.validateFields().then(() => {\n      const {\n        email,\n        password\n      } = inputValues;\n\n      if (email !== '' && password !== '') {\n        console.log(email, password);\n        dispatch(userActions.login(email, password));\n      }\n\n      navigateHome();\n    }).catch(() => null);\n  }; //   handleChange = (e) => {\n  //     const { name } = e.target;\n  //     this.setState({ [name]: e.target.value })\n  // }\n\n\n  const handleChange = e => {\n    setInputValues({ ...inputValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PublicLayout, {\n    bgImg: `${window.origin}/content/login-page.jpg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Login form\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-color-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Login to access your Account\"), /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    layout: \"vertical\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    name: \"login\",\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(React.Fragment, null)\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Email\",\n    onChange: handleChange,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(React.Fragment, null)\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: handleChange,\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Switch, {\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, \"Remember me\")), /*#__PURE__*/React.createElement(_Button, {\n    block: false,\n    type: \"primary\",\n    onClick: login,\n    htmlType: \"submit\",\n    icon: /*#__PURE__*/React.createElement(LoginOutlined, {\n      style: {\n        fontSize: '1.3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Forgot password?\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 32\n    }\n  }, \"Sign up!\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/Timbet.Ekanem/Downloads/e-health/frontend/src/pages/sessions/Sign-in.tsx"],"names":["React","useState","LoginOutlined","PublicLayout","Link","useForm","navigateHome","userActions","useDispatch","Item","dispatch","SignIn","form","inputValues","setInputValues","login","validateFields","then","email","password","console","log","catch","handleChange","e","target","name","value","window","origin","required","message","fontSize"],"mappings":"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","sourcesContent":["import React,{ChangeEvent,useState} from 'react';\n\nimport { Button, Form, Input, Switch } from 'antd';\nimport { LoginOutlined } from '@ant-design/icons/lib';\n\nimport PublicLayout from '../../layout/public/Public';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'antd/es/form/Form';\nimport { navigateHome } from '../../utils/naviagate-home';\nimport * as userActions  from '../../redux/auth/actions';\nimport { useDispatch} from \"react-redux\";\nconst { Item } = Form;\n\n\nconst dispatch = useDispatch();\nconst SignIn = () => {\n  const [form] = useForm();\n  interface IUser {\n    email: string;\n    password:string;\n    // submitted:false;\n  }\nconst [inputValues,setInputValues]=useState<IUser>()\n// const[email,setEmail]=useState('')\n// const[password,setPassword]=useState('')\n\n// const { values, setValues, handleSubmit } = useFormik<IPatient>({\n//   onSubmit: (values) => setSubmitted(values),\n//   initialValues: { ...user }\n// });\n\n\n\n  const login = () => {\n   \n    form\n      .validateFields()\n      .then(() => {\n        const { email, password } =inputValues;\n if (email !== '' && password !== '') {\n\n  console.log(email,password)\n            dispatch(userActions.login(email, password));\n        }\n\n        navigateHome()\n       } )\n      .catch(() => null);\n   \n\n  };\n//   handleChange = (e) => {\n//     const { name } = e.target;\n//     this.setState({ [name]: e.target.value })\n// }\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) => {\n    setInputValues({ ...inputValues,[e.target.name]: e.target.value });\n    \n  };\n  return (\n    <PublicLayout bgImg={`${window.origin}/content/login-page.jpg`}>\n      <h4 className='mt-0 mb-1'>Login form</h4>\n\n      <p className='text-color-200'>Login to access your Account</p>\n\n      <Form form={form} layout='vertical' className='mb-4'>\n        <Item name='login' rules={[{ required: true, message: <></> }]}>\n          <Input placeholder='Email'  onChange={handleChange} name='email' />\n        </Item>\n        <Item name='password' rules={[{ required: true, message: <></> }]}>\n          <Input placeholder='Password' type='password' onChange={handleChange} name='password' />\n        </Item>\n\n        <div className='d-flex align-items-center mb-4'>\n          <Switch defaultChecked /> <span className='ml-2'>Remember me</span>\n        </div>\n\n        <Button\n          block={false}\n          type='primary'\n          onClick={login}\n          htmlType='submit'\n          icon={<LoginOutlined style={{ fontSize: '1.3rem' }} />}\n        >\n          Login\n        </Button>\n      </Form>\n      <br />\n      <p className='mb-1'>\n        <a href='#'>Forgot password?</a>\n      </p>\n\n      <p>\n        Don't have an account? <Link to='sign-up'>Sign up!</Link>\n      </p>\n    </PublicLayout>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}